swagger: '2.0'
schemes:
  - https
host: azure.local
info:
  description: 'Client that can be used to query an Azure Search index and upload, merge, or delete documents.'
  title: SearchIndexClient
  version: 2017-11-11-Preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-ms-code-generation-settings:
    syncMethods: None
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/search/data-plane/Microsoft.Azure.Search.Data/preview/2017-11-11-preview/searchindex.json'
      version: '2.0'
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: search-searchindex
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
parameters:
  ApiVersionParameter:
    description: Client Api Version.
    in: query
    name: api-version
    required: true
    type: string
  ClientRequestIdParameter:
    description: The tracking ID sent with the request to help with debugging.
    format: uuid
    in: header
    name: client-request-id
    required: false
    type: string
    x-ms-client-request-id: true
    x-ms-parameter-grouping:
      name: search-request-options
    x-ms-parameter-location: method
  IndexNameParameter:
    description: The name of the Azure Search index.
    in: path
    name: indexName
    required: true
    type: string
    x-ms-parameter-location: client
    x-ms-skip-url-encoding: false
  SearchDnsSuffixParameter:
    default: search.windows.net
    description: The DNS suffix of the Azure Search service. The default is search.windows.net.
    in: path
    name: searchDnsSuffix
    required: true
    type: string
    x-ms-parameter-location: client
    x-ms-skip-url-encoding: true
  SearchServiceNameParameter:
    description: The name of the Azure Search service.
    in: path
    name: searchServiceName
    required: true
    type: string
    x-ms-parameter-location: client
    x-ms-skip-url-encoding: true
paths:
  '/docs(''{key}'')':
    get:
      description: Retrieves a document from the Azure Search index.
      externalDocs:
        url: 'https://docs.microsoft.com/rest/api/searchservice/lookup-document'
      operationId: Documents_Get
      parameters:
        - description: The key of the document to retrieve.
          in: path
          name: key
          required: true
          type: string
        - description: List of field names to retrieve for the document; Any field not retrieved will be missing from the returned document.
          in: query
          items:
            type: string
          name: $select
          type: array
          x-ms-client-name: SelectedFields
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/ClientRequestIdParameter'
      responses:
        '200':
          description: ''
          schema:
            type: object
      tags:
        - Documents
      x-ms-examples:
        SearchIndexGetDocument:
          parameters:
            $select:
              - docId
              - title
              - description
            api-version: 2017-11-11-Preview
            indexName: myindex
            key: '1'
            searchDnsSuffix: search.windows.net
            searchServiceName: myservice
          responses:
            '200':
              body:
                description: Cheapest hotel in town
                docId: '1'
                title: Nice Hotel
  /docs/$count:
    get:
      description: Queries the number of documents in the Azure Search index.
      externalDocs:
        url: 'https://docs.microsoft.com/rest/api/searchservice/Count-Documents'
      operationId: Documents_Count
      parameters:
        - $ref: '#/parameters/ClientRequestIdParameter'
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: ''
          schema:
            format: int64
            type: integer
      tags:
        - Documents
      x-ms-examples:
        SearchIndexCountDocuments:
          parameters:
            api-version: 2017-11-11-Preview
            indexName: myindex
            searchDnsSuffix: search.windows.net
            searchServiceName: myservice
          responses:
            '200':
              body: 427
      x-ms-request-id: request-id
  /docs/autocomplete:
    get:
      description: Autocompletes incomplete query terms based on input text and matching terms in the Azure Search index.
      externalDocs:
        url: 'https://docs.microsoft.com/rest/api/searchservice/autocomplete'
      operationId: Documents_AutocompleteGet
      parameters:
        - $ref: '#/parameters/ClientRequestIdParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The incomplete term which should be auto-completed.
          in: query
          name: search
          required: true
          type: string
          x-ms-client-name: searchText
        - description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
          in: query
          name: suggesterName
          required: true
          type: string
        - description: Autocomplete mode.
          enum:
            - oneTerm
            - twoTerms
            - oneTermWithContext
          in: query
          name: autocompleteMode
          type: string
          x-ms-enum:
            modelAsString: false
            name: AutocompleteMode
          x-ms-parameter-grouping:
            name: AutocompleteParameters
        - description: 'A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will find terms even if there''s a substituted or missing character in the search text. While this provides a better experience in some scenarios it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.'
          in: query
          name: fuzzy
          type: boolean
          x-ms-client-name: UseFuzzyMatching
          x-ms-parameter-grouping:
            name: AutocompleteParameters
        - description: 'A string tag that is appended to hit highlights. Must be set with HighlightPreTag. If omitted, hit highlighting is disabled.'
          in: query
          name: highlightPostTag
          type: string
          x-ms-parameter-grouping:
            name: AutocompleteParameters
        - description: 'A string tag that is prepended to hit highlights. Must be set with HighlightPostTag. If omitted, hit highlighting is disabled.'
          in: query
          name: highlightPreTag
          type: string
          x-ms-parameter-grouping:
            name: AutocompleteParameters
        - description: A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.
          format: double
          in: query
          name: minimumCoverage
          type: number
          x-ms-parameter-grouping:
            name: AutocompleteParameters
        - description: The comma-separated list of field names to consider when querying for auto-completed terms.
          in: query
          items:
            type: string
          name: searchFields
          type: array
          x-ms-parameter-grouping:
            name: AutocompleteParameters
        - description: The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is to 5.
          format: int32
          in: query
          name: $top
          type: integer
          x-ms-parameter-grouping:
            name: AutocompleteParameters
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AutocompleteResult'
            description: The result of Autocomplete query.
      tags:
        - Documents
      x-ms-examples:
        SearchIndexAutocompleteDocumentsGet:
          parameters:
            api-version: 2017-11-11-Preview
            autocompleteMode: oneTerm
            fuzzy: false
            highlightPostTag: </em>
            highlightPreTag: <em>
            indexName: myindex
            minimumCoverage: 80
            search: washington medic
            searchDnsSuffix: search.windows.net
            searchFields:
              - title
              - description
            searchServiceName: myservice
            suggesterName: sg
            top: 10
          responses:
            '200':
              body:
                - queryPlusText: washington medicaid
                  text: medicaid
                - queryPlusText: washington medicare
                  text: medicare
                - queryPlusText: washington medicine
                  text: medicine
      x-ms-request-id: request-id
    post:
      description: Autocompletes incomplete query terms based on input text and matching terms in the Azure Search index.
      externalDocs:
        url: 'https://docs.microsoft.com/rest/api/searchservice/autocomplete'
      operationId: Documents_AutocompletePost
      parameters:
        - $ref: '#/parameters/ClientRequestIdParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - description: The definition of the Autocomplete request.
          in: body
          name: autocompleteRequest
          required: true
          schema:
            $ref: '#/definitions/AutocompleteRequest'
            description: The Autocomplete request.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AutocompleteResult'
            description: The result of Autocomplete query.
      tags:
        - Documents
      x-ms-examples:
        SearchIndexAutocompleteDocumentsPost:
          parameters:
            api-version: 2017-11-11-Preview
            autocompleteRequest:
              autocompleteMode: oneTerm
              highlightPostTag: </em>
              highlightPreTag: <em>
              minimumCoverage: 80
              search: washington medic
              searchFields: 'title,description'
              suggesterName: sg
              top: 10
            indexName: myindex
            searchDnsSuffix: search.windows.net
            searchServiceName: myservice
          responses:
            '200':
              body:
                - queryPlusText: washington medicaid
                  text: medicaid
                - queryPlusText: washington medicare
                  text: medicare
                - queryPlusText: washington medicine
                  text: medicine
      x-ms-request-id: request-id
definitions:
  AutocompleteItem:
    description: The result of Autocomplete requests.
    properties:
      queryPlusText:
        description: The query along with the completed term.
        type: string
      text:
        description: The completed term.
        type: string
  AutocompleteMode:
    description: Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context in producing autocomplete terms.
    enum:
      - oneTerm
      - twoTerms
      - oneTermWithContext
    type: string
    x-ms-enum:
      modelAsString: false
      name: AutocompleteMode
  AutocompleteRequest:
    description: 'Parameters for fuzzy matching, and other autocomplete query behaviors.'
    properties:
      autocompleteMode:
        $ref: '#/definitions/AutocompleteMode'
        description: Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms.
      fuzzy:
        description: 'A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will autocomplete terms even if there''s a substituted or missing character in the search text. While this provides a better experience in some scenarios it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.'
        type: boolean
        x-ms-client-name: UseFuzzyMatching
      highlightPostTag:
        description: 'A string tag that is appended to hit highlights. Must be set with HighlightPreTag. If omitted, hit highlighting is disabled.'
        type: string
      highlightPreTag:
        description: 'A string tag that is prepended to hit highlights. Must be set with HighlightPostTag. If omitted, hit highlighting is disabled.'
        type: string
      minimumCoverage:
        description: A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.
        format: double
        type: number
      search:
        description: The search text on which to base autocomplete results.
        type: string
        x-ms-client-name: searchText
      searchFields:
        description: The comma-separated list of field names to consider when querying for auto-completed terms.
        type: string
      suggesterName:
        description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
        type: string
      top:
        description: The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is to 5.
        format: int32
        type: integer
  AutocompleteResult:
    description: The result of Autocomplete query.
    properties:
      value:
        description: The list of returned Autocompleted items.
        items:
          $ref: '#/definitions/AutocompleteItem'
        readOnly: true
        type: array
        x-ms-client-name: Results
  DocumentIndexResult:
    description: Response containing the status of operations for all documents in the indexing request.
    properties:
      value:
        description: The list of status information for each document in the indexing request.
        items:
          $ref: '#/definitions/IndexingResult'
        readOnly: true
        type: array
        x-ms-client-name: Results
  IndexActionType:
    description: Specifies the operation to perform on a document in an indexing batch.
    enum:
      - upload
      - merge
      - mergeOrUpload
      - delete
    type: string
    x-ms-enum:
      name: IndexActionType
  IndexingResult:
    description: Status of an indexing operation for a single document.
    properties:
      errorMessage:
        description: The error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded.
        readOnly: true
        type: string
      key:
        description: The key of a document that was in the indexing request.
        readOnly: true
        type: string
      status:
        description: A value indicating whether the indexing operation succeeded for the document identified by the key.
        readOnly: true
        type: boolean
        x-ms-client-name: Succeeded
        x-nullable: false
      statusCode:
        description: 'The status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy.'
        format: int32
        readOnly: true
        type: integer
        x-nullable: false
  QueryType:
    description: Specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.
    enum:
      - simple
      - full
    type: string
    x-ms-enum:
      name: QueryType
  SearchMode:
    description: Specifies whether any or all of the search terms must be matched in order to count the document as a match.
    enum:
      - any
      - all
    type: string
    x-ms-enum:
      name: SearchMode
  SearchParametersPayload:
    description: 'Parameters for filtering, sorting, faceting, paging, and other search query behaviors.'
    properties:
      count:
        description: A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.
        type: boolean
      facets:
        description: 'The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.'
        externalDocs:
          url: 'https://docs.microsoft.com/rest/api/searchservice/Search-Documents'
        items:
          type: string
        type: array
      filter:
        description: The OData $filter expression to apply to the search query.
        externalDocs:
          url: 'https://docs.microsoft.com/rest/api/searchservice/OData-Expression-Syntax-for-Azure-Search'
        type: string
      highlight:
        description: The comma-separated list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.
        type: string
      highlightPostTag:
        description: A string tag that is appended to hit highlights. Must be set with HighlightPreTag. Default is &lt;/em&gt;.
        type: string
      highlightPreTag:
        description: A string tag that is prepended to hit highlights. Must be set with HighlightPostTag. Default is &lt;em&gt;.
        type: string
      minimumCoverage:
        description: A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100.
        format: double
        type: number
      orderby:
        description: 'The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match score. There can be at most 32 Orderby clauses.'
        type: string
        x-ms-client-name: OrderBy
      queryType:
        $ref: '#/definitions/QueryType'
        description: Gets or sets a value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.
      scoringParameters:
        description: 'The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called ''mylocation'' the parameter string would be "mylocation--122.2,44.8"(without the quotes).'
        items:
          type: string
        type: array
      scoringProfile:
        description: The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.
        type: string
      search:
        description: A full-text search query expression; Use "*" or omit this parameter to match all documents.
        externalDocs:
          url: 'https://docs.microsoft.com/rest/api/searchservice/Simple-query-syntax-in-Azure-Search'
        type: string
      searchFields:
        description: The comma-separated list of field names to include in the full-text search.
        type: string
      searchMode:
        $ref: '#/definitions/SearchMode'
        description: A value that specifies whether any or all of the search terms must be matched in order to count the document as a match.
      select:
        description: 'The comma-separated list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.'
        type: string
      skip:
        description: 'The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use Skip due to this limitation, consider using OrderBy on a totally-ordered key and Filter with a range query instead.'
        format: int32
        type: integer
      top:
        description: 'The number of search results to retrieve. This can be used in conjunction with Skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be passed to ContinueSearch to retrieve the next page of results. See DocumentSearchResponse.ContinuationToken for more information.'
        externalDocs:
          url: 'https://docs.microsoft.com/rest/api/searchservice/Search-Documents'
        format: int32
        type: integer
  SuggestParametersPayload:
    description: 'Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors.'
    properties:
      filter:
        description: The OData $filter expression to apply to the suggestions query.
        externalDocs:
          url: 'https://docs.microsoft.com/rest/api/searchservice/OData-Expression-Syntax-for-Azure-Search'
        type: string
      fuzzy:
        description: 'A value indicating whether to use fuzzy matching for the suggestion query. Default is false. When set to true, the query will find suggestions even if there''s a substituted or missing character in the search text. While this provides a better experience in some scenarios it comes at a performance cost as fuzzy suggestion searches are slower and consume more resources.'
        type: boolean
      highlightPostTag:
        description: 'A string tag that is appended to hit highlights. Must be set with HighlightPreTag. If omitted, hit highlighting of suggestions is disabled.'
        type: string
      highlightPreTag:
        description: 'A string tag that is prepended to hit highlights. Must be set with HighlightPostTag. If omitted, hit highlighting of suggestions is disabled.'
        type: string
      minimumCoverage:
        description: A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestion query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.
        format: double
        type: number
      orderby:
        description: 'The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match score. There can be at most 32 Orderby clauses.'
        type: string
        x-ms-client-name: OrderBy
      search:
        description: The search text on which to base suggestions.
        type: string
      searchFields:
        description: The comma-separated list of field names to consider when querying for suggestions.
        type: string
      select:
        description: 'The comma-separated list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.'
        type: string
      suggesterName:
        description: The name of the suggester as specified in the suggesters collection that's part of the index definition.
        type: string
      top:
        description: The number of suggestions to retrieve. This must be a value between 1 and 100. The default is to 5.
        format: int32
        type: integer
x-ms-parameterized-host:
  hostTemplate: 'https://{searchServiceName}.{searchDnsSuffix}/indexes(''{indexName}'')'
  parameters:
    - $ref: '#/parameters/SearchServiceNameParameter'
    - $ref: '#/parameters/SearchDnsSuffixParameter'
    - $ref: '#/parameters/IndexNameParameter'
  useSchemePrefix: false
