swagger: '2.0'
schemes:
  - https
host: api.redirection.io
basePath: /
info:
  contact:
    x-twitter: redirectionio
  description: API documentation for redirection.io
  title: redirection.io
  version: 1.1.0
  x-apisguru-categories:
    - hosting
  x-logo:
    url: 'https://twitter.com/redirectionio/profile_image?size=original'
  x-origin:
    - format: swagger
      url: 'https://api.redirection.io/docs.json'
      version: '2.0'
  x-providerName: redirection.io
securityDefinitions:
  apiKey:
    description: Value for the Authorization header
    in: header
    name: Authorization
    type: apiKey
security:
  - apiKey: []
paths:
  /agent-flush-aggregate-requests:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postAgentFlushAggregateRequestCollection
      parameters:
        - description: The new AgentFlushAggregateRequest resource
          in: body
          name: agentFlushAggregateRequest
          schema:
            $ref: '#/definitions/AgentFlushAggregateRequest'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: AgentFlushAggregateRequest resource created
          schema:
            $ref: '#/definitions/AgentFlushAggregateRequest'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a AgentFlushAggregateRequest resource.
      tags:
        - AgentFlushAggregateRequest
  /agent-flush-requests:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      parameters:
        - description: The new AgentFlushRequest resource
          in: body
          name: agentFlushRequest
          schema:
            $ref: '#/definitions/AgentFlushRequest'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: AgentFlushRequest resource created
          schema:
            $ref: '#/definitions/AgentFlushRequest'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a AgentFlushRequest resource.
      tags:
        - AgentFlushRequest
  /agent-instance-updates:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postInstanceCollection
      parameters:
        - description: The new Instance resource
          in: body
          name: instance
          schema:
            $ref: '#/definitions/Instance-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Instance resource created
          schema:
            $ref: '#/definitions/Instance-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Instance resource.
      tags:
        - Instance
  '/agent-instance-updates/{id}':
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: putInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated Instance resource
          in: body
          name: instance
          schema:
            $ref: '#/definitions/Instance-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Instance resource updated
          schema:
            $ref: '#/definitions/Instance-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the Instance resource.
      tags:
        - Instance
  /agent-rule-complexes:
    get:
      operationId: agent-legacy-complexRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Rule collection response
          schema:
            items:
              $ref: '#/definitions/Rule-Read'
            type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  /agent-rule-straights:
    get:
      operationId: agent-legacy-straightRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Rule collection response
          schema:
            items:
              $ref: '#/definitions/Rule-Read'
            type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  /agent-rules:
    get:
      operationId: agentRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Rule collection response
          schema:
            items:
              $ref: '#/definitions/Rule-Read'
            type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  /aggregate-logs:
    get:
      operationId: getAggregateLogCollection
      parameters:
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
        - in: query
          name: projectId
          required: false
          type: string
        - in: query
          name: createdAt
          required: false
          type: string
        - in: query
          name: source
          required: false
          type: string
        - in: query
          name: target
          required: false
          type: string
        - in: query
          name: statusCode
          required: false
          type: string
        - in: query
          name: referrer
          required: false
          type: string
        - in: query
          name: userAgent
          required: false
          type: string
        - in: query
          name: userAgentType
          required: false
          type: string
        - in: query
          name: simplifiedUserAgent
          required: false
          type: string
        - in: query
          name: ruleId
          required: false
          type: string
        - in: query
          name: instanceName
          required: false
          type: string
        - in: query
          name: excludeUrls
          required: false
          type: string
        - in: query
          name: excludeEmptyReferrer
          required: false
          type: string
        - in: query
          name: createdAt_gt
          required: false
          type: string
        - in: query
          name: createdAt_gte
          required: false
          type: string
        - in: query
          name: createdAt_lt
          required: false
          type: string
        - in: query
          name: createdAt_lte
          required: false
          type: string
        - in: query
          name: statusCode_gt
          required: false
          type: string
        - in: query
          name: statusCode_gte
          required: false
          type: string
        - in: query
          name: statusCode_lt
          required: false
          type: string
        - in: query
          name: statusCode_lte
          required: false
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: AggregateLog collection response
          schema:
            items:
              $ref: '#/definitions/AggregateLog-Read'
            type: array
      summary: Retrieves the collection of AggregateLog resources.
      tags:
        - AggregateLog
  '/aggregate-logs/{id}':
    get:
      operationId: getAggregateLogItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: AggregateLog resource response
          schema:
            $ref: '#/definitions/AggregateLog-Read'
        '404':
          description: Resource not found
      summary: Retrieves a AggregateLog resource.
      tags:
        - AggregateLog
  /crawl-urls:
    get:
      operationId: getCrawlUrlCollection
      parameters:
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: CrawlUrl collection response
          schema:
            items:
              $ref: '#/definitions/CrawlUrl-Read'
            type: array
      summary: Retrieves the collection of CrawlUrl resources.
      tags:
        - CrawlUrl
  '/crawl-urls/{id}':
    get:
      operationId: getCrawlUrlItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: CrawlUrl resource response
          schema:
            $ref: '#/definitions/CrawlUrl-Read'
        '404':
          description: Resource not found
      summary: Retrieves a CrawlUrl resource.
      tags:
        - CrawlUrl
  /crawls:
    get:
      operationId: getCrawlCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
        - in: query
          name: firstUrl
          required: false
          type: string
        - in: query
          name: 'sort[createdAt]'
          required: false
          type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Crawl collection response
          schema:
            items:
              $ref: '#/definitions/Crawl-Read'
            type: array
      summary: Retrieves the collection of Crawl resources.
      tags:
        - Crawl
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postCrawlCollection
      parameters:
        - description: The new Crawl resource
          in: body
          name: crawl
          schema:
            $ref: '#/definitions/Crawl-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Crawl resource created
          schema:
            $ref: '#/definitions/Crawl'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Crawl resource.
      tags:
        - Crawl
  '/crawls/{id}':
    get:
      operationId: getCrawlItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Crawl resource response
          schema:
            $ref: '#/definitions/Crawl-ReadDetails'
        '404':
          description: Resource not found
      summary: Retrieves a Crawl resource.
      tags:
        - Crawl
  '/crawls/{id}/cancel':
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: cancelCrawlItem
      parameters:
        - description: The new Crawl resource
          in: body
          name: crawl
          schema:
            $ref: '#/definitions/Crawl'
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Crawl resource created
          schema:
            $ref: '#/definitions/Crawl-ReadDetails'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Crawl resource.
      tags:
        - Crawl
  /explain-urls:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postExplainUrlCollection
      parameters:
        - description: The new ExplainUrl resource
          in: body
          name: explainUrl
          schema:
            $ref: '#/definitions/ExplainUrl-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: ExplainUrl resource created
          schema:
            $ref: '#/definitions/ExplainUrl'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a ExplainUrl resource.
      tags:
        - ExplainUrl
  '/explain-urls/{id}':
    get:
      operationId: getExplainUrlItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: ExplainUrl resource response
          schema:
            $ref: '#/definitions/ExplainUrl'
        '404':
          description: Resource not found
      summary: Retrieves a ExplainUrl resource.
      tags:
        - ExplainUrl
  /export-rules:
    get:
      operationId: exportRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
        - in: query
          name: redirectCode
          required: false
          type: integer
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: 'redirectCode[]'
          required: false
          type: array
        - in: query
          name: source.input
          required: false
          type: string
        - in: query
          name: isEnabled
          required: false
          type: boolean
        - collectionFormat: multi
          in: query
          items:
            type: boolean
          name: 'isEnabled[]'
          required: false
          type: array
        - in: query
          name: target
          required: false
          type: string
        - in: query
          name: 'sort[id]'
          required: false
          type: string
        - in: query
          name: 'sort[target]'
          required: false
          type: string
        - in: query
          name: 'sort[viewCount]'
          required: false
          type: string
        - in: query
          name: 'sort[source.input]'
          required: false
          type: string
        - in: query
          name: 'sort[redirectCode]'
          required: false
          type: string
        - in: query
          name: 'sort[isEnabled]'
          required: false
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Rule collection response
          schema:
            items:
              $ref: '#/definitions/Rule-Read'
            type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  /impact-rule-actions:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postImpactRuleActionCollection
      parameters:
        - description: The new ImpactRuleAction resource
          in: body
          name: impactRuleAction
          schema:
            $ref: '#/definitions/ImpactRuleAction-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: ImpactRuleAction resource created
          schema:
            $ref: '#/definitions/ImpactRuleAction-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a ImpactRuleAction resource.
      tags:
        - ImpactRuleAction
  '/impact-rule-actions/{id}':
    get:
      operationId: getImpactRuleActionItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: ImpactRuleAction resource response
          schema:
            $ref: '#/definitions/ImpactRuleAction-Read'
        '404':
          description: Resource not found
      summary: Retrieves a ImpactRuleAction resource.
      tags:
        - ImpactRuleAction
  /imports:
    get:
      operationId: getImportCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Import collection response
          schema:
            items:
              $ref: '#/definitions/Import-Read'
            type: array
      summary: Retrieves the collection of Import resources.
      tags:
        - Import
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postImportCollection
      parameters:
        - description: The new Import resource
          in: body
          name: import
          schema:
            $ref: '#/definitions/Import-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Import resource created
          schema:
            $ref: '#/definitions/Import-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Import resource.
      tags:
        - Import
  '/imports/{id}':
    get:
      operationId: getImportItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Import resource response
          schema:
            $ref: '#/definitions/Import-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Import resource.
      tags:
        - Import
  /instances:
    get:
      operationId: getInstanceCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Instance collection response
          schema:
            items:
              $ref: '#/definitions/Instance-Read'
            type: array
      summary: Retrieves the collection of Instance resources.
      tags:
        - Instance
  '/instances/{id}':
    get:
      operationId: getInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Instance resource response
          schema:
            $ref: '#/definitions/Instance-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Instance resource.
      tags:
        - Instance
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: loggingInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated Instance resource
          in: body
          name: instance
          schema:
            $ref: '#/definitions/Instance-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Instance resource updated
          schema:
            $ref: '#/definitions/Instance-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the Instance resource.
      tags:
        - Instance
  /invitations:
    get:
      operationId: getInvitationCollection
      parameters:
        - in: query
          name: targetId
          required: true
          type: string
        - in: query
          name: targetType
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Invitation collection response
          schema:
            items:
              $ref: '#/definitions/Invitation-Read'
            type: array
      summary: Retrieves the collection of Invitation resources.
      tags:
        - Invitation
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postInvitationCollection
      parameters:
        - description: The new Invitation resource
          in: body
          name: invitation
          schema:
            $ref: '#/definitions/Invitation-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Invitation resource created
          schema:
            $ref: '#/definitions/Invitation-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Invitation resource.
      tags:
        - Invitation
  '/invitations/accept/{token}':
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: acceptInvitationItem
      parameters:
        - description: The invitation acceptation token
          in: path
          name: token
          required: true
          type: string
        - description: The new Invitation resource
          in: body
          name: invitation
          required: true
          schema:
            $ref: '#/definitions/Invitation'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Invitation resource created
          schema:
            $ref: '#/definitions/Invitation-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Invitation resource.
      tags:
        - Invitation
  '/invitations/{id}':
    delete:
      operationId: deleteInvitationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Invitation resource deleted
        '404':
          description: Resource not found
      summary: Removes the Invitation resource.
      tags:
        - Invitation
    get:
      operationId: getInvitationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Invitation resource response
          schema:
            $ref: '#/definitions/Invitation-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Invitation resource.
      tags:
        - Invitation
  /logs:
    get:
      operationId: getLogCollection
      parameters:
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
        - in: query
          name: projectId
          required: false
          type: string
        - in: query
          name: createdAt
          required: false
          type: string
        - in: query
          name: source
          required: false
          type: string
        - in: query
          name: target
          required: false
          type: string
        - in: query
          name: statusCode
          required: false
          type: string
        - in: query
          name: referrer
          required: false
          type: string
        - in: query
          name: userAgent
          required: false
          type: string
        - in: query
          name: userAgentType
          required: false
          type: string
        - in: query
          name: simplifiedUserAgent
          required: false
          type: string
        - in: query
          name: ruleId
          required: false
          type: string
        - in: query
          name: instanceName
          required: false
          type: string
        - in: query
          name: excludeUrls
          required: false
          type: string
        - in: query
          name: excludeEmptyReferrer
          required: false
          type: string
        - in: query
          name: createdAt_gt
          required: false
          type: string
        - in: query
          name: createdAt_gte
          required: false
          type: string
        - in: query
          name: createdAt_lt
          required: false
          type: string
        - in: query
          name: createdAt_lte
          required: false
          type: string
        - in: query
          name: statusCode_gt
          required: false
          type: string
        - in: query
          name: statusCode_gte
          required: false
          type: string
        - in: query
          name: statusCode_lt
          required: false
          type: string
        - in: query
          name: statusCode_lte
          required: false
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Log collection response
          schema:
            items:
              $ref: '#/definitions/Log-Read'
            type: array
      summary: Retrieves the collection of Log resources.
      tags:
        - Log
  '/logs/{id}':
    get:
      operationId: getLogItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Log resource response
          schema:
            $ref: '#/definitions/Log-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Log resource.
      tags:
        - Log
  /markers:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postMarkerCollection
      parameters:
        - description: The new Marker resource
          in: body
          name: marker
          schema:
            $ref: '#/definitions/Marker-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Marker resource created
          schema:
            $ref: '#/definitions/Marker'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Marker resource.
      tags:
        - Marker
  '/markers/{id}':
    delete:
      operationId: deleteMarkerItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Marker resource deleted
        '404':
          description: Resource not found
      summary: Removes the Marker resource.
      tags:
        - Marker
    get:
      operationId: getMarkerItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Marker resource response
          schema:
            $ref: '#/definitions/Marker'
        '404':
          description: Resource not found
      summary: Retrieves a Marker resource.
      tags:
        - Marker
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: putMarkerItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated Marker resource
          in: body
          name: marker
          schema:
            $ref: '#/definitions/Marker'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Marker resource updated
          schema:
            $ref: '#/definitions/Marker'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the Marker resource.
      tags:
        - Marker
  /notifications:
    get:
      operationId: getNotificationCollection
      parameters:
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Notification collection response
          schema:
            items:
              $ref: '#/definitions/Notification-Read'
            type: array
      summary: Retrieves the collection of Notification resources.
      tags:
        - Notification
  '/notifications/{id}':
    get:
      operationId: getNotificationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Notification resource response
          schema:
            $ref: '#/definitions/Notification-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Notification resource.
      tags:
        - Notification
  /organizations:
    get:
      operationId: getOrganizationCollection
      parameters: []
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Organization collection response
          schema:
            items:
              $ref: '#/definitions/Organization-List'
            type: array
      summary: Retrieves the collection of Organization resources.
      tags:
        - Organization
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postOrganizationCollection
      parameters:
        - description: The new Organization resource
          in: body
          name: organization
          schema:
            $ref: '#/definitions/Organization-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Organization resource created
          schema:
            $ref: '#/definitions/Organization-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Organization resource.
      tags:
        - Organization
  '/organizations/{id}':
    delete:
      operationId: deleteOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Organization resource deleted
        '404':
          description: Resource not found
      summary: Removes the Organization resource.
      tags:
        - Organization
    get:
      operationId: getOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Organization resource response
          schema:
            $ref: '#/definitions/Organization-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Organization resource.
      tags:
        - Organization
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: putOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated Organization resource
          in: body
          name: organization
          schema:
            $ref: '#/definitions/Organization-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Organization resource updated
          schema:
            $ref: '#/definitions/Organization-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the Organization resource.
      tags:
        - Organization
  /post-logs:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      parameters:
        - description: The new AgentFlushRequest resource
          in: body
          name: agentFlushRequest
          schema:
            $ref: '#/definitions/AgentFlushRequest'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: AgentFlushRequest resource created
          schema:
            $ref: '#/definitions/AgentFlushRequest'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a AgentFlushRequest resource.
      tags:
        - AgentFlushRequest
  /projects:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postProjectCollection
      parameters:
        - description: The new Project resource
          in: body
          name: project
          schema:
            $ref: '#/definitions/Project-CreationWrite'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: Project resource created
          schema:
            $ref: '#/definitions/Project-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a Project resource.
      tags:
        - Project
  '/projects/{id}':
    delete:
      operationId: deleteProjectItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Project resource deleted
        '404':
          description: Resource not found
      summary: Removes the Project resource.
      tags:
        - Project
    get:
      operationId: getProjectItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Project resource response
          schema:
            $ref: '#/definitions/Project-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Project resource.
      tags:
        - Project
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: putProjectItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated Project resource
          in: body
          name: project
          schema:
            $ref: '#/definitions/Project-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Project resource updated
          schema:
            $ref: '#/definitions/Project-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the Project resource.
      tags:
        - Project
  /publish-histories:
    get:
      operationId: getPublishHistoryCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
        - in: query
          name: 'createdAt[before]'
          required: false
          type: string
        - in: query
          name: 'createdAt[strictly_before]'
          required: false
          type: string
        - in: query
          name: 'createdAt[after]'
          required: false
          type: string
        - in: query
          name: 'createdAt[strictly_after]'
          required: false
          type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: PublishHistory collection response
          schema:
            items:
              $ref: '#/definitions/PublishHistory-Read'
            type: array
      summary: Retrieves the collection of PublishHistory resources.
      tags:
        - PublishHistory
  '/publish-histories/{id}':
    get:
      operationId: getPublishHistoryItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: PublishHistory resource response
          schema:
            $ref: '#/definitions/PublishHistory-Read'
        '404':
          description: Resource not found
      summary: Retrieves a PublishHistory resource.
      tags:
        - PublishHistory
  /rule-actions:
    get:
      operationId: getRuleActionCollection
      parameters:
        - in: query
          name: versionId
          required: true
          type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: RuleAction collection response
          schema:
            items:
              $ref: '#/definitions/RuleAction-Read'
            type: array
      summary: Retrieves the collection of RuleAction resources.
      tags:
        - RuleAction
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postRuleActionCollection
      parameters:
        - description: The new RuleAction resource
          in: body
          name: ruleAction
          schema:
            $ref: '#/definitions/RuleAction-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: RuleAction resource created
          schema:
            $ref: '#/definitions/RuleAction-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a RuleAction resource.
      tags:
        - RuleAction
  '/rule-actions/{id}':
    delete:
      operationId: deleteRuleActionItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: RuleAction resource deleted
        '404':
          description: Resource not found
      summary: Removes the RuleAction resource.
      tags:
        - RuleAction
    get:
      operationId: getRuleActionItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: RuleAction resource response
          schema:
            $ref: '#/definitions/RuleAction-Read'
        '404':
          description: Resource not found
      summary: Retrieves a RuleAction resource.
      tags:
        - RuleAction
  /rule-set-versions:
    get:
      operationId: getRuleSetVersionCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
        - in: query
          name: 'sort[createdAt]'
          required: false
          type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: RuleSetVersion collection response
          schema:
            items:
              $ref: '#/definitions/RuleSetVersion-Read'
            type: array
      summary: Retrieves the collection of RuleSetVersion resources.
      tags:
        - RuleSetVersion
  '/rule-set-versions/{id}':
    get:
      operationId: getRuleSetVersionItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: RuleSetVersion resource response
          schema:
            $ref: '#/definitions/RuleSetVersion-Read'
        '404':
          description: Resource not found
      summary: Retrieves a RuleSetVersion resource.
      tags:
        - RuleSetVersion
  '/rule-set-versions/{id}/clear':
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: clearRuleSetVersionItem
      parameters:
        - description: The id of the version
          in: path
          name: id
          required: true
          type: string
        - description: The new RuleSetVersion resource
          in: body
          name: ruleSetVersion
          required: true
          schema:
            $ref: '#/definitions/RuleSetVersion'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: RuleSetVersion resource created
          schema:
            $ref: '#/definitions/RuleSetVersion-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Clear a version
      tags:
        - RuleSetVersion
  '/rule-set-versions/{id}/publish':
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: publishRuleSetVersionItem
      parameters:
        - description: The id of the version
          in: path
          name: id
          required: true
          type: string
        - description: The new RuleSetVersion resource
          in: body
          name: ruleSetVersion
          required: true
          schema:
            $ref: '#/definitions/RuleSetVersion'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: RuleSetVersion resource created
          schema:
            $ref: '#/definitions/RuleSetVersion-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Publish a version
      tags:
        - RuleSetVersion
  /rules:
    get:
      operationId: getRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          type: string
        - in: query
          name: redirectCode
          required: false
          type: integer
        - collectionFormat: multi
          in: query
          items:
            type: integer
          name: 'redirectCode[]'
          required: false
          type: array
        - in: query
          name: source.input
          required: false
          type: string
        - in: query
          name: isEnabled
          required: false
          type: boolean
        - collectionFormat: multi
          in: query
          items:
            type: boolean
          name: 'isEnabled[]'
          required: false
          type: array
        - in: query
          name: target
          required: false
          type: string
        - in: query
          name: 'sort[id]'
          required: false
          type: string
        - in: query
          name: 'sort[target]'
          required: false
          type: string
        - in: query
          name: 'sort[viewCount]'
          required: false
          type: string
        - in: query
          name: 'sort[source.input]'
          required: false
          type: string
        - in: query
          name: 'sort[redirectCode]'
          required: false
          type: string
        - in: query
          name: 'sort[isEnabled]'
          required: false
          type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Rule collection response
          schema:
            items:
              $ref: '#/definitions/Rule-Read'
            type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  '/rules/{id}':
    get:
      operationId: getRuleItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: Rule resource response
          schema:
            $ref: '#/definitions/Rule-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Rule resource.
      tags:
        - Rule
  /user-organizations:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postUserOrganizationCollection
      parameters:
        - description: The new UserOrganization resource
          in: body
          name: userOrganization
          schema:
            $ref: '#/definitions/UserOrganization-CreationWrite'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: UserOrganization resource created
          schema:
            $ref: '#/definitions/UserOrganization-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a UserOrganization resource.
      tags:
        - UserOrganization
  '/user-organizations/{id}':
    delete:
      operationId: deleteUserOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: UserOrganization resource deleted
        '404':
          description: Resource not found
      summary: Removes the UserOrganization resource.
      tags:
        - UserOrganization
    get:
      operationId: getUserOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: UserOrganization resource response
          schema:
            $ref: '#/definitions/UserOrganization-Read'
        '404':
          description: Resource not found
      summary: Retrieves a UserOrganization resource.
      tags:
        - UserOrganization
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: putUserOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated UserOrganization resource
          in: body
          name: userOrganization
          schema:
            $ref: '#/definitions/UserOrganization-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: UserOrganization resource updated
          schema:
            $ref: '#/definitions/UserOrganization-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the UserOrganization resource.
      tags:
        - UserOrganization
  '/user-project-flatteneds/{id}':
    get:
      operationId: getUserProjectFlattenedItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: UserProjectFlattened resource response
          schema:
            $ref: '#/definitions/UserProjectFlattened-Read'
        '404':
          description: Resource not found
      summary: Retrieves a UserProjectFlattened resource.
      tags:
        - UserProjectFlattened
  /user-projects:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postUserProjectCollection
      parameters:
        - description: The new UserProject resource
          in: body
          name: userProject
          schema:
            $ref: '#/definitions/UserProject-CreationWrite'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: UserProject resource created
          schema:
            $ref: '#/definitions/UserProject-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a UserProject resource.
      tags:
        - UserProject
  '/user-projects/{id}':
    delete:
      operationId: deleteUserProjectItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: UserProject resource deleted
        '404':
          description: Resource not found
      summary: Removes the UserProject resource.
      tags:
        - UserProject
    get:
      operationId: getUserProjectItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: UserProject resource response
          schema:
            $ref: '#/definitions/UserProject-Read'
        '404':
          description: Resource not found
      summary: Retrieves a UserProject resource.
      tags:
        - UserProject
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: putUserProjectItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated UserProject resource
          in: body
          name: userProject
          schema:
            $ref: '#/definitions/UserProject-Write'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: UserProject resource updated
          schema:
            $ref: '#/definitions/UserProject-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the UserProject resource.
      tags:
        - UserProject
  /users:
    get:
      operationId: getUserCollection
      parameters:
        - in: query
          name: organizationId
          required: true
          type: string
        - in: query
          name: search
          required: false
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: User collection response
          schema:
            items:
              $ref: '#/definitions/User-List'
            type: array
      summary: Retrieves the collection of User resources.
      tags:
        - User
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postUserCollection
      parameters:
        - description: The new User resource
          in: body
          name: user
          schema:
            $ref: '#/definitions/User-CreationWrite'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: User resource created
          schema:
            $ref: '#/definitions/User-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a User resource.
      tags:
        - User
  /users/forgot-password-request:
    post:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: postForgotPasswordRequestCollection
      parameters:
        - description: The new ForgotPasswordRequest resource
          in: body
          name: forgotPasswordRequest
          schema:
            $ref: '#/definitions/ForgotPasswordRequest'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '201':
          description: ForgotPasswordRequest resource created
          schema:
            $ref: '#/definitions/ForgotPasswordRequest'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Creates a ForgotPasswordRequest resource.
      tags:
        - ForgotPasswordRequest
  '/users/forgot-password/{resetToken}':
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: forgot_passwordUserItem
      parameters:
        - in: path
          name: resetToken
          required: true
          type: string
        - description: The updated User resource
          in: body
          name: user
          schema:
            $ref: '#/definitions/User-Password'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: User resource updated
          schema:
            $ref: '#/definitions/User-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the User resource.
      tags:
        - User
  '/users/{id}':
    get:
      operationId: getUserItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: User resource response
          schema:
            $ref: '#/definitions/User-Read'
        '404':
          description: Resource not found
      summary: Retrieves a User resource.
      tags:
        - User
  '/users/{id}/confirm-new-email/{newEmailToken}':
    get:
      operationId: confirm_new_emailUserItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: newEmailToken
          required: true
          type: string
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: User resource response
          schema:
            $ref: '#/definitions/User-Read'
        '404':
          description: Resource not found
      summary: Retrieves a User resource.
      tags:
        - User
  '/users/{id}/edit-email':
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: edit_emailUserItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated User resource
          in: body
          name: user
          schema:
            $ref: '#/definitions/User-EditInfo'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: User resource updated
          schema:
            $ref: '#/definitions/User-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the User resource.
      tags:
        - User
  '/users/{id}/edit-info':
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: edit_infoUserItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated User resource
          in: body
          name: user
          schema:
            $ref: '#/definitions/User-EditInfo'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: User resource updated
          schema:
            $ref: '#/definitions/User-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the User resource.
      tags:
        - User
  '/users/{id}/edit-password':
    put:
      consumes:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      operationId: edit_passwordUserItem
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - description: The updated User resource
          in: body
          name: user
          schema:
            $ref: '#/definitions/User-EditInfo'
      produces:
        - application/ld+json
        - application/json
        - text/html
        - text/csv
      responses:
        '200':
          description: User resource updated
          schema:
            $ref: '#/definitions/User-Read'
        '400':
          description: Invalid input
        '404':
          description: Resource not found
      summary: Replaces the User resource.
      tags:
        - User
definitions:
  AgentFlushAggregateRequest:
    description: ''
    properties:
      instanceName: {}
      instanceTime: {}
      logs: {}
    required:
      - logs
      - instanceName
      - instanceTime
    type: object
  AgentFlushRequest:
    description: ''
    properties:
      instanceName: {}
      instanceTime:
        type: integer
      logs:
        items:
          type: string
        type: array
    required:
      - logs
      - instanceName
      - instanceTime
    type: object
  AggregateLog-Read:
    description: ''
    properties:
      fixed:
        type: boolean
      id: {}
      lastOccurrenceAt:
        format: date-time
        type: string
      ruleId:
        type: string
      source: {}
      statusCode:
        type: integer
      target: {}
      viewCount: {}
    type: object
  Crawl:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      error:
        readOnly: true
        type: string
      finishedAt:
        format: date-time
        readOnly: true
        type: string
      firstUrl:
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      includeSubdomain:
        readOnly: true
        type: boolean
      maxUrls:
        readOnly: true
        type: integer
      project:
        $ref: '#/definitions/Project'
        readOnly: true
      rate:
        readOnly: true
        type: integer
      state:
        readOnly: true
        type: string
      stats:
        items:
          type: string
        type: array
      timeouted:
        readOnly: true
        type: boolean
      updatedAt:
        format: date-time
        readOnly: true
        type: string
    type: object
  Crawl-Read:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      error:
        readOnly: true
        type: string
      finishedAt:
        format: date-time
        readOnly: true
        type: string
      firstUrl:
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      state:
        readOnly: true
        type: string
      stats:
        items:
          type: string
        type: array
      updatedAt:
        format: date-time
        readOnly: true
        type: string
    type: object
  Crawl-ReadDetails:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      error:
        readOnly: true
        type: string
      finishedAt:
        format: date-time
        readOnly: true
        type: string
      firstUrl:
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      state:
        readOnly: true
        type: string
      stats:
        items:
          type: string
        type: array
      updatedAt:
        format: date-time
        readOnly: true
        type: string
    type: object
  Crawl-Write:
    description: ''
    properties:
      firstUrl: {}
      includeSubdomain: {}
      maxUrls: {}
      project:
        type: string
      rate: {}
    required:
      - project
      - firstUrl
      - rate
      - maxUrls
      - includeSubdomain
    type: object
  CrawlUrl-Read:
    description: ''
    properties:
      depth: {}
      id: {}
      statusCode: {}
      title: {}
      url: {}
    type: object
  ExplainUrl:
    description: ''
    properties:
      explain:
        readOnly: true
      id:
        readOnly: true
      project:
        type: string
      url:
        type: string
    required:
      - url
      - project
    type: object
  ExplainUrl-Write:
    description: ''
    properties:
      project:
        type: string
      url:
        type: string
    required:
      - url
      - project
    type: object
  ForgotPasswordRequest:
    description: ''
    properties:
      email:
        type: string
    required:
      - email
    type: object
  ImpactRuleAction-Read:
    description: ''
    properties:
      impact:
        readOnly: true
    type: object
  ImpactRuleAction-Write:
    description: ''
    properties:
      project:
        type: string
      ruleAction:
        type: string
    required:
      - project
      - ruleAction
    type: object
  Import-Read:
    description: ''
    properties:
      author:
        readOnly: true
        type: string
      completedAt:
        format: date-time
        readOnly: true
        type: string
      errorCount:
        readOnly: true
        type: integer
      id:
        readOnly: true
        type: string
      importDuration:
        readOnly: true
        type: integer
      message:
        readOnly: true
        type: string
      project:
        type: string
      shouldEnable:
        type: boolean
      startedAt:
        format: date-time
        readOnly: true
        type: string
      statusAsText:
        readOnly: true
      successCount:
        readOnly: true
        type: integer
      typeAsText:
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
    required:
      - project
      - typeAsText
    type: object
  Import-Write:
    description: ''
    properties:
      csvContent: {}
      project:
        type: string
      shouldEnable:
        type: boolean
      typeAsText:
        type: string
    required:
      - project
      - csvContent
      - typeAsText
    type: object
  Instance-Read:
    description: ''
    properties:
      agentDuration:
        type: integer
      agentVersion:
        type: string
      agentVersionStatus:
        readOnly: true
        type: string
      createdAt:
        format: date-time
        type: string
      gone:
        readOnly: true
        type: boolean
      id:
        readOnly: true
        type: string
      lastCompletedAt:
        format: date-time
        type: string
      lastStartedAt:
        format: date-time
        type: string
      logging:
        type: boolean
      logsLastFlushedAt:
        format: date-time
        type: string
      message:
        type: string
      misconfigured:
        type: boolean
      name:
        type: string
      rulesCount:
        type: integer
      rulesHash:
        type: string
      stale:
        readOnly: true
        type: boolean
      status:
        type: integer
      updatedAt:
        format: date-time
        type: string
    required:
      - name
    type: object
  Instance-Write:
    description: ''
    properties:
      agentVersion:
        type: string
      misconfigured:
        type: boolean
      name:
        type: string
    required:
      - name
    type: object
  Invitation: {}
  Invitation-Read:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      email:
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
    type: object
  Invitation-Write:
    description: ''
    properties:
      email:
        type: string
      target:
        type: string
    required:
      - email
      - target
    type: object
  Log-Read:
    description: ''
    properties:
      createdAt:
        format: date-time
        type: string
      fixed:
        type: boolean
      fixedByVersions:
        items:
          type: string
        type: array
      fromSmartList:
        readOnly: true
        type: boolean
      id: {}
      instanceName: {}
      notFixedByVersions:
        items:
          type: string
        type: array
      referrer: {}
      ruleId:
        type: string
      simplifiedUserAgent: {}
      smartList:
        readOnly: true
        type: string
      source: {}
      statusCode: {}
      target: {}
      userAgent: {}
      userAgentType: {}
    type: object
  Marker:
    description: ''
    properties:
      id: {}
      maximumOccurrence:
        type: integer
      minimumOccurrence:
        type: integer
      name:
        type: string
      options:
        items:
          type: string
        type: array
      regex:
        type: string
      transformers:
        items:
          type: string
        type: array
      type:
        type: string
    required:
      - type
      - name
    type: object
  Marker-Read:
    description: ''
    properties:
      maximumOccurrence:
        type: integer
      minimumOccurrence:
        type: integer
      name:
        type: string
      options:
        items:
          type: string
        type: array
      transformers:
        items:
          type: string
        type: array
      type:
        type: string
    required:
      - type
      - name
    type: object
  Marker-Write:
    description: ''
    properties:
      maximumOccurrence:
        type: integer
      minimumOccurrence:
        type: integer
      name:
        type: string
      options:
        items:
          type: string
        type: array
      transformers:
        items:
          type: string
        type: array
      type:
        type: string
    required:
      - type
      - name
    type: object
  Notification-Read:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      message:
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
    type: object
  Organization:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      isEnabled:
        readOnly: true
        type: boolean
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/Project'
        readOnly: true
        type: array
      slug:
        readOnly: true
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
      userOrganizations:
        items:
          $ref: '#/definitions/UserOrganization'
        readOnly: true
        type: array
    required:
      - name
    type: object
  Organization-CreationWrite:
    description: ''
    type: object
  Organization-List:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/Project-List'
        readOnly: true
        type: array
      slug:
        readOnly: true
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
    required:
      - name
    type: object
  Organization-Read:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/Project-Read'
        readOnly: true
        type: array
      slug:
        readOnly: true
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
      userOrganizations:
        items:
          $ref: '#/definitions/UserOrganization-Read'
        readOnly: true
        type: array
    required:
      - name
    type: object
  Organization-Write:
    description: ''
    properties:
      name:
        type: string
    required:
      - name
    type: object
  Project:
    description: ''
    properties:
      complexRuleUpdatedAgo:
        readOnly: true
      complexRulesCount:
        readOnly: true
        type: integer
      complexRulesUpdatedAt:
        format: date-time
        readOnly: true
        type: string
      crawling:
        readOnly: true
        type: boolean
      createdAt:
        format: date-time
        readOnly: true
        type: string
      currentVersion:
        $ref: '#/definitions/RuleSetVersion'
        readOnly: true
      feature:
        items:
          type: string
        readOnly: true
        type: array
      featureValue:
        readOnly: true
      features:
        items:
          type: string
        readOnly: true
        type: array
      hasLegacyRuleSystem:
        readOnly: true
        type: boolean
      id:
        readOnly: true
        type: string
      ignoreProjectTypes:
        items:
          type: string
        type: array
      isEnabled:
        readOnly: true
        type: boolean
      logExport:
        readOnly: true
        type: boolean
      matchStatusOnResponse:
        readOnly: true
        type: boolean
      name:
        type: string
      onboardingCompletedDemos:
        items:
          type: string
        type: array
      organization:
        $ref: '#/definitions/Organization'
        readOnly: true
      password:
        readOnly: true
      plan:
        readOnly: true
        type: integer
      planAsText:
        readOnly: true
      roles:
        readOnly: true
      rules:
        items:
          $ref: '#/definitions/Rule'
        readOnly: true
        type: array
      rulesHash:
        readOnly: true
        type: string
      salt:
        readOnly: true
      slug:
        readOnly: true
        type: string
      straightRuleUpdatedAgo:
        readOnly: true
      straightRulesCount:
        readOnly: true
        type: integer
      straightRulesUpdatedAt:
        format: date-time
        readOnly: true
        type: string
      token:
        readOnly: true
        type: string
      updatedAt:
        format: date-time
        readOnly: true
        type: string
      userProjects:
        items:
          $ref: '#/definitions/UserProject'
        readOnly: true
        type: array
      username:
        readOnly: true
      usersFlattened:
        items:
          $ref: '#/definitions/UserProjectFlattened'
        readOnly: true
        type: array
      versions:
        items:
          $ref: '#/definitions/RuleSetVersion'
        readOnly: true
        type: array
      workingVersion:
        $ref: '#/definitions/RuleSetVersion'
        readOnly: true
    required:
      - name
    type: object
  Project-CreationWrite:
    description: ''
    properties:
      ignoreProjectTypes:
        items:
          type: string
        type: array
      name:
        type: string
      onboardingCompletedDemos:
        items:
          type: string
        type: array
      organization:
        $ref: '#/definitions/Organization-CreationWrite'
        readOnly: true
    required:
      - name
    type: object
  Project-List:
    description: ''
    properties:
      complexRulesCount:
        readOnly: true
        type: integer
      id:
        readOnly: true
        type: string
      name:
        type: string
      slug:
        readOnly: true
        type: string
      straightRulesCount:
        readOnly: true
        type: integer
      userProjects:
        items:
          $ref: '#/definitions/UserProject-List'
        readOnly: true
        type: array
      usersFlattened:
        items:
          $ref: '#/definitions/UserProjectFlattened-List'
        readOnly: true
        type: array
    required:
      - name
    type: object
  Project-Read:
    description: ''
    properties:
      complexRulesCount:
        readOnly: true
        type: integer
      id:
        readOnly: true
        type: string
      name:
        type: string
      slug:
        readOnly: true
        type: string
      straightRulesCount:
        readOnly: true
        type: integer
      userProjects:
        items:
          $ref: '#/definitions/UserProject-Read'
        readOnly: true
        type: array
      usersFlattened:
        items:
          $ref: '#/definitions/UserProjectFlattened-Read'
        readOnly: true
        type: array
    required:
      - name
    type: object
  Project-Write:
    description: ''
    properties:
      ignoreProjectTypes:
        items:
          type: string
        type: array
      name:
        type: string
      onboardingCompletedDemos:
        items:
          type: string
        type: array
    required:
      - name
    type: object
  PublishHistory:
    description: ''
    properties:
      added:
        type: integer
      author:
        $ref: '#/definitions/User'
      createdAt:
        format: date-time
        readOnly: true
        type: string
      deleted:
        type: integer
      id:
        readOnly: true
        type: string
      project:
        $ref: '#/definitions/Project'
        readOnly: true
      summary:
        type: string
      type:
        type: string
      updated:
        type: integer
      version:
        $ref: '#/definitions/RuleSetVersion'
    type: object
  PublishHistory-Read:
    description: ''
    properties:
      added:
        type: integer
      author:
        $ref: '#/definitions/User-Read'
      createdAt:
        format: date-time
        readOnly: true
        type: string
      deleted:
        type: integer
      id:
        readOnly: true
        type: string
      summary:
        type: string
      type:
        type: string
      updated:
        type: integer
      version:
        $ref: '#/definitions/RuleSetVersion-Read'
    type: object
  Rule:
    description: ''
    properties:
      actions:
        items:
          $ref: '#/definitions/RuleAction'
        type: array
      currentAction:
        $ref: '#/definitions/RuleAction'
      formattedSource:
        type: string
      id:
        type: string
      isEnabled:
        type: boolean
      markers:
        items:
          $ref: '#/definitions/Marker'
        type: array
      markersString:
        items:
          type: string
        type: array
      matchOnResponseStatus:
        type: integer
      project:
        type: string
      rank:
        type: integer
      redirectCode:
        type: integer
      redirect_code:
        readOnly: true
        type: string
      source:
        type: string
      target:
        type: string
      updatedAt:
        format: date-time
        type: string
      viewCount:
        type: integer
    type: object
  Rule-Read:
    description: ''
    properties:
      actions:
        items:
          $ref: '#/definitions/RuleAction-Read'
        type: array
      currentAction:
        $ref: '#/definitions/RuleAction-Read'
      formattedSource:
        type: string
      id:
        type: string
      isEnabled:
        type: boolean
      markers:
        items:
          $ref: '#/definitions/Marker-Read'
        type: array
      matchOnResponseStatus:
        type: integer
      rank:
        type: integer
      redirectCode:
        type: integer
      source:
        type: string
      target:
        type: string
      updatedAt:
        format: date-time
        type: string
      viewCount:
        type: integer
    type: object
  RuleAction:
    description: ''
    properties:
      action:
        type: string
      author:
        $ref: '#/definitions/User'
        readOnly: true
      createdAt:
        format: date-time
        readOnly: true
        type: string
      formattedSource:
        type: string
      id:
        readOnly: true
        type: string
      isEnabled:
        type: boolean
      markers:
        items:
          $ref: '#/definitions/Marker'
        type: array
      markersString:
        items:
          type: string
        readOnly: true
        type: array
      matchOnResponseStatus:
        type: integer
      project:
        $ref: '#/definitions/Project'
        readOnly: true
      rank:
        type: integer
      ruleId:
        type: string
      source:
        type: string
      statusCode:
        type: integer
      target:
        type: string
      type:
        readOnly: true
        type: string
      version:
        $ref: '#/definitions/RuleSetVersion'
        readOnly: true
    required:
      - action
      - source
      - statusCode
      - isEnabled
      - rank
    type: object
  RuleAction-Read:
    description: ''
    properties:
      action:
        type: string
      author:
        $ref: '#/definitions/User-Read'
        readOnly: true
      createdAt:
        format: date-time
        readOnly: true
        type: string
      formattedSource:
        type: string
      id:
        readOnly: true
        type: string
      isEnabled:
        type: boolean
      markers:
        items:
          $ref: '#/definitions/Marker-Read'
        type: array
      matchOnResponseStatus:
        type: integer
      rank:
        type: integer
      source:
        type: string
      statusCode:
        type: integer
      target:
        type: string
    required:
      - action
      - source
      - statusCode
      - isEnabled
      - rank
    type: object
  RuleAction-Write:
    description: ''
    properties:
      action:
        type: string
      formattedSource:
        type: string
      isEnabled:
        type: boolean
      markers:
        items:
          $ref: '#/definitions/Marker-Write'
        type: array
      matchOnResponseStatus:
        type: integer
      rank:
        type: integer
      ruleId:
        type: string
      source:
        type: string
      statusCode:
        type: integer
      target:
        type: string
    required:
      - action
      - source
      - statusCode
      - isEnabled
      - rank
    type: object
  RuleSetVersion:
    description: ''
    properties:
      actions:
        items:
          $ref: '#/definitions/RuleAction'
        readOnly: true
        type: array
      added:
        readOnly: true
        type: integer
      createdAt:
        format: date-time
        readOnly: true
        type: string
      current:
        readOnly: true
        type: boolean
      deleted:
        readOnly: true
        type: integer
      histories:
        items:
          $ref: '#/definitions/PublishHistory'
        readOnly: true
        type: array
      id:
        readOnly: true
        type: string
      isSnapshot:
        type: boolean
      lastAction:
        $ref: '#/definitions/RuleAction'
        readOnly: true
      name:
        type: string
      nexts:
        items:
          $ref: '#/definitions/RuleSetVersion'
        readOnly: true
        type: array
      previous:
        $ref: '#/definitions/RuleSetVersion'
        readOnly: true
      project:
        $ref: '#/definitions/Project'
        readOnly: true
      publishedAt:
        format: date-time
        type: string
      snapshot:
        readOnly: true
        type: boolean
      updated:
        readOnly: true
        type: integer
      working:
        readOnly: true
        type: boolean
    type: object
  RuleSetVersion-Read:
    description: ''
    properties:
      createdAt:
        format: date-time
        readOnly: true
        type: string
      current:
        readOnly: true
        type: boolean
      id:
        readOnly: true
        type: string
      isSnapshot:
        type: boolean
      name:
        type: string
      publishedAt:
        format: date-time
        type: string
      working:
        readOnly: true
        type: boolean
    type: object
  User:
    description: ''
    properties:
      accountNonExpired:
        readOnly: true
        type: boolean
      accountNonLocked:
        readOnly: true
        type: boolean
      createdAt:
        format: date-time
        readOnly: true
        type: string
      credentialsNonExpired:
        readOnly: true
        type: boolean
      currentPassword: {}
      defaultOrganization:
        $ref: '#/definitions/Organization'
      disabled:
        type: boolean
      disabledAt:
        format: date-time
        type: string
      email:
        type: string
      enabled:
        readOnly: true
        type: boolean
      id:
        readOnly: true
        type: string
      name:
        type: string
      newEmail:
        type: string
      newEmailToken:
        type: string
      newEmailTokenExpiredAt:
        format: date-time
        type: string
      password:
        type: string
      plainPassword:
        type: string
      plainPasswordRepeat: {}
      projectsFlattened:
        description: Add projectsFlattened.
        items:
          type: string
        type: array
      resetToken:
        readOnly: true
        type: string
      resetTokenExpiredAt:
        format: date-time
        readOnly: true
        type: string
      roles:
        readOnly: true
      salt:
        readOnly: true
      superAdmin:
        type: boolean
      updatedAt:
        format: date-time
        type: string
      userOrganizations:
        items:
          $ref: '#/definitions/UserOrganization'
        type: array
      userProjects:
        items:
          type: string
        type: array
      userProjectsFlattened:
        items:
          $ref: '#/definitions/UserProjectFlattened'
        readOnly: true
        type: array
      username:
        readOnly: true
      validNewEmailToken:
        readOnly: true
    required:
      - email
      - name
    type: object
  User-CreationWrite:
    description: ''
    properties:
      email:
        type: string
      name:
        type: string
    required:
      - email
      - name
    type: object
  User-EditInfo:
    description: ''
    properties:
      name:
        type: string
    required:
      - name
    type: object
  User-List:
    description: ''
    properties:
      email:
        type: string
      id:
        readOnly: true
        type: string
      name:
        type: string
    required:
      - email
      - name
    type: object
  User-Password:
    description: ''
    properties:
      plainPassword:
        type: string
      plainPasswordRepeat: {}
    type: object
  User-Read:
    description: ''
    properties:
      id:
        readOnly: true
        type: string
      name:
        type: string
    required:
      - name
    type: object
  UserOrganization:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      organization:
        readOnly: true
        type: string
      organizationAdmin:
        readOnly: true
        type: boolean
      user:
        readOnly: true
        type: string
    required:
      - functionalRoles
    type: object
  UserOrganization-CreationWrite:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      organization:
        readOnly: true
        type: string
      user:
        readOnly: true
        type: string
    required:
      - functionalRoles
    type: object
  UserOrganization-Read:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      user:
        readOnly: true
        type: string
    required:
      - functionalRoles
    type: object
  UserOrganization-Write:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
    required:
      - functionalRoles
    type: object
  UserProject:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      project:
        type: string
      user:
        type: string
    required:
      - functionalRoles
      - user
      - project
    type: object
  UserProject-CreationWrite:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      project:
        type: string
      user:
        type: string
    required:
      - user
      - project
      - functionalRoles
    type: object
  UserProject-List:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      user:
        type: string
    required:
      - user
      - functionalRoles
    type: object
  UserProject-Read:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      user:
        type: string
    required:
      - user
      - functionalRoles
    type: object
  UserProject-Write:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
    required:
      - functionalRoles
    type: object
  UserProjectFlattened:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      project:
        type: string
      user:
        type: string
    type: object
  UserProjectFlattened-List:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      user:
        type: string
    type: object
  UserProjectFlattened-Read:
    description: ''
    properties:
      functionalRoles:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      user:
        type: string
    type: object
