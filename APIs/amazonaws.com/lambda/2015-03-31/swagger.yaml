swagger: '2.0'
info:
  version: '2015-03-31'
  x-release: v4
  title: AWS Lambda
  description: '<fullname>AWS Lambda</fullname> <p> <b>Overview</b> </p> <p>This is the <i>AWS Lambda API Reference</i>. The AWS Lambda Developer Guide provides additional information. For the service overview, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/welcome.html">What is AWS Lambda</a>, and for information about how the service works, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html">AWS Lambda: How it Works</a> in the <b>AWS Lambda Developer Guide</b>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: lambda
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lambda-2015-03-31.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/lambda/'
host: lambda.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: query
    type: string
    required: true
  Version:
    name: Version
    in: query
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy':
    post:
      operationId: AddLayerVersionPermission
      description: '<p>Adds permissions to the resource-based policy of a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all AWS accounts, or all accounts in an organization.</p> <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you specified when you added it.</p>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/AddLayerVersionPermissionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: PolicyLengthExceededException
          schema:
            $ref: '#/definitions/PolicyLengthExceededException'
        '486':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddLayerVersionPermissionRequest'
        - name: LayerName
          type: string
          in: path
          required: true
        - name: VersionNumber
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLayerVersionPolicy
      description: 'Returns the permission policy for a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLayerVersionPolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLayerVersionPolicyRequest'
        - name: LayerName
          type: string
          in: path
          required: true
        - name: VersionNumber
          type: string
          in: path
          required: true
  '/2015-03-31/functions/{FunctionName}/policy':
    post:
      operationId: AddPermission
      description: '<p>Grants an AWS service or another account permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function.</p> <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. For AWS services, the principal is a domain-style identifier defined by the service, like <code>s3.amazonaws.com</code> or <code>sns.amazonaws.com</code>. For AWS services, you can also specify the ARN or owning account of the associated resource as the <code>SourceArn</code> or <code>SourceAccount</code>. If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.</p> <p>This action adds a statement to a resource-based permission policy for the function. For more information about function policies, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html">Lambda Function Policies</a>. </p>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/AddPermissionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: PolicyLengthExceededException
          schema:
            $ref: '#/definitions/PolicyLengthExceededException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddPermissionRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPolicy
      description: 'Returns the <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html">resource-based IAM policy</a> for a function, version, or alias.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPolicyRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
  '/2015-03-31/functions/{FunctionName}/aliases':
    post:
      operationId: CreateAlias
      description: '<p>Creates an <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a> for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.</p> <p>You can also map an alias to split invocation requests between two versions. Use the <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that it receives.</p>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/AliasConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAliasRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAliases
      description: 'Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">aliases</a> for a Lambda function.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAliasesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAliasesRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
  /2015-03-31/event-source-mappings/:
    post:
      operationId: CreateEventSourceMapping
      description: '<p>Creates a mapping between an event source and an AWS Lambda function. Lambda reads items from the event source and triggers the function.</p> <p>For details about each event source type, see the following topics.</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html">Using AWS Lambda with Amazon Kinesis</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html">Using AWS Lambda with Amazon SQS</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html">Using AWS Lambda with Amazon DynamoDB</a> </p> </li> </ul>'
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/EventSourceMappingConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateEventSourceMappingRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListEventSourceMappings
      description: Lists event source mappings. Specify an <code>EventSourceArn</code> to only show event source mappings for a single event source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEventSourceMappingsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEventSourceMappingsRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
  /2015-03-31/functions:
    post:
      operationId: CreateFunction
      description: '<p>Creates a Lambda function. To create a function, you need a <a href="https://docs.aws.amazon.com/lambda/latest/dg/deployment-package-v2.html">deployment package</a> and an <a href="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role">execution role</a>. The deployment package contains your function code. The execution role grants the function permission to use AWS services, such as Amazon CloudWatch Logs for log streaming and AWS X-Ray for request tracing.</p> <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function''s code and configuration. A published version is a snapshot of your function code and configuration that can''t be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of your function from its initial configuration.</p> <p>The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>) and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p> <p>If another account or an AWS service invokes your function, use <a>AddPermission</a> to grant permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version, or on an alias.</p> <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events in other AWS services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a function trigger in the other service. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/invoking-lambda-functions.html">Invoking Functions</a>.</p>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: CodeStorageExceededException
          schema:
            $ref: '#/definitions/CodeStorageExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFunctionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2015-03-31/functions/{FunctionName}/aliases/{Name}':
    delete:
      operationId: DeleteAlias
      description: 'Deletes a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.'
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAliasRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
        - name: Name
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAlias
      description: 'Returns details about a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AliasConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAliasRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
        - name: Name
          type: string
          in: path
          required: true
    put:
      operationId: UpdateAlias
      description: 'Updates the configuration of a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AliasConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAliasRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
        - name: Name
          type: string
          in: path
          required: true
  '/2015-03-31/event-source-mappings/{UUID}':
    delete:
      operationId: DeleteEventSourceMapping
      description: 'Deletes an <a href="https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html">event source mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.'
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/EventSourceMappingConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEventSourceMappingRequest'
        - name: UUID
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetEventSourceMapping
      description: Returns details about an event source mapping. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventSourceMappingConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEventSourceMappingRequest'
        - name: UUID
          type: string
          in: path
          required: true
    put:
      operationId: UpdateEventSourceMapping
      description: 'Updates an event source mapping. You can change the function that AWS Lambda invokes, or pause invocation and resume later from the same location.'
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/EventSourceMappingConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '485':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEventSourceMappingRequest'
        - name: UUID
          type: string
          in: path
          required: true
  '/2015-03-31/functions/{FunctionName}':
    delete:
      operationId: DeleteFunction
      description: '<p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter. Otherwise, all versions and aliases are deleted.</p> <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>. For AWS services and resources that invoke your function directly, delete the trigger in the service where you originally configured it.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFunctionRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetFunction
      description: 'Returns information about the function or function version, with a link to download the deployment package that''s valid for 10 minutes. If you specify a function version, only details that are specific to that version are returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFunctionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFunctionRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
  '/2017-10-31/functions/{FunctionName}/concurrency':
    delete:
      operationId: DeleteFunctionConcurrency
      description: Removes a concurrent execution limit from a function.
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFunctionConcurrencyRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutFunctionConcurrency
      description: '<p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level.</p> <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished version. Reserving concurrency both ensures that your function has capacity to process the specified number of events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see the current setting for a function.</p> <p>Use <a>GetAccountSettings</a> to see your regional concurrency limit. You can reserve concurrency for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for functions that aren''t configured with a per-function limit. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html">Managing Concurrency</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Concurrency'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutFunctionConcurrencyRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
  '/2018-10-31/layers/{LayerName}/versions/{VersionNumber}':
    delete:
      operationId: DeleteLayerVersion
      description: 'Deletes a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid breaking functions, a copy of the version remains in Lambda until no functions refer to it.'
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLayerVersionRequest'
        - name: LayerName
          type: string
          in: path
          required: true
        - name: VersionNumber
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLayerVersion
      description: 'Returns information about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>, with a link to download the layer archive that''s valid for 10 minutes.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLayerVersionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLayerVersionRequest'
        - name: LayerName
          type: string
          in: path
          required: true
        - name: VersionNumber
          type: string
          in: path
          required: true
  /2016-08-19/account-settings/:
    get:
      operationId: GetAccountSettings
      description: 'Retrieves details about your account''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/limits.html">limits</a> and usage in an AWS Region.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAccountSettingsResponse'
        '480':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '481':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAccountSettingsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2015-03-31/functions/{FunctionName}/configuration':
    get:
      operationId: GetFunctionConfiguration
      description: '<p>Returns the version-specific settings of a Lambda function or version. The output includes only options that can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p> <p>To get all of a function''s details, including function-level settings, use <a>GetFunction</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFunctionConfigurationRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFunctionConfiguration
      description: '<p>Modify the version-specifc settings of a Lambda function.</p> <p>These settings can vary between versions of a function and are locked when you publish a version. You can''t modify the configuration of a published version, only the unpublished version.</p> <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions to an account or AWS service, use <a>AddPermission</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: ResourceConflictException
          schema:
            $ref: '#/definitions/ResourceConflictException'
        '485':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFunctionConfigurationRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
  '/2015-03-31/functions/{FunctionName}/invocations':
    post:
      operationId: Invoke
      description: '<p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p> <p>For synchronous invocation, details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the <a href="https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html">execution log</a> and <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">trace</a>. To record function errors for asynchronous invocations, configure your function with a <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead letter queue</a>.</p> <p>The status code in the API response doesn''t reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, <a href="https://docs.aws.amazon.com/lambda/latest/dg/limits.html">limit errors</a>, or issues with your function''s code and configuration. For example, Lambda returns <code>TooManyRequestsException</code> if executing the function would cause you to exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p> <p>For functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.</p> <p>This operation requires permission for the <code>lambda:InvokeFunction</code> action.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InvocationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestContentException
          schema:
            $ref: '#/definitions/InvalidRequestContentException'
        '483':
          description: RequestTooLargeException
          schema:
            $ref: '#/definitions/RequestTooLargeException'
        '484':
          description: UnsupportedMediaTypeException
          schema:
            $ref: '#/definitions/UnsupportedMediaTypeException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '487':
          description: EC2UnexpectedException
          schema:
            $ref: '#/definitions/EC2UnexpectedException'
        '488':
          description: SubnetIPAddressLimitReachedException
          schema:
            $ref: '#/definitions/SubnetIPAddressLimitReachedException'
        '489':
          description: ENILimitReachedException
          schema:
            $ref: '#/definitions/ENILimitReachedException'
        '490':
          description: EC2ThrottledException
          schema:
            $ref: '#/definitions/EC2ThrottledException'
        '491':
          description: EC2AccessDeniedException
          schema:
            $ref: '#/definitions/EC2AccessDeniedException'
        '492':
          description: InvalidSubnetIDException
          schema:
            $ref: '#/definitions/InvalidSubnetIDException'
        '493':
          description: InvalidSecurityGroupIDException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupIDException'
        '494':
          description: InvalidZipFileException
          schema:
            $ref: '#/definitions/InvalidZipFileException'
        '495':
          description: KMSDisabledException
          schema:
            $ref: '#/definitions/KMSDisabledException'
        '496':
          description: KMSInvalidStateException
          schema:
            $ref: '#/definitions/KMSInvalidStateException'
        '497':
          description: KMSAccessDeniedException
          schema:
            $ref: '#/definitions/KMSAccessDeniedException'
        '498':
          description: KMSNotFoundException
          schema:
            $ref: '#/definitions/KMSNotFoundException'
        '499':
          description: InvalidRuntimeException
          schema:
            $ref: '#/definitions/InvalidRuntimeException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/InvocationRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2014-11-13/functions/{FunctionName}/invoke-async/':
    post:
      operationId: InvokeAsync
      description: '<important> <p>For asynchronous function invocation, use <a>Invoke</a>.</p> </important> <p>Invokes a function asynchronously.</p>'
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/InvokeAsyncResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestContentException
          schema:
            $ref: '#/definitions/InvalidRequestContentException'
        '483':
          description: InvalidRuntimeException
          schema:
            $ref: '#/definitions/InvalidRuntimeException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/InvokeAsyncRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2015-03-31/functions/:
    get:
      operationId: ListFunctions
      description: '<p>Returns a list of Lambda functions, with the version-specific configuration of each.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version. To get more information about a function or version, use <a>GetFunction</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFunctionsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFunctionsRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2018-10-31/layers/{LayerName}/versions':
    get:
      operationId: ListLayerVersions
      description: 'Lists the versions of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. Versions that have been deleted aren''t listed. Specify a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime identifier</a> to list only versions that indicate that they''re compatible with that runtime.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLayerVersionsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLayerVersionsRequest'
        - name: LayerName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: PublishLayerVersion
      description: '<p>Creates an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same version name, a new version is created.</p> <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/PublishLayerVersionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: CodeStorageExceededException
          schema:
            $ref: '#/definitions/CodeStorageExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PublishLayerVersionRequest'
        - name: LayerName
          type: string
          in: path
          required: true
  /2018-10-31/layers:
    get:
      operationId: ListLayers
      description: 'Lists <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layers</a> and shows information about the latest version of each. Specify a <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime identifier</a> to list only layers that indicate that they''re compatible with that runtime.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLayersResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLayersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2017-03-31/tags/{ARN}':
    get:
      operationId: ListTags
      description: 'Returns a function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>. You can also view tags with <a>GetFunction</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsRequest'
        - name: ARN
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Adds <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> to a function.'
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
        - name: ARN
          type: string
          in: path
          required: true
    delete:
      operationId: UntagResource
      description: 'Removes <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> from a function.'
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
        - name: ARN
          type: string
          in: path
          required: true
  '/2015-03-31/functions/{FunctionName}/versions':
    get:
      operationId: ListVersionsByFunction
      description: 'Returns a list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">versions</a>, with the version-specific configuration of each. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListVersionsByFunctionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVersionsByFunctionRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: PublishVersion
      description: '<p>Creates a <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">version</a> from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn''t change.</p> <p>AWS Lambda doesn''t publish a version if the function''s configuration and code haven''t changed since the last version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the function before publishing a version.</p> <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: CodeStorageExceededException
          schema:
            $ref: '#/definitions/CodeStorageExceededException'
        '485':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PublishVersionRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
  '/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy/{StatementId}':
    delete:
      operationId: RemoveLayerVersionPermission
      description: 'Removes a statement from the permissions policy for a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.'
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveLayerVersionPermissionRequest'
        - name: LayerName
          type: string
          in: path
          required: true
        - name: VersionNumber
          type: string
          in: path
          required: true
        - name: StatementId
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2015-03-31/functions/{FunctionName}/policy/{StatementId}':
    delete:
      operationId: RemovePermission
      description: Revokes function-use permission from an AWS service or another account. You can get the ID of the statement from the output of <a>GetPolicy</a>.
      responses:
        '204':
          description: Success
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemovePermissionRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
        - name: StatementId
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2015-03-31/functions/{FunctionName}/code':
    put:
      operationId: UpdateFunctionCode
      description: '<p>Updates a Lambda function''s code.</p> <p>The function''s code is locked when you publish a version. You can''t modify the code of a published version, only the unpublished version.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FunctionConfiguration'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: CodeStorageExceededException
          schema:
            $ref: '#/definitions/CodeStorageExceededException'
        '485':
          description: PreconditionFailedException
          schema:
            $ref: '#/definitions/PreconditionFailedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFunctionCodeRequest'
        - name: FunctionName
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddLayerVersionPermissionResponse:
    type: object
    properties:
      Statement:
        $ref: '#/definitions/String'
        description: The permission statement.
      RevisionId:
        $ref: '#/definitions/String'
        description: A unique identifier for the current revision of the policy.
  AddLayerVersionPermissionRequest:
    type: object
    required:
      - StatementId
      - Action
      - Principal
    properties:
      StatementId:
        $ref: '#/definitions/StatementId'
        description: An identifier that distinguishes the policy from others on the same layer version.
      Action:
        $ref: '#/definitions/LayerPermissionAllowedAction'
        description: 'The API action that grants access to the layer. For example, <code>lambda:GetLayerVersion</code>.'
      Principal:
        $ref: '#/definitions/LayerPermissionAllowedPrincipal'
        description: 'An account ID, or <code>*</code> to grant permission to all AWS accounts.'
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: 'With the principal set to <code>*</code>, grant permission to all accounts in the specified organization.'
  ServiceException: {}
  ResourceNotFoundException: {}
  ResourceConflictException: {}
  TooManyRequestsException: {}
  InvalidParameterValueException: {}
  PolicyLengthExceededException: {}
  PreconditionFailedException: {}
  AddPermissionResponse:
    type: object
    example:
      Statement: ID-1
    properties:
      Statement:
        $ref: '#/definitions/String'
        description: The permission statement that's added to the function policy.
  AddPermissionRequest:
    type: object
    required:
      - StatementId
      - Action
      - Principal
    example:
      Action: 'lambda:InvokeFunction'
      FunctionName: MyFunction
      Principal: s3.amazonaws.com
      SourceAccount: '123456789012'
      SourceArn: 'arn:aws:s3:::examplebucket/*'
      StatementId: ID-1
    properties:
      StatementId:
        $ref: '#/definitions/StatementId'
        description: A statement identifier that differentiates the statement from others in the same policy.
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code> or <code>lambda:GetFunction</code>.'
      Principal:
        $ref: '#/definitions/Principal'
        description: 'The AWS service or account that invokes the function. If you specify a service, use <code>SourceArn</code> or <code>SourceAccount</code> to limit who can invoke the function through that service.'
      SourceArn:
        $ref: '#/definitions/Arn'
        description: 'For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.'
      SourceAccount:
        $ref: '#/definitions/SourceOwner'
        description: 'For AWS services, the ID of the account that owns the resource. Use this instead of <code>SourceArn</code> to grant permission to resources that are owned by another account (for example, all of an account''s Amazon S3 buckets). Or use it together with <code>SourceArn</code> to ensure that the resource is owned by the specified account. For example, an Amazon S3 bucket could be deleted by its owner and recreated by another account.'
      EventSourceToken:
        $ref: '#/definitions/EventSourceToken'
        description: 'For Alexa Smart Home functions, a token that must be supplied by the invoker.'
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.
  AliasConfiguration:
    type: object
    example:
      AliasArn: 'arn:aws:lambda:us-west-2:123456789012:function:functionAlias'
      Description: ''
      FunctionVersion: '1'
      Name: functionAlias
    properties:
      AliasArn:
        $ref: '#/definitions/FunctionArn'
        description: The Amazon Resource Name (ARN) of the alias.
      Name:
        $ref: '#/definitions/Alias'
        description: The name of the alias.
      FunctionVersion:
        $ref: '#/definitions/Version'
        description: The function version that the alias invokes.
      Description:
        $ref: '#/definitions/Description'
        description: A description of the alias.
      RoutingConfig:
        $ref: '#/definitions/AliasRoutingConfiguration'
        description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">routing configuration</a> of the alias.'
      RevisionId:
        $ref: '#/definitions/String'
        description: A unique identifier that changes when you update the alias.
    description: 'Provides configuration information about a Lambda function <a href="https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html">alias</a>.'
  CreateAliasRequest:
    type: object
    required:
      - Name
      - FunctionVersion
    properties:
      Name:
        $ref: '#/definitions/Alias'
        description: The name of the alias.
      FunctionVersion:
        $ref: '#/definitions/Version'
        description: The function version that the alias invokes.
      Description:
        $ref: '#/definitions/Description'
        description: A description of the alias.
      RoutingConfig:
        $ref: '#/definitions/AliasRoutingConfiguration'
        description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">routing configuration</a> of the alias.'
  EventSourceMappingConfiguration:
    type: object
    example:
      BatchSize: 123
      EventSourceArn: 'arn:aws:s3:::examplebucket/*'
      FunctionArn: 'arn:aws:lambda:us-west-2:123456789012:function:myFunction'
      LastModified: '2016-11-21T19:49:20.006+0000'
      LastProcessingResult: ''
      State: ''
      StateTransitionReason: ''
      UUID: 1234xCy789012
    properties:
      UUID:
        $ref: '#/definitions/String'
        description: The identifier of the event source mapping.
      BatchSize:
        $ref: '#/definitions/BatchSize'
        description: The maximum number of items to retrieve in a single batch.
      EventSourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the event source.
      FunctionArn:
        $ref: '#/definitions/FunctionArn'
        description: The ARN of the Lambda function.
      LastModified:
        $ref: '#/definitions/Date'
        description: The date that the event source mapping was last updated.
      LastProcessingResult:
        $ref: '#/definitions/String'
        description: The result of the last AWS Lambda invocation of your Lambda function.
      State:
        $ref: '#/definitions/String'
        description: 'The state of the event source mapping. It can be one of the following: <code>Creating</code>, <code>Enabling</code>, <code>Enabled</code>, <code>Disabling</code>, <code>Disabled</code>, <code>Updating</code>, or <code>Deleting</code>.'
      StateTransitionReason:
        $ref: '#/definitions/String'
        description: 'The cause of the last state change, either <code>User initiated</code> or <code>Lambda initiated</code>.'
    description: A mapping between an AWS resource and an AWS Lambda function. See <a>CreateEventSourceMapping</a> for details.
  CreateEventSourceMappingRequest:
    type: object
    required:
      - EventSourceArn
      - FunctionName
    properties:
      EventSourceArn:
        $ref: '#/definitions/Arn'
        description: <p>The Amazon Resource Name (ARN) of the event source.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p> </li> </ul>
      FunctionName:
        $ref: '#/definitions/FunctionName'
        description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it''s limited to 64 characters in length.</p>'
      Enabled:
        $ref: '#/definitions/Enabled'
        description: Disables the event source mapping to pause polling and invocation.
      BatchSize:
        $ref: '#/definitions/BatchSize'
        description: '<p>The maximum number of items to retrieve in a single batch.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - Default 10. Max 10.</p> </li> </ul>'
      StartingPosition:
        $ref: '#/definitions/EventSourcePosition'
        description: The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources. <code>AT_TIMESTAMP</code> is only supported for Amazon Kinesis streams.
      StartingPositionTimestamp:
        $ref: '#/definitions/Date'
        description: 'With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>, the time from which to start reading.'
  FunctionConfiguration:
    type: object
    example:
      CodeSha256: LQT+0DHxxxxcfwLyQjzoEFKZtdqQjHXanlSdfXBlEW0VA=
      CodeSize: 123
      Description: ''
      FunctionArn: 'arn:aws:lambda:us-west-2:123456789012:function:myFunction'
      FunctionName: myFunction
      Handler: index.handler
      LastModified: '2016-11-21T19:49:20.006+0000'
      MemorySize: 128
      Role: 'arn:aws:iam::123456789012:role/lambda_basic_execution'
      Runtime: python2.7
      Timeout: 123
      Version: '1'
      VpcConfig: {}
    properties:
      FunctionName:
        $ref: '#/definitions/NamespacedFunctionName'
        description: The name of the function.
      FunctionArn:
        $ref: '#/definitions/NameSpacedFunctionArn'
        description: The function's Amazon Resource Name (ARN).
      Runtime:
        $ref: '#/definitions/Runtime'
        description: The runtime environment for the Lambda function.
      Role:
        $ref: '#/definitions/RoleArn'
        description: The function's execution role.
      Handler:
        $ref: '#/definitions/Handler'
        description: The function that Lambda calls to begin executing your function.
      CodeSize:
        $ref: '#/definitions/Long'
        description: 'The size of the function''s deployment package, in bytes.'
      Description:
        $ref: '#/definitions/Description'
        description: The function's description.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: The amount of time that Lambda allows a function to run before stopping it.
      MemorySize:
        $ref: '#/definitions/MemorySize'
        description: The memory that's allocated to the function.
      LastModified:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time that the function was last updated, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).'
      CodeSha256:
        $ref: '#/definitions/String'
        description: The SHA256 hash of the function's deployment package.
      Version:
        $ref: '#/definitions/Version'
        description: The version of the Lambda function.
      VpcConfig:
        $ref: '#/definitions/VpcConfigResponse'
        description: The function's networking configuration.
      DeadLetterConfig:
        $ref: '#/definitions/DeadLetterConfig'
        description: The function's dead letter queue.
      Environment:
        $ref: '#/definitions/EnvironmentResponse'
        description: The function's environment variables.
      KMSKeyArn:
        $ref: '#/definitions/KMSKeyArn'
        description: The KMS key that's used to encrypt the function's environment variables. This key is only returned if you've configured a customer-managed CMK.
      TracingConfig:
        $ref: '#/definitions/TracingConfigResponse'
        description: The function's AWS X-Ray tracing configuration.
      MasterArn:
        $ref: '#/definitions/FunctionArn'
        description: 'For Lambda@Edge functions, the ARN of the master function.'
      RevisionId:
        $ref: '#/definitions/String'
        description: The latest updated revision of the function or alias.
      Layers:
        $ref: '#/definitions/LayersReferenceList'
        description: 'The function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html"> layers</a>.'
    description: Details about a function's configuration.
  CreateFunctionRequest:
    type: object
    required:
      - FunctionName
      - Runtime
      - Role
      - Handler
      - Code
    example:
      Code: {}
      Description: ''
      FunctionName: MyFunction
      Handler: souce_file.handler_name
      MemorySize: 128
      Publish: true
      Role: 'arn:aws:iam::123456789012:role/service-role/role-name'
      Runtime: nodejs8.10
      Timeout: 15
      VpcConfig: {}
    properties:
      FunctionName:
        $ref: '#/definitions/FunctionName'
        description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>'
      Runtime:
        $ref: '#/definitions/Runtime'
        description: 'The identifier of the function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>.'
      Role:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the function's execution role.
      Handler:
        $ref: '#/definitions/Handler'
        description: 'The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html">Programming Model</a>.'
      Code:
        $ref: '#/definitions/FunctionCode'
        description: The code for the function.
      Description:
        $ref: '#/definitions/Description'
        description: A description of the function.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
      MemorySize:
        $ref: '#/definitions/MemorySize'
        description: The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
      Publish:
        $ref: '#/definitions/Boolean'
        description: Set to true to publish the first version of the function during creation.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/vpc.html">VPC Settings</a>.'
      DeadLetterConfig:
        $ref: '#/definitions/DeadLetterConfig'
        description: 'A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">Dead Letter Queues</a>.'
      Environment:
        $ref: '#/definitions/Environment'
        description: Environment variables that are accessible from function code during execution.
      KMSKeyArn:
        $ref: '#/definitions/KMSKeyArn'
        description: 'The ARN of the AWS Key Management Service (AWS KMS) key that''s used to encrypt your function''s environment variables. If it''s not provided, AWS Lambda uses a default service key.'
      TracingConfig:
        $ref: '#/definitions/TracingConfig'
        description: Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with AWS X-Ray.
      Tags:
        $ref: '#/definitions/Tags'
        description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> to apply to the function.'
      Layers:
        $ref: '#/definitions/LayerList'
        description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function''s execution environment. Specify each layer by its ARN, including the version.'
  CodeStorageExceededException: {}
  DeleteAliasRequest:
    type: object
    example:
      FunctionName: myFunction
      Name: alias
    properties: {}
  DeleteEventSourceMappingRequest:
    type: object
    example:
      UUID: 12345kxodurf3443
    properties: {}
  ResourceInUseException: {}
  DeleteFunctionRequest:
    type: object
    example:
      FunctionName: myFunction
      Qualifier: '1'
    properties: {}
  DeleteFunctionConcurrencyRequest:
    type: object
    properties: {}
  DeleteLayerVersionRequest:
    type: object
    properties: {}
  GetAccountSettingsResponse:
    type: object
    example:
      AccountLimit: {}
      AccountUsage: {}
    properties:
      AccountLimit:
        $ref: '#/definitions/AccountLimit'
        description: Limits that are related to concurrency and code storage.
      AccountUsage:
        $ref: '#/definitions/AccountUsage'
        description: The number of functions and amount of storage in use.
  GetAccountSettingsRequest:
    type: object
    example: {}
    properties: {}
  GetAliasRequest:
    type: object
    example:
      FunctionName: myFunction
      Name: myFunctionAlias
    properties: {}
  GetEventSourceMappingRequest:
    type: object
    example:
      UUID: 123489-xxxxx-kdla8d89d7
    properties: {}
  GetFunctionResponse:
    type: object
    example:
      Code:
        Location: somelocation
        RepositoryType: S3
      Configuration:
        CodeSha256: LQT+0DHxxxxcfwLyQjzoEFKZtdqQjHXanlSdfXBlEW0VA=
        CodeSize: 262
        Description: A starter AWS Lambda function.
        Environment:
          Variables:
            S3_BUCKET: test
        FunctionArn: 'arn:aws:lambda:us-west-2:123456789012:function:myFunction'
        FunctionName: myFunction
        Handler: index.handler
        LastModified: '2016-11-21T19:49:20.006+0000'
        MemorySize: 128
        Role: 'arn:aws:iam::123456789012:role/lambda_basic_execution'
        Runtime: nodejs8.10
        Timeout: 3
        Version: $LATEST
        VpcConfig:
          SecurityGroupIds: []
          SubnetIds: []
    properties:
      Configuration:
        $ref: '#/definitions/FunctionConfiguration'
        description: The configuration of the function or version.
      Code:
        $ref: '#/definitions/FunctionCodeLocation'
        description: The deployment package of the function or version.
      Tags:
        $ref: '#/definitions/Tags'
        description: 'The function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a>.'
      Concurrency:
        $ref: '#/definitions/Concurrency'
        description: 'The function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html">reserved concurrency</a>.'
  GetFunctionRequest:
    type: object
    example:
      FunctionName: myFunction
      Qualifier: '1'
    properties: {}
  GetFunctionConfigurationRequest:
    type: object
    example:
      FunctionName: myFunction
      Qualifier: '1'
    properties: {}
  GetLayerVersionResponse:
    type: object
    properties:
      Content:
        $ref: '#/definitions/LayerVersionContentOutput'
        description: Details about the layer version.
      LayerArn:
        $ref: '#/definitions/LayerArn'
        description: The ARN of the layer.
      LayerVersionArn:
        $ref: '#/definitions/LayerVersionArn'
        description: The ARN of the layer version.
      Description:
        $ref: '#/definitions/Description'
        description: The description of the version.
      CreatedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date that the layer version was created, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).'
      Version:
        $ref: '#/definitions/LayerVersionNumber'
        description: The version number.
      CompatibleRuntimes:
        $ref: '#/definitions/CompatibleRuntimes'
        description: The layer's compatible runtimes.
      LicenseInfo:
        $ref: '#/definitions/LicenseInfo'
        description: The layer's software license.
  GetLayerVersionRequest:
    type: object
    properties: {}
  GetLayerVersionPolicyResponse:
    type: object
    properties:
      Policy:
        $ref: '#/definitions/String'
        description: The policy document.
      RevisionId:
        $ref: '#/definitions/String'
        description: A unique identifier for the current revision of the policy.
  GetLayerVersionPolicyRequest:
    type: object
    properties: {}
  GetPolicyResponse:
    type: object
    example:
      Policy: ''
    properties:
      Policy:
        $ref: '#/definitions/String'
        description: The resource-based policy.
      RevisionId:
        $ref: '#/definitions/String'
        description: A unique identifier for the current revision of the policy.
  GetPolicyRequest:
    type: object
    example:
      FunctionName: myFunction
      Qualifier: '1'
    properties: {}
  InvocationResponse:
    type: object
    example:
      FunctionError: ''
      LogResult: ''
      Payload: '?'
      StatusCode: 123
    properties:
      StatusCode:
        $ref: '#/definitions/Integer'
        description: 'The HTTP status code is in the 200 range for a successful request. For the <code>RequestResponse</code> invocation type, this status code is 200. For the <code>Event</code> invocation type, this status code is 202. For the <code>DryRun</code> invocation type, the status code is 204.'
      Payload:
        $ref: '#/definitions/Blob'
        description: 'The response from the function, or an error object.'
  InvocationRequest:
    type: object
    example:
      ClientContext: MyApp
      FunctionName: MyFunction
      InvocationType: Event
      LogType: Tail
      Payload: 'fileb://file-path/input.json'
      Qualifier: '1'
    properties:
      Payload:
        $ref: '#/definitions/Blob'
        description: The JSON that you want to provide to your Lambda function as input.
  InvalidRequestContentException: {}
  RequestTooLargeException: {}
  UnsupportedMediaTypeException: {}
  EC2UnexpectedException: {}
  SubnetIPAddressLimitReachedException: {}
  ENILimitReachedException: {}
  EC2ThrottledException: {}
  EC2AccessDeniedException: {}
  InvalidSubnetIDException: {}
  InvalidSecurityGroupIDException: {}
  InvalidZipFileException: {}
  KMSDisabledException: {}
  KMSInvalidStateException: {}
  KMSAccessDeniedException: {}
  KMSNotFoundException: {}
  InvalidRuntimeException: {}
  InvokeAsyncResponse:
    type: object
    example:
      Status: 123
    properties:
      Status:
        $ref: '#/definitions/HttpStatus'
        description: The status code.
    description: 'A success response (<code>202 Accepted</code>) indicates that the request is queued for invocation. '
  InvokeAsyncRequest:
    type: object
    required:
      - InvokeArgs
    example:
      FunctionName: myFunction
      InvokeArgs: 'fileb://file-path/input.json'
    properties:
      InvokeArgs:
        $ref: '#/definitions/BlobStream'
        description: The JSON that you want to provide to your Lambda function as input.
  ListAliasesResponse:
    type: object
    example:
      Aliases: []
      NextMarker: ''
    properties:
      NextMarker:
        $ref: '#/definitions/String'
        description: The pagination token that's included if more results are available.
      Aliases:
        $ref: '#/definitions/AliasList'
        description: A list of aliases.
  ListAliasesRequest:
    type: object
    example:
      FunctionName: myFunction
      FunctionVersion: '1'
      Marker: ''
      MaxItems: 123
    properties: {}
  ListEventSourceMappingsResponse:
    type: object
    properties:
      NextMarker:
        $ref: '#/definitions/String'
        description: A pagination token that's returned when the response doesn't contain all event source mappings.
      EventSourceMappings:
        $ref: '#/definitions/EventSourceMappingsList'
        description: A list of event source mappings.
  ListEventSourceMappingsRequest:
    type: object
    properties: {}
  ListFunctionsResponse:
    type: object
    example:
      Functions: []
      NextMarker: ''
    properties:
      NextMarker:
        $ref: '#/definitions/String'
        description: The pagination token that's included if more results are available.
      Functions:
        $ref: '#/definitions/FunctionList'
        description: A list of Lambda functions.
    description: A list of Lambda functions.
  ListFunctionsRequest:
    type: object
    example:
      Marker: ''
      MaxItems: 123
    properties: {}
  ListLayerVersionsResponse:
    type: object
    properties:
      NextMarker:
        $ref: '#/definitions/String'
        description: A pagination token returned when the response doesn't contain all versions.
      LayerVersions:
        $ref: '#/definitions/LayerVersionsList'
        description: A list of versions.
  ListLayerVersionsRequest:
    type: object
    properties: {}
  ListLayersResponse:
    type: object
    properties:
      NextMarker:
        $ref: '#/definitions/String'
        description: A pagination token returned when the response doesn't contain all layers.
      Layers:
        $ref: '#/definitions/LayersList'
        description: A list of function layers.
  ListLayersRequest:
    type: object
    properties: {}
  ListTagsResponse:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: The function's tags.
  ListTagsRequest:
    type: object
    properties: {}
  ListVersionsByFunctionResponse:
    type: object
    example:
      NextMarker: ''
      Versions: []
    properties:
      NextMarker:
        $ref: '#/definitions/String'
        description: The pagination token that's included if more results are available.
      Versions:
        $ref: '#/definitions/FunctionList'
        description: A list of Lambda function versions.
  ListVersionsByFunctionRequest:
    type: object
    example:
      FunctionName: myFunction
      Marker: ''
      MaxItems: 123
    properties: {}
  PublishLayerVersionResponse:
    type: object
    properties:
      Content:
        $ref: '#/definitions/LayerVersionContentOutput'
        description: Details about the layer version.
      LayerArn:
        $ref: '#/definitions/LayerArn'
        description: The ARN of the layer.
      LayerVersionArn:
        $ref: '#/definitions/LayerVersionArn'
        description: The ARN of the layer version.
      Description:
        $ref: '#/definitions/Description'
        description: The description of the version.
      CreatedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date that the layer version was created, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).'
      Version:
        $ref: '#/definitions/LayerVersionNumber'
        description: The version number.
      CompatibleRuntimes:
        $ref: '#/definitions/CompatibleRuntimes'
        description: The layer's compatible runtimes.
      LicenseInfo:
        $ref: '#/definitions/LicenseInfo'
        description: The layer's software license.
  PublishLayerVersionRequest:
    type: object
    required:
      - Content
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: The description of the version.
      Content:
        $ref: '#/definitions/LayerVersionContentInput'
        description: The function layer archive.
      CompatibleRuntimes:
        $ref: '#/definitions/CompatibleRuntimes'
        description: 'A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.'
      LicenseInfo:
        $ref: '#/definitions/LicenseInfo'
        description: '<p>The layer''s software license. It can be any of the following:</p> <ul> <li> <p>An <a href="https://spdx.org/licenses/">SPDX license identifier</a>. For example, <code>MIT</code>.</p> </li> <li> <p>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</p> </li> <li> <p>The full text of the license.</p> </li> </ul>'
  PublishVersionRequest:
    type: object
    example:
      CodeSha256: ''
      Description: ''
      FunctionName: myFunction
    properties:
      CodeSha256:
        $ref: '#/definitions/String'
        description: Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. You can get the hash for the version that you uploaded from the output of <a>UpdateFunctionCode</a>.
      Description:
        $ref: '#/definitions/Description'
        description: A description for the version to override the description in the function configuration.
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid publishing a version if the function configuration has changed since you last updated it.
  Concurrency:
    type: object
    properties:
      ReservedConcurrentExecutions:
        $ref: '#/definitions/ReservedConcurrentExecutions'
        description: 'The number of concurrent executions that are reserved for this function. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html">Managing Concurrency</a>.'
  PutFunctionConcurrencyRequest:
    type: object
    required:
      - ReservedConcurrentExecutions
    properties:
      ReservedConcurrentExecutions:
        $ref: '#/definitions/ReservedConcurrentExecutions'
        description: The number of simultaneous executions to reserve for the function.
  RemoveLayerVersionPermissionRequest:
    type: object
    properties: {}
  RemovePermissionRequest:
    type: object
    example:
      FunctionName: myFunction
      Qualifier: '1'
      StatementId: role-statement-id
    properties: {}
  TagResourceRequest:
    type: object
    required:
      - Tags
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: A list of tags to apply to the function.
  UntagResourceRequest:
    type: object
    properties: {}
  UpdateAliasRequest:
    type: object
    example:
      Description: ''
      FunctionName: myFunction
      FunctionVersion: '1'
      Name: functionAlias
    properties:
      FunctionVersion:
        $ref: '#/definitions/Version'
        description: The function version that the alias invokes.
      Description:
        $ref: '#/definitions/Description'
        description: A description of the alias.
      RoutingConfig:
        $ref: '#/definitions/AliasRoutingConfiguration'
        description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">routing configuration</a> of the alias.'
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the alias if the revision ID matches the ID that's specified. Use this option to avoid modifying an alias that has changed since you last read it.
  UpdateEventSourceMappingRequest:
    type: object
    example:
      BatchSize: 123
      Enabled: true
      FunctionName: myFunction
      UUID: 1234xCy789012
    properties:
      FunctionName:
        $ref: '#/definitions/FunctionName'
        description: '<p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it''s limited to 64 characters in length.</p>'
      Enabled:
        $ref: '#/definitions/Enabled'
        description: Disables the event source mapping to pause polling and invocation.
      BatchSize:
        $ref: '#/definitions/BatchSize'
        description: '<p>The maximum number of items to retrieve in a single batch.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - Default 10. Max 10.</p> </li> </ul>'
  UpdateFunctionCodeRequest:
    type: object
    example:
      FunctionName: myFunction
      Publish: true
      S3Bucket: myBucket
      S3Key: myKey
      S3ObjectVersion: '1'
      ZipFile: 'fileb://file-path/file.zip'
    properties:
      ZipFile:
        $ref: '#/definitions/Blob'
        description: The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for you.
      S3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
      S3Key:
        $ref: '#/definitions/S3Key'
        description: The Amazon S3 key of the deployment package.
      S3ObjectVersion:
        $ref: '#/definitions/S3ObjectVersion'
        description: 'For versioned objects, the version of the deployment package object to use.'
      Publish:
        $ref: '#/definitions/Boolean'
        description: Set to true to publish a new version of the function after updating the code. This has the same effect as calling <a>PublishVersion</a> separately.
      DryRun:
        $ref: '#/definitions/Boolean'
        description: Set to true to validate the request parameters and access permissions without modifying the function code.
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
  UpdateFunctionConfigurationRequest:
    type: object
    example:
      Description: ''
      FunctionName: myFunction
      Handler: index.handler
      MemorySize: 128
      Role: 'arn:aws:iam::123456789012:role/lambda_basic_execution'
      Runtime: python2.7
      Timeout: 123
      VpcConfig: {}
    properties:
      Role:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the function's execution role.
      Handler:
        $ref: '#/definitions/Handler'
        description: 'The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html">Programming Model</a>.'
      Description:
        $ref: '#/definitions/Description'
        description: A description of the function.
      Timeout:
        $ref: '#/definitions/Timeout'
        description: The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
      MemorySize:
        $ref: '#/definitions/MemorySize'
        description: The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/vpc.html">VPC Settings</a>.'
      Environment:
        $ref: '#/definitions/Environment'
        description: Environment variables that are accessible from function code during execution.
      Runtime:
        $ref: '#/definitions/Runtime'
        description: 'The identifier of the function''s <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>.'
      DeadLetterConfig:
        $ref: '#/definitions/DeadLetterConfig'
        description: 'A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">Dead Letter Queues</a>.'
      KMSKeyArn:
        $ref: '#/definitions/KMSKeyArn'
        description: 'The ARN of the AWS Key Management Service (AWS KMS) key that''s used to encrypt your function''s environment variables. If it''s not provided, AWS Lambda uses a default service key.'
      TracingConfig:
        $ref: '#/definitions/TracingConfig'
        description: Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with AWS X-Ray.
      RevisionId:
        $ref: '#/definitions/String'
        description: Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
      Layers:
        $ref: '#/definitions/LayerList'
        description: 'A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function''s execution environment. Specify each layer by its ARN, including the version.'
  Long:
    type: integer
  Integer:
    type: integer
  UnreservedConcurrentExecutions:
    type: integer
    minimum: 0
  AccountLimit:
    type: object
    properties:
      TotalCodeSize:
        $ref: '#/definitions/Long'
        description: The amount of storage space that you can use for all deployment packages and layer archives.
      CodeSizeUnzipped:
        $ref: '#/definitions/Long'
        description: The maximum size of your function's code and layers when they're extracted.
      CodeSizeZipped:
        $ref: '#/definitions/Long'
        description: The maximum size of a deployment package when it's uploaded directly to AWS Lambda. Use Amazon S3 for larger files.
      ConcurrentExecutions:
        $ref: '#/definitions/Integer'
        description: The maximum number of simultaneous function executions.
      UnreservedConcurrentExecutions:
        $ref: '#/definitions/UnreservedConcurrentExecutions'
        description: 'The maximum number of simultaneous function executions, minus the capacity that''s reserved for individual functions with <a>PutFunctionConcurrency</a>.'
    description: Limits that are related to concurrency and code storage. All file and storage sizes are in bytes.
  AccountUsage:
    type: object
    properties:
      TotalCodeSize:
        $ref: '#/definitions/Long'
        description: 'The amount of storage space, in bytes, that''s being used by deployment packages and layer archives.'
      FunctionCount:
        $ref: '#/definitions/Long'
        description: The number of Lambda functions.
    description: The number of functions and amount of storage in use.
  Action:
    type: string
    pattern: '(lambda:[*]|lambda:[a-zA-Z]+|[*])'
  LayerName:
    type: string
    pattern: '(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+'
    minLength: 1
    maxLength: 140
  LayerVersionNumber:
    type: integer
  StatementId:
    type: string
    pattern: '([a-zA-Z0-9-_]+)'
    minLength: 1
    maxLength: 100
  LayerPermissionAllowedAction:
    type: string
    pattern: 'lambda:GetLayerVersion'
  LayerPermissionAllowedPrincipal:
    type: string
    pattern: '\d{12}|\*|arn:(aws[a-zA-Z-]*):iam::\d{12}:root'
  OrganizationId:
    type: string
    pattern: 'o-[a-z0-9]{10,32}'
  String:
    type: string
  FunctionName:
    type: string
    pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
    minLength: 1
    maxLength: 140
  Principal:
    type: string
    pattern: .*
  Arn:
    type: string
    pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)'
  SourceOwner:
    type: string
    pattern: '\d{12}'
  EventSourceToken:
    type: string
    pattern: '[a-zA-Z0-9._\-]+'
    minLength: 0
    maxLength: 256
  Qualifier:
    type: string
    pattern: '(|[a-zA-Z0-9$_-]+)'
    minLength: 1
    maxLength: 128
  AdditionalVersion:
    type: string
    pattern: '[0-9]+'
    minLength: 1
    maxLength: 1024
  Weight:
    type: number
    format: double
    minimum: 0
    maximum: 1
  AdditionalVersionWeights:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AdditionalVersion'
        value:
          $ref: '#/definitions/Weight'
  Alias:
    type: string
    pattern: '(?!^[0-9]+$)([a-zA-Z0-9-_]+)'
    minLength: 1
    maxLength: 128
  FunctionArn:
    type: string
    pattern: 'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
  Version:
    type: string
    pattern: '(\$LATEST|[0-9]+)'
    minLength: 1
    maxLength: 1024
  Description:
    type: string
    minLength: 0
    maxLength: 256
  AliasRoutingConfiguration:
    type: object
    properties:
      AdditionalVersionWeights:
        $ref: '#/definitions/AdditionalVersionWeights'
        description: 'The name of the second alias, and the percentage of traffic that''s routed to it.'
    description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">traffic-shifting</a> configuration of a Lambda function alias.'
  AliasList:
    type: array
    items:
      $ref: '#/definitions/AliasConfiguration'
  BatchSize:
    type: integer
    minimum: 1
    maximum: 10000
  Blob:
    type: string
    format: password
  BlobStream:
    type: string
  Boolean:
    type: boolean
  Runtime:
    type: string
    enum:
      - nodejs
      - nodejs4.3
      - nodejs6.10
      - nodejs8.10
      - java8
      - python2.7
      - python3.6
      - python3.7
      - dotnetcore1.0
      - dotnetcore2.0
      - dotnetcore2.1
      - nodejs4.3-edge
      - go1.x
      - ruby2.5
      - provided
  CompatibleRuntimes:
    type: array
    items:
      $ref: '#/definitions/Runtime'
    maxItems: 5
  ReservedConcurrentExecutions:
    type: integer
    minimum: 0
  Enabled:
    type: boolean
  EventSourcePosition:
    type: string
    enum:
      - TRIM_HORIZON
      - LATEST
      - AT_TIMESTAMP
  Date:
    type: string
    format: date-time
  RoleArn:
    type: string
    pattern: 'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+'
  Handler:
    type: string
    pattern: '[^\s]+'
    maxLength: 128
  FunctionCode:
    type: object
    properties:
      ZipFile:
        $ref: '#/definitions/Blob'
        description: The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for you.
      S3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
      S3Key:
        $ref: '#/definitions/S3Key'
        description: The Amazon S3 key of the deployment package.
      S3ObjectVersion:
        $ref: '#/definitions/S3ObjectVersion'
        description: 'For versioned objects, the version of the deployment package object to use.'
    description: 'The code for the Lambda function. You can specify either an object in Amazon S3, or upload a deployment package directly.'
  Timeout:
    type: integer
    minimum: 1
  MemorySize:
    type: integer
    minimum: 128
    maximum: 3008
  VpcConfig:
    type: object
    properties:
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of VPC subnet IDs.
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: A list of VPC security groups IDs.
    description: The VPC security groups and subnets that are attached to a Lambda function.
  DeadLetterConfig:
    type: object
    properties:
      TargetArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.
    description: 'The <a href="https://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead letter queue</a> for failed asynchronous invocations.'
  Environment:
    type: object
    properties:
      Variables:
        $ref: '#/definitions/EnvironmentVariables'
        description: Environment variable key-value pairs.
    description: A function's environment variable settings.
  KMSKeyArn:
    type: string
    pattern: '(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()'
  TracingConfig:
    type: object
    properties:
      Mode:
        $ref: '#/definitions/TracingMode'
        description: The tracing mode.
    description: The function's AWS X-Ray tracing configuration.
  Tags:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/TagKey'
        value:
          $ref: '#/definitions/TagValue'
  LayerList:
    type: array
    items:
      $ref: '#/definitions/LayerVersionArn'
  ResourceArn:
    type: string
    pattern: '(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()'
  EnvironmentVariables:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/EnvironmentVariableName'
        value:
          $ref: '#/definitions/EnvironmentVariableValue'
  SensitiveString:
    type: string
    format: password
  EnvironmentError:
    type: object
    properties:
      ErrorCode:
        $ref: '#/definitions/String'
        description: The error code.
      Message:
        $ref: '#/definitions/SensitiveString'
        description: The error message.
    description: Error messages for environment variables that couldn't be applied.
  EnvironmentResponse:
    type: object
    properties:
      Variables:
        $ref: '#/definitions/EnvironmentVariables'
        description: Environment variable key-value pairs.
      Error:
        $ref: '#/definitions/EnvironmentError'
        description: Error messages for environment variables that couldn't be applied.
    description: The results of a configuration update that applied environment variables.
  EnvironmentVariableName:
    type: string
    pattern: '[a-zA-Z]([a-zA-Z0-9_])+'
    format: password
  EnvironmentVariableValue:
    type: string
    format: password
  EventSourceMappingsList:
    type: array
    items:
      $ref: '#/definitions/EventSourceMappingConfiguration'
  S3Bucket:
    type: string
    pattern: '^[0-9A-Za-z\.\-_]*(?<!\.)$'
    minLength: 3
    maxLength: 63
  S3Key:
    type: string
    minLength: 1
    maxLength: 1024
  S3ObjectVersion:
    type: string
    minLength: 1
    maxLength: 1024
  FunctionCodeLocation:
    type: object
    properties:
      RepositoryType:
        $ref: '#/definitions/String'
        description: The service that's hosting the file.
      Location:
        $ref: '#/definitions/String'
        description: A presigned URL that you can use to download the deployment package.
    description: Details about a function's deployment package.
  NamespacedFunctionName:
    type: string
    pattern: '(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?'
    minLength: 1
    maxLength: 170
  NameSpacedFunctionArn:
    type: string
    pattern: 'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
  Timestamp:
    type: string
  VpcConfigResponse:
    type: object
    properties:
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of VPC subnet IDs.
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: A list of VPC security groups IDs.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the VPC.
    description: The VPC security groups and subnets that are attached to a Lambda function.
  TracingConfigResponse:
    type: object
    properties:
      Mode:
        $ref: '#/definitions/TracingMode'
        description: The tracing mode.
    description: The function's AWS X-Ray tracing configuration.
  LayersReferenceList:
    type: array
    items:
      $ref: '#/definitions/Layer'
  FunctionList:
    type: array
    items:
      $ref: '#/definitions/FunctionConfiguration'
  FunctionVersion:
    type: string
    enum:
      - ALL
  LayerVersionContentOutput:
    type: object
    properties:
      Location:
        $ref: '#/definitions/String'
        description: A link to the layer archive in Amazon S3 that is valid for 10 minutes.
      CodeSha256:
        $ref: '#/definitions/String'
        description: The SHA-256 hash of the layer archive.
      CodeSize:
        $ref: '#/definitions/Long'
        description: The size of the layer archive in bytes.
    description: 'Details about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>.'
  LayerArn:
    type: string
    pattern: 'arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+'
    minLength: 1
    maxLength: 140
  LayerVersionArn:
    type: string
    pattern: 'arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+'
    minLength: 1
    maxLength: 140
  LicenseInfo:
    type: string
    maxLength: 512
  HttpStatus:
    type: integer
  InvocationType:
    type: string
    enum:
      - Event
      - RequestResponse
      - DryRun
  LogType:
    type: string
    enum:
      - None
      - Tail
  Layer:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/LayerVersionArn'
        description: The Amazon Resource Name (ARN) of the function layer.
      CodeSize:
        $ref: '#/definitions/Long'
        description: The size of the layer archive in bytes.
    description: 'An <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>.'
  LayerVersionContentInput:
    type: object
    properties:
      S3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: The Amazon S3 bucket of the layer archive.
      S3Key:
        $ref: '#/definitions/S3Key'
        description: The Amazon S3 key of the layer archive.
      S3ObjectVersion:
        $ref: '#/definitions/S3ObjectVersion'
        description: 'For versioned objects, the version of the layer archive object to use.'
      ZipFile:
        $ref: '#/definitions/Blob'
        description: The base64-encoded contents of the layer archive. AWS SDK and AWS CLI clients handle the encoding for you.
    description: 'A ZIP archive that contains the contents of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.'
  LayerVersionsListItem:
    type: object
    properties:
      LayerVersionArn:
        $ref: '#/definitions/LayerVersionArn'
        description: The ARN of the layer version.
      Version:
        $ref: '#/definitions/LayerVersionNumber'
        description: The version number.
      Description:
        $ref: '#/definitions/Description'
        description: The description of the version.
      CreatedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date that the version was created, in ISO 8601 format. For example, <code>2018-11-27T15:10:45.123+0000</code>.'
      CompatibleRuntimes:
        $ref: '#/definitions/CompatibleRuntimes'
        description: The layer's compatible runtimes.
      LicenseInfo:
        $ref: '#/definitions/LicenseInfo'
        description: The layer's open-source license.
    description: 'Details about a version of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>.'
  LayerVersionsList:
    type: array
    items:
      $ref: '#/definitions/LayerVersionsListItem'
  LayersListItem:
    type: object
    properties:
      LayerName:
        $ref: '#/definitions/LayerName'
        description: The name of the layer.
      LayerArn:
        $ref: '#/definitions/LayerArn'
        description: The Amazon Resource Name (ARN) of the function layer.
      LatestMatchingVersion:
        $ref: '#/definitions/LayerVersionsListItem'
        description: The newest version of the layer.
    description: 'Details about an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">AWS Lambda layer</a>.'
  LayersList:
    type: array
    items:
      $ref: '#/definitions/LayersListItem'
  MaxListItems:
    type: integer
    minimum: 1
    maximum: 10000
  MasterRegion:
    type: string
    pattern: 'ALL|[a-z]{2}(-gov)?-[a-z]+-\d{1}'
  MaxLayerListItems:
    type: integer
    minimum: 1
    maximum: 50
  NamespacedStatementId:
    type: string
    pattern: '([a-zA-Z0-9-_.]+)'
    minLength: 1
    maxLength: 100
  SecurityGroupId:
    type: string
  SecurityGroupIds:
    type: array
    items:
      $ref: '#/definitions/SecurityGroupId'
    maxItems: 5
  SubnetId:
    type: string
  SubnetIds:
    type: array
    items:
      $ref: '#/definitions/SubnetId'
    maxItems: 16
  TagKey:
    type: string
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagValue:
    type: string
  TracingMode:
    type: string
    enum:
      - Active
      - PassThrough
  VpcId:
    type: string
