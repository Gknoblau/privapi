swagger: '2.0'
info:
  version: '2017-11-01'
  x-release: v4
  title: Amazon Elastic Container Service for Kubernetes
  description: '<p>Amazon Elastic Container Service for Kubernetes (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on AWS without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: eks
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/eks-2017-11-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/eks/'
host: eks.amazonaws.com
basePath: /
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: query
    type: string
    required: true
  Version:
    name: Version
    in: query
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /clusters:
    post:
      operationId: CreateCluster
      description: '<p>Creates an Amazon EKS control plane. </p> <p>The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, like <code>etcd</code> and the API server. The control plane runs in an account managed by AWS, and the Kubernetes API is exposed via the Amazon EKS API server endpoint.</p> <p>Amazon EKS worker nodes run in your AWS account and connect to your cluster''s control plane via the Kubernetes API server endpoint and a certificate file that is created for your cluster.</p> <p>The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the worker nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>, and <code>proxy</code> data flows).</p> <p>After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch worker nodes into your cluster. For more information, see <a href="http://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing Cluster Authentication</a> and <a href="http://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching Amazon EKS Worker Nodes</a>in the <i>Amazon EKS User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateClusterResponse'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: UnsupportedAvailabilityZoneException
          schema:
            $ref: '#/definitions/UnsupportedAvailabilityZoneException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateClusterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListClusters
      description: Lists the Amazon EKS clusters in your AWS account in the specified Region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListClustersResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListClustersRequest'
  '/clusters/{name}':
    delete:
      operationId: DeleteCluster
      description: '<p>Deletes the Amazon EKS cluster control plane. </p> <note> <p>If you have active services in your cluster that are associated with a load balancer, you must delete those services before deleting the cluster so that the load balancers are deleted properly. Otherwise, you can have orphaned resources in your VPC that prevent you from being able to delete the VPC. For more information, see <a href="http://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting a Cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteClusterResponse'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteClusterRequest'
        - name: name
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeCluster
      description: '<p>Returns descriptive information about an Amazon EKS cluster.</p> <p>The API server endpoint and certificate authority data returned by this operation are required for <code>kubelet</code> and <code>kubectl</code> to communicate with your Kubernetes API server. For more information, see <a href="http://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create a kubeconfig for Amazon EKS</a>.</p> <note> <p>The API server endpoint and certificate authority data are not available until the cluster reaches the <code>ACTIVE</code> state.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeClusterResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeClusterRequest'
        - name: name
          type: string
          in: path
          required: true
  '/clusters/{name}/updates/{updateId}':
    get:
      operationId: DescribeUpdate
      description: '<p>Returns descriptive information about an update against your Amazon EKS cluster.</p> <p>When the status of the update is <code>Succeeded</code>, the update is complete. If an update fails, the status is <code>Failed</code>, and an error detail explains the reason for the failure.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeUpdateResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeUpdateRequest'
        - name: name
          type: string
          in: path
          required: true
        - name: updateId
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/clusters/{name}/updates':
    get:
      operationId: ListUpdates
      description: 'Lists the updates associated with an Amazon EKS cluster in your AWS account, in the specified Region.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUpdatesResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUpdatesRequest'
        - name: name
          type: string
          in: path
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateClusterVersion
      description: '<p>Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the <a>DescribeUpdate</a> API operation.</p> <p>Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to <code>UPDATING</code> (this status transition is eventually consistent). When the update is complete (either <code>Failed</code> or <code>Successful</code>), the cluster status moves to <code>Active</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateClusterVersionResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateClusterVersionRequest'
        - name: name
          type: string
          in: path
          required: true
definitions:
  CreateClusterResponse:
    type: object
    example: {}
    properties:
      cluster:
        $ref: '#/definitions/Cluster'
        description: The full description of your new cluster.
  CreateClusterRequest:
    type: object
    required:
      - name
      - roleArn
      - resourcesVpcConfig
    example:
      version: '1.10'
      name: prod
      clientRequestToken: 1d2129a1-3d38-460a-9756-e5b91fddb951
      resourcesVpcConfig:
        securityGroupIds:
          - sg-6979fe18
        subnetIds:
          - subnet-6782e71e
          - subnet-e7e761ac
      roleArn: 'arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI'
    properties:
      name:
        $ref: '#/definitions/ClusterName'
        description: The unique name to give to your cluster.
      version:
        $ref: '#/definitions/String'
        description: 'The desired Kubernetes version for your cluster. If you do not specify a value here, the latest version available in Amazon EKS is used.'
      roleArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the IAM role that provides permissions for Amazon EKS to make calls to other AWS API operations on your behalf. For more information, see <a href="http://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.'
      resourcesVpcConfig:
        $ref: '#/definitions/VpcConfigRequest'
        description: 'The VPC subnets and security groups used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see <a href="http://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster VPC Considerations</a> and <a href="http://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>. You must specify at least two subnets. You may specify up to five security groups, but we recommend that you use a dedicated security group for your cluster control plane.'
      clientRequestToken:
        $ref: '#/definitions/String'
        description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
  ResourceInUseException: {}
  ResourceLimitExceededException: {}
  InvalidParameterException: {}
  ClientException: {}
  ServerException: {}
  ServiceUnavailableException: {}
  UnsupportedAvailabilityZoneException: {}
  DeleteClusterResponse:
    type: object
    example: {}
    properties:
      cluster:
        $ref: '#/definitions/Cluster'
        description: The full description of the cluster to delete.
  DeleteClusterRequest:
    type: object
    example:
      name: devel
    properties: {}
  ResourceNotFoundException: {}
  DescribeClusterResponse:
    type: object
    example:
      cluster:
        version: '1.10'
        name: devel
        arn: 'arn:aws:eks:us-west-2:012345678910:cluster/devel'
        certificateAuthority:
          data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNE1EVXpNVEl6TVRFek1Wb1hEVEk0TURVeU9ESXpNVEV6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTZWCjVUaG4rdFcySm9Xa2hQMzRlVUZMNitaRXJOZGIvWVdrTmtDdWNGS2RaaXl2TjlMVmdvUmV2MjlFVFZlN1ZGbSsKUTJ3ZURyRXJiQyt0dVlibkFuN1ZLYmE3ay9hb1BHekZMdmVnb0t6b0M1N2NUdGVwZzRIazRlK2tIWHNaME10MApyb3NzcjhFM1ROeExETnNJTThGL1cwdjhsTGNCbWRPcjQyV2VuTjFHZXJnaDNSZ2wzR3JIazBnNTU0SjFWenJZCm9hTi8zODFUczlOTFF2QTBXb0xIcjBFRlZpTFdSZEoyZ3lXaC9ybDVyOFNDOHZaQXg1YW1BU0hVd01aTFpWRC8KTDBpOW4wRVM0MkpVdzQyQmxHOEdpd3NhTkJWV3lUTHZKclNhRXlDSHFtVVZaUTFDZkFXUjl0L3JleVVOVXM3TApWV1FqM3BFbk9RMitMSWJrc0RzQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNZ3RsQ1dIQ2U2YzVHMXl2YlFTS0Q4K2hUalkKSm1NSG56L2EvRGt0WG9YUjFVQzIrZUgzT1BZWmVjRVZZZHVaSlZCckNNQ2VWR0ZkeWdBYlNLc1FxWDg0S2RXbAp1MU5QaERDSmEyRHliN2pVMUV6VThTQjFGZUZ5ZFE3a0hNS1E1blpBRVFQOTY4S01hSGUrSm0yQ2x1UFJWbEJVCjF4WlhTS1gzTVZ0K1Q0SU1EV2d6c3JRSjVuQkRjdEtLcUZtM3pKdVVubHo5ZEpVckdscEltMjVJWXJDckxYUFgKWkUwRUtRNWEzMHhkVWNrTHRGQkQrOEtBdFdqSS9yZUZPNzM1YnBMdVoyOTBaNm42QlF3elRrS0p4cnhVc3QvOAppNGsxcnlsaUdWMm5SSjBUYjNORkczNHgrYWdzYTRoSTFPbU90TFM0TmgvRXJxT3lIUXNDc2hEQUtKUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        createdAt: 1527807879.988
        endpoint: 'https://A0DCCD80A04F01705DD065655C30CC3D.yl4.us-west-2.eks.amazonaws.com'
        resourcesVpcConfig:
          securityGroupIds:
            - sg-6979fe18
          subnetIds:
            - subnet-6782e71e
            - subnet-e7e761ac
          vpcId: vpc-950809ec
        roleArn: 'arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI'
        status: ACTIVE
    properties:
      cluster:
        $ref: '#/definitions/Cluster'
        description: The full description of your specified cluster.
  DescribeClusterRequest:
    type: object
    example:
      name: devel
    properties: {}
  DescribeUpdateResponse:
    type: object
    properties:
      update:
        $ref: '#/definitions/Update'
        description: The full description of the specified update.
  DescribeUpdateRequest:
    type: object
    properties: {}
  ListClustersResponse:
    type: object
    example:
      clusters:
        - devel
        - prod
    properties:
      clusters:
        $ref: '#/definitions/StringList'
        description: A list of all of the clusters for your account in the specified Region.
      nextToken:
        $ref: '#/definitions/String'
        description: 'The <code>nextToken</code> value to include in a future <code>ListClusters</code> request. When the results of a <code>ListClusters</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
  ListClustersRequest:
    type: object
    example: {}
    properties: {}
  ListUpdatesResponse:
    type: object
    properties:
      updateIds:
        $ref: '#/definitions/StringList'
        description: A list of all the updates for the specified cluster and Region.
      nextToken:
        $ref: '#/definitions/String'
        description: 'The <code>nextToken</code> value to include in a future <code>ListUpdates</code> request. When the results of a <code>ListUpdates</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
  ListUpdatesRequest:
    type: object
    properties: {}
  UpdateClusterVersionResponse:
    type: object
    properties:
      update:
        $ref: '#/definitions/Update'
        description: The full description of the specified update
  UpdateClusterVersionRequest:
    type: object
    required:
      - version
    properties:
      version:
        $ref: '#/definitions/String'
        description: The desired Kubernetes version following a successful update.
      clientRequestToken:
        $ref: '#/definitions/String'
        description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
  InvalidRequestException: {}
  String:
    type: string
  Certificate:
    type: object
    properties:
      data:
        $ref: '#/definitions/String'
        description: The base64 encoded certificate data required to communicate with your cluster. Add this to the <code>certificate-authority-data</code> section of the <code>kubeconfig</code> file for your cluster.
    description: An object representing the <code>certificate-authority-data</code> for your cluster.
  Timestamp:
    type: string
    format: date-time
  VpcConfigResponse:
    type: object
    properties:
      subnetIds:
        $ref: '#/definitions/StringList'
        description: The subnets associated with your cluster.
      securityGroupIds:
        $ref: '#/definitions/StringList'
        description: The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your worker nodes and the Kubernetes control plane.
      vpcId:
        $ref: '#/definitions/String'
        description: The VPC associated with your cluster.
    description: An object representing an Amazon EKS cluster VPC configuration response.
  ClusterStatus:
    type: string
    enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
  Cluster:
    type: object
    properties:
      name:
        $ref: '#/definitions/String'
        description: The name of the cluster.
      arn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the cluster.
      createdAt:
        $ref: '#/definitions/Timestamp'
        description: The Unix epoch timestamp in seconds for when the cluster was created.
      version:
        $ref: '#/definitions/String'
        description: The Kubernetes server version for the cluster.
      endpoint:
        $ref: '#/definitions/String'
        description: The endpoint for your Kubernetes API server.
      roleArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
      resourcesVpcConfig:
        $ref: '#/definitions/VpcConfigResponse'
        description: 'The VPC subnets and security groups used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see <a href="http://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster VPC Considerations</a> and <a href="http://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>.'
      status:
        $ref: '#/definitions/ClusterStatus'
        description: The current status of the cluster.
      certificateAuthority:
        $ref: '#/definitions/Certificate'
        description: The <code>certificate-authority-data</code> for your cluster.
      clientRequestToken:
        $ref: '#/definitions/String'
        description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
      platformVersion:
        $ref: '#/definitions/String'
        description: 'The platform version of your Amazon EKS cluster. For more information, see <a href="http://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html">Platform Versions</a> in the <i> <i>Amazon EKS User Guide</i> </i>.'
    description: An object representing an Amazon EKS cluster.
  ClusterName:
    type: string
    pattern: '^[0-9A-Za-z][A-Za-z0-9\-_]*'
    minLength: 1
    maxLength: 100
  VpcConfigRequest:
    type: object
    required:
      - subnetIds
    properties:
      subnetIds:
        $ref: '#/definitions/StringList'
        description: Specify subnets for your Amazon EKS worker nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
      securityGroupIds:
        $ref: '#/definitions/StringList'
        description: 'Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane. If you do not specify a security group, the default security group for your VPC is used.'
    description: An object representing an Amazon EKS cluster VPC configuration request.
  Update:
    type: object
    properties:
      id:
        $ref: '#/definitions/String'
        description: A UUID that is used to track the update.
      status:
        $ref: '#/definitions/UpdateStatus'
        description: The current status of the update.
      type:
        $ref: '#/definitions/UpdateType'
        description: The type of the update.
      params:
        $ref: '#/definitions/UpdateParams'
        description: A key-value map that contains the parameters associated with the update.
      createdAt:
        $ref: '#/definitions/Timestamp'
        description: The Unix epoch timestamp in seconds for when the update was created.
      errors:
        $ref: '#/definitions/ErrorDetails'
        description: Any errors associated with a <code>Failed</code> update.
    description: An object representing an asynchronous update.
  ErrorCode:
    type: string
    enum:
      - SubnetNotFound
      - SecurityGroupNotFound
      - EniLimitReached
      - IpNotAvailable
      - AccessDenied
      - OperationNotPermitted
      - VpcIdNotFound
      - Unknown
  StringList:
    type: array
    items:
      $ref: '#/definitions/String'
  ErrorDetail:
    type: object
    properties:
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: '<p>A brief description of the error. </p> <ul> <li> <p> <b>SubnetNotFound</b>: One of the subnets associated with the cluster could not be found.</p> </li> <li> <p> <b>SecurityGroupNotFound</b>: One of the security groups associated with the cluster could not be found.</p> </li> <li> <p> <b>EniLimitReached</b>: You have reached the elastic network interface limit for your account.</p> </li> <li> <p> <b>IpNotAvailable</b>: A subnet associated with the cluster does not have any free IP addresses.</p> </li> <li> <p> <b>AccessDenied</b>: You do not have permissions to perform the specified operation.</p> </li> <li> <p> <b>OperationNotPermitted</b>: The service role associated with the cluster does not have the required access permissions for Amazon EKS.</p> </li> <li> <p> <b>VpcIdNotFound</b>: The VPC associated with the cluster could not be found.</p> </li> </ul>'
      errorMessage:
        $ref: '#/definitions/String'
        description: A more complete description of the error.
      resourceIds:
        $ref: '#/definitions/StringList'
        description: An optional field that contains the resource IDs associated with the error.
    description: An object representing an error when an asynchronous operation fails.
  ErrorDetails:
    type: array
    items:
      $ref: '#/definitions/ErrorDetail'
  ListClustersRequestMaxResults:
    type: integer
    minimum: 1
    maximum: 100
  ListUpdatesRequestMaxResults:
    type: integer
    minimum: 1
    maximum: 100
  UpdateStatus:
    type: string
    enum:
      - InProgress
      - Failed
      - Cancelled
      - Successful
  UpdateType:
    type: string
    enum:
      - VersionUpdate
  UpdateParams:
    type: array
    items:
      $ref: '#/definitions/UpdateParam'
  UpdateParamType:
    type: string
    enum:
      - Version
      - PlatformVersion
  UpdateParam:
    type: object
    properties:
      type:
        $ref: '#/definitions/UpdateParamType'
        description: The keys associated with an update request.
      value:
        $ref: '#/definitions/String'
        description: The value of the keys submitted as part of an update request.
    description: An object representing the details of an update request.
