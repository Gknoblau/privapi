swagger: '2.0'
info:
  version: '2017-07-24'
  x-release: v4
  title: Amazon SageMaker Service
  description: Definition of the public APIs exposed by SageMaker
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sagemaker
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sagemaker-2017-07-24.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/sagemaker/'
host: api.sagemaker.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: query
    type: string
    required: true
  Version:
    name: Version
    in: query
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddTags
      description: '<p>Adds or overwrites one or more tags for the specified Amazon SageMaker resource. You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, models, endpoint configurations, and endpoints.</p> <p>Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see For more information, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS Tagging Strategies</a>.</p> <note> <p>Tags that you add to a hyperparameter tuning job by calling this API are also added to any training jobs that the hyperparameter tuning job launches after you call this API, but not to training jobs that the hyperparameter tuning job launched before you called this API. To make sure that the tags associated with a hyperparameter tuning job are also added to all training jobs that the hyperparameter tuning job launches, add the tags when you first create the tuning job by specifying them in the <code>Tags</code> parameter of <a>CreateHyperParameterTuningJob</a> </p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAlgorithm':
    post:
      operationId: CreateAlgorithm
      description: Create a machine learning algorithm that you can use in Amazon SageMaker and list in the AWS Marketplace.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAlgorithmOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAlgorithmInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateCodeRepository':
    post:
      operationId: CreateCodeRepository
      description: '<p>Creates a Git repository as a resource in your Amazon SageMaker account. You can associate the repository with notebook instances so that you can use Git source control for the notebooks you create. The Git repository is a resource in your Amazon SageMaker account, so it can be associated with more than one notebook instance, and it persists independently from the lifecycle of any notebook instances it is associated with.</p> <p>The repository can be hosted either in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCodeRepositoryOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCodeRepositoryInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateCompilationJob':
    post:
      operationId: CreateCompilationJob
      description: '<p>Starts a model compilation job. After the model has been compiled, Amazon SageMaker saves the resulting model artifacts to an Amazon Simple Storage Service (Amazon S3) bucket that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts with AWS IoT Greengrass. In that case, deploy them as an ML resource.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p>A name for the compilation job</p> </li> <li> <p> Information about the input model artifacts </p> </li> <li> <p>The output location for the compiled model and the device (target) that the model runs on </p> </li> <li> <p> <code>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker assumes to perform the model compilation job</code> </p> </li> </ul> <p>You can also provide a <code>Tag</code> to track the model compilation job''s resource use and costs. The response body contains the <code>CompilationJobArn</code> for the compiled job.</p> <p>To stop a model compilation job, use <a>StopCompilationJob</a>. To get information about a particular model compilation job, use <a>DescribeCompilationJob</a>. To get information about multiple model compilation jobs, use <a>ListCompilationJobs</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCompilationJobResponse'
        '480':
          description: ResourceInUse
          schema:
            $ref: '#/definitions/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCompilationJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateEndpoint':
    post:
      operationId: CreateEndpoint
      description: '<p>Creates an endpoint using the endpoint configuration specified in the request. Amazon SageMaker uses the endpoint to provision resources and deploy models. You create the endpoint configuration with the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html">CreateEndpointConfig</a> API. </p> <note> <p> Use this API only for hosting models using Amazon SageMaker hosting services. </p> </note> <p>The endpoint name must be unique within an AWS Region in your AWS account. </p> <p>When it receives the request, Amazon SageMaker creates the endpoint, launches the resources (ML compute instances), and deploys the model(s) on them. </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Creating</code>. After it creates the endpoint, it sets the status to <code>InService</code>. Amazon SageMaker can then process incoming requests for inferences. To check the status of an endpoint, use the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API.</p> <p>For an example, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/ex1.html">Exercise 1: Using the K-Means Algorithm Provided by Amazon SageMaker</a>. </p> <p>If any of the models hosted at this endpoint get model data from an Amazon S3 location, Amazon SageMaker uses AWS Security Token Service to download model artifacts from the S3 path you provided. AWS STS is activated in your IAM user account by default. If you previously deactivated AWS STS for a region, you need to reactivate AWS STS for that region. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating and Deactivating AWS STS i an AWS Region</a> in the <i>AWS Identity and Access Management User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEndpointOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateEndpointInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateEndpointConfig':
    post:
      operationId: CreateEndpointConfig
      description: '<p>Creates an endpoint configuration that Amazon SageMaker hosting services uses to deploy models. In the configuration, you identify one or more models, created using the <code>CreateModel</code> API, to deploy and the resources that you want Amazon SageMaker to provision. Then you call the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html">CreateEndpoint</a> API.</p> <note> <p> Use this API only if you want to use Amazon SageMaker hosting services to deploy models into production. </p> </note> <p>In the request, you define one or more <code>ProductionVariant</code>s, each of which identifies a model. Each <code>ProductionVariant</code> parameter also describes the resources that you want Amazon SageMaker to provision. This includes the number and type of ML compute instances to deploy. </p> <p>If you are hosting multiple models, you also assign a <code>VariantWeight</code> to specify how much traffic you want to allocate to each model. For example, suppose that you want to host two models, A and B, and you assign traffic weight 2 for model A and 1 for model B. Amazon SageMaker distributes two-thirds of the traffic to Model A, and one-third to model B. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEndpointConfigOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateEndpointConfigInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateHyperParameterTuningJob':
    post:
      operationId: CreateHyperParameterTuningJob
      description: 'Starts a hyperparameter tuning job. A hyperparameter tuning job finds the best version of a model by running many training jobs on your dataset using the algorithm you choose and values for hyperparameters within ranges that you specify. It then chooses the hyperparameter values that result in a model that performs the best, as measured by an objective metric that you choose.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateHyperParameterTuningJobResponse'
        '480':
          description: ResourceInUse
          schema:
            $ref: '#/definitions/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateHyperParameterTuningJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateLabelingJob':
    post:
      operationId: CreateLabelingJob
      description: '<p>Creates a job that uses workers to label the data objects in your input dataset. You can use the labeled data to train machine learning models.</p> <p>You can select your workforce from one of three providers:</p> <ul> <li> <p>A private workforce that you create. It can include employees, contractors, and outside experts. Use a private workforce when want the data to stay within your organization or when a specific set of skills is required.</p> </li> <li> <p>One or more vendors that you select from the AWS Marketplace. Vendors provide expertise in specific areas. </p> </li> <li> <p>The Amazon Mechanical Turk workforce. This is the largest workforce, but it should only be used for public data or data that has been stripped of any personally identifiable information.</p> </li> </ul> <p>You can also use <i>automated data labeling</i> to reduce the number of data objects that need to be labeled by a human. Automated data labeling uses <i>active learning</i> to determine if a data object can be labeled by machine or if it needs to be sent to a human worker. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sms-automated-labeling.html">Using Automated Data Labeling</a>.</p> <p>The data objects to be labeled are contained in an Amazon S3 bucket. You create a <i>manifest file</i> that describes the location of each object. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sms-data.html">Using Input and Output Data</a>.</p> <p>The output can be used as the manifest file for another labeling job or as training data for your machine learning models.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLabelingJobResponse'
        '480':
          description: ResourceInUse
          schema:
            $ref: '#/definitions/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLabelingJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateModel':
    post:
      operationId: CreateModel
      description: '<p>Creates a model in Amazon SageMaker. In the request, you name the model and describe a primary container. For the primary container, you specify the docker image containing inference code, artifacts (from prior training), and custom environment map that the inference code uses when you deploy the model for predictions.</p> <p>Use this API to create a model if you want to use Amazon SageMaker hosting services or run a batch transform job.</p> <p>To host your model, you create an endpoint configuration with the <code>CreateEndpointConfig</code> API, and then create an endpoint with the <code>CreateEndpoint</code> API. Amazon SageMaker then deploys all of the containers that you defined for the model in the hosting environment. </p> <p>To run a batch transform using your model, you start a job with the <code>CreateTransformJob</code> API. Amazon SageMaker uses your model and your dataset to get inferences which are then saved to a specified S3 location.</p> <p>In the <code>CreateModel</code> request, you must define a container with the <code>PrimaryContainer</code> parameter.</p> <p>In the request, you also provide an IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute hosting instances or for batch transform jobs. In addition, you also use the IAM role to manage permissions the inference code needs. For example, if the inference code access any other AWS resources, you grant necessary permissions via this role.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateModelOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModelInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateModelPackage':
    post:
      operationId: CreateModelPackage
      description: '<p>Creates a model package that you can use to create Amazon SageMaker models or list on AWS Marketplace. Buyers can subscribe to model packages listed on AWS Marketplace to create models in Amazon SageMaker.</p> <p>To create a model package by specifying a Docker container that contains your inference code and the Amazon S3 location of your model artifacts, provide values for <code>InferenceSpecification</code>. To create a model from an algorithm resource that you created or subscribed to in AWS Marketplace, provide a value for <code>SourceAlgorithmSpecification</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateModelPackageOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModelPackageInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateNotebookInstance':
    post:
      operationId: CreateNotebookInstance
      description: '<p>Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook. </p> <p>In a <code>CreateNotebookInstance</code> request, specify the type of ML compute instance that you want to run. Amazon SageMaker launches the instance, installs common libraries that you can use to explore datasets for model training, and attaches an ML storage volume to the notebook instance. </p> <p>Amazon SageMaker also provides a set of example notebooks. Each notebook demonstrates how to use Amazon SageMaker with a specific algorithm or with a machine learning framework. </p> <p>After receiving the request, Amazon SageMaker does the following:</p> <ol> <li> <p>Creates a network interface in the Amazon SageMaker VPC.</p> </li> <li> <p>(Option) If you specified <code>SubnetId</code>, Amazon SageMaker creates a network interface in your own VPC, which is inferred from the subnet ID that you provide in the input. When creating this network interface, Amazon SageMaker attaches the security group that you specified in the request to the network interface that it creates in your VPC.</p> </li> <li> <p>Launches an EC2 instance of the type specified in the request in the Amazon SageMaker VPC. If you specified <code>SubnetId</code> of your VPC, Amazon SageMaker specifies both network interfaces when launching this instance. This enables inbound traffic from your own VPC to the notebook instance, assuming that the security groups allow it.</p> </li> </ol> <p>After creating the notebook instance, Amazon SageMaker returns its Amazon Resource Name (ARN).</p> <p>After Amazon SageMaker creates the notebook instance, you can connect to the Jupyter server and work in Jupyter notebooks. For example, you can write code to explore a dataset that you can use for model training, train a model, host models by creating Amazon SageMaker endpoints, and validate hosted models. </p> <p>For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNotebookInstanceOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateNotebookInstanceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateNotebookInstanceLifecycleConfig':
    post:
      operationId: CreateNotebookInstanceLifecycleConfig
      description: '<p>Creates a lifecycle configuration that you can associate with a notebook instance. A <i>lifecycle configuration</i> is a collection of shell scripts that run when you create or start a notebook instance.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNotebookInstanceLifecycleConfigOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateNotebookInstanceLifecycleConfigInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePresignedNotebookInstanceUrl':
    post:
      operationId: CreatePresignedNotebookInstanceUrl
      description: '<p>Returns a URL that you can use to connect to the Jupyter server from a notebook instance. In the Amazon SageMaker console, when you choose <code>Open</code> next to a notebook instance, Amazon SageMaker opens a new tab showing the Jupyter server home page from the notebook instance. The console uses this API to get the URL and show the page.</p> <p>You can restrict access to this API and to the URL that it returns to a list of IP addresses that you specify. To restrict access, attach an IAM policy that denies access to this API unless the call comes from an IP address in the specified list to every AWS Identity and Access Management user, group, or role used to access the notebook instance. Use the <code>NotIpAddress</code> condition operator and the <code>aws:SourceIP</code> condition context key to specify the list of IP addresses that you want to have access to the notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/howitworks-access-ws.html#nbi-ip-filter">Limit Access to a Notebook Instance by IP Address</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePresignedNotebookInstanceUrlOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePresignedNotebookInstanceUrlInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateTrainingJob':
    post:
      operationId: CreateTrainingJob
      description: '<p>Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts to an Amazon S3 location that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts in a deep learning service other than Amazon SageMaker, provided that you know how to use them for inferences. </p> <p>In the request body, you provide the following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> - Identifies the training algorithm to use. </p> </li> <li> <p> <code>HyperParameters</code> - Specify these algorithm-specific parameters to influence the quality of the final model. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> </li> <li> <p> <code>InputDataConfig</code> - Describes the training dataset and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results of model training. </p> <p/> </li> <li> <p> <code>ResourceConfig</code> - Identifies the resources, ML compute instances, and ML storage volumes to deploy for model training. In distributed training, you specify more than one instance. </p> </li> <li> <p> <code>RoleARN</code> - The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during model training. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete model training. </p> </li> <li> <p> <code>StoppingCondition</code> - Sets a duration for training. Use this parameter to cap model training costs. </p> </li> </ul> <p> For more information about Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTrainingJobResponse'
        '480':
          description: ResourceInUse
          schema:
            $ref: '#/definitions/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTrainingJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateTransformJob':
    post:
      operationId: CreateTransformJob
      description: '<p>Starts a transform job. A transform job uses a trained model to get inferences on a dataset and saves these results to an Amazon S3 location that you specify.</p> <p>To perform batch transformations, you create a transform job and use the data that you have readily available.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p> <code>TransformJobName</code> - Identifies the transform job. The name must be unique within an AWS Region in an AWS account.</p> </li> <li> <p> <code>ModelName</code> - Identifies the model to use. <code>ModelName</code> must be the name of an existing Amazon SageMaker model in the same AWS Region and AWS account. For information on creating a model, see <a>CreateModel</a>.</p> </li> <li> <p> <code>TransformInput</code> - Describes the dataset to be transformed and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>TransformOutput</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.</p> </li> <li> <p> <code>TransformResources</code> - Identifies the ML compute instances for the transform job.</p> </li> </ul> <p> For more information about how batch transformation works Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html">How It Works</a>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTransformJobResponse'
        '480':
          description: ResourceInUse
          schema:
            $ref: '#/definitions/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTransformJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateWorkteam':
    post:
      operationId: CreateWorkteam
      description: <p>Creates a new work team for labeling your data. A work team is defined by one or more Amazon Cognito user pools. You must first create the user pools before you can create a work team.</p> <p>You cannot create more than 25 work teams in an account and region.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateWorkteamResponse'
        '480':
          description: ResourceInUse
          schema:
            $ref: '#/definitions/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateWorkteamRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteAlgorithm':
    post:
      operationId: DeleteAlgorithm
      description: Removes the specified algorithm from your account.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAlgorithmInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteCodeRepository':
    post:
      operationId: DeleteCodeRepository
      description: Deletes the specified Git repository from your account.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCodeRepositoryInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteEndpoint':
    post:
      operationId: DeleteEndpoint
      description: '<p>Deletes an endpoint. Amazon SageMaker frees up all of the resources that were deployed when the endpoint was created. </p> <p>Amazon SageMaker retires any custom KMS key grants associated with the endpoint, meaning you don''t need to use the <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html">RevokeGrant</a> API call.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEndpointInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteEndpointConfig':
    post:
      operationId: DeleteEndpointConfig
      description: 'Deletes an endpoint configuration. The <code>DeleteEndpointConfig</code> API deletes only the specified configuration. It does not delete endpoints created using the configuration. '
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEndpointConfigInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteModel':
    post:
      operationId: DeleteModel
      description: 'Deletes a model. The <code>DeleteModel</code> API deletes only the model entry that was created in Amazon SageMaker when you called the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html">CreateModel</a> API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model. '
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteModelInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteModelPackage':
    post:
      operationId: DeleteModelPackage
      description: <p>Deletes a model package.</p> <p>A model package is used to create Amazon SageMaker models or list on AWS Marketplace. Buyers can subscribe to model packages listed on AWS Marketplace to create models in Amazon SageMaker.</p>
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteModelPackageInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteNotebookInstance':
    post:
      operationId: DeleteNotebookInstance
      description: '<p> Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the <code>StopNotebookInstance</code> API. </p> <important> <p>When you delete a notebook instance, you lose all of your data. Amazon SageMaker removes the ML compute instance, and deletes the ML storage volume and the network interface associated with the notebook instance. </p> </important>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNotebookInstanceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteNotebookInstanceLifecycleConfig':
    post:
      operationId: DeleteNotebookInstanceLifecycleConfig
      description: Deletes a notebook instance lifecycle configuration.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNotebookInstanceLifecycleConfigInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteTags':
    post:
      operationId: DeleteTags
      description: '<p>Deletes the specified tags from an Amazon SageMaker resource.</p> <p>To list a resource''s tags, use the <code>ListTags</code> API. </p> <note> <p>When you call this API to delete tags from a hyperparameter tuning job, the deleted tags are not removed from training jobs that the hyperparameter tuning job launched before you called this API.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTagsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTagsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteWorkteam':
    post:
      operationId: DeleteWorkteam
      description: Deletes an existing work team. This operation can't be undone.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteWorkteamResponse'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteWorkteamRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAlgorithm':
    post:
      operationId: DescribeAlgorithm
      description: Returns a description of the specified algorithm that is in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlgorithmOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAlgorithmInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeCodeRepository':
    post:
      operationId: DescribeCodeRepository
      description: Gets details about the specified Git repository.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCodeRepositoryOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCodeRepositoryInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeCompilationJob':
    post:
      operationId: DescribeCompilationJob
      description: '<p>Returns information about a model compilation job.</p> <p>To create a model compilation job, use <a>CreateCompilationJob</a>. To get information about multiple model compilation jobs, use <a>ListCompilationJobs</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCompilationJobResponse'
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCompilationJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEndpoint':
    post:
      operationId: DescribeEndpoint
      description: Returns the description of an endpoint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndpointOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEndpointInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEndpointConfig':
    post:
      operationId: DescribeEndpointConfig
      description: Returns the description of an endpoint configuration created using the <code>CreateEndpointConfig</code> API.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndpointConfigOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEndpointConfigInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeHyperParameterTuningJob':
    post:
      operationId: DescribeHyperParameterTuningJob
      description: Gets a description of a hyperparameter tuning job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeHyperParameterTuningJobResponse'
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeHyperParameterTuningJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeLabelingJob':
    post:
      operationId: DescribeLabelingJob
      description: Gets information about a labeling job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLabelingJobResponse'
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLabelingJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeModel':
    post:
      operationId: DescribeModel
      description: Describes a model that you created using the <code>CreateModel</code> API.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeModelOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeModelInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeModelPackage':
    post:
      operationId: DescribeModelPackage
      description: '<p>Returns a description of the specified model package, which is used to create Amazon SageMaker models or list them on AWS Marketplace.</p> <p>To create models in Amazon SageMaker, buyers can subscribe to model packages listed on AWS Marketplace.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeModelPackageOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeModelPackageInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeNotebookInstance':
    post:
      operationId: DescribeNotebookInstance
      description: Returns information about a notebook instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeNotebookInstanceOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeNotebookInstanceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeNotebookInstanceLifecycleConfig':
    post:
      operationId: DescribeNotebookInstanceLifecycleConfig
      description: '<p>Returns a description of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeNotebookInstanceLifecycleConfigOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeNotebookInstanceLifecycleConfigInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeSubscribedWorkteam':
    post:
      operationId: DescribeSubscribedWorkteam
      description: Gets information about a work team provided by a vendor. It returns details about the subscription with a vendor in the AWS Marketplace.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSubscribedWorkteamResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSubscribedWorkteamRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTrainingJob':
    post:
      operationId: DescribeTrainingJob
      description: Returns information about a training job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTrainingJobResponse'
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTrainingJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTransformJob':
    post:
      operationId: DescribeTransformJob
      description: Returns information about a transform job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTransformJobResponse'
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTransformJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeWorkteam':
    post:
      operationId: DescribeWorkteam
      description: 'Gets information about a specific work team. You can see information such as the create date, the last updated date, membership information, and the work team''s Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeWorkteamResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeWorkteamRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetSearchSuggestions':
    post:
      operationId: GetSearchSuggestions
      description: 'An auto-complete API for the search functionality in the Amazon SageMaker console. It returns suggestions of possible matches for the property name to use in <code>Search</code> queries. Provides suggestions for <code>HyperParameters</code>, <code>Tags</code>, and <code>Metrics</code>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSearchSuggestionsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSearchSuggestionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAlgorithms':
    post:
      operationId: ListAlgorithms
      description: Lists the machine learning algorithms that have been created.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAlgorithmsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAlgorithmsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCodeRepositories':
    post:
      operationId: ListCodeRepositories
      description: Gets a list of the Git repositories in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCodeRepositoriesOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCodeRepositoriesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCompilationJobs':
    post:
      operationId: ListCompilationJobs
      description: '<p>Lists model compilation jobs that satisfy various filters.</p> <p>To create a model compilation job, use <a>CreateCompilationJob</a>. To get information about a particular model compilation job you have created, use <a>DescribeCompilationJob</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCompilationJobsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCompilationJobsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListEndpointConfigs':
    post:
      operationId: ListEndpointConfigs
      description: Lists endpoint configurations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEndpointConfigsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEndpointConfigsInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListEndpoints':
    post:
      operationId: ListEndpoints
      description: Lists endpoints.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEndpointsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEndpointsInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListHyperParameterTuningJobs':
    post:
      operationId: ListHyperParameterTuningJobs
      description: Gets a list of <a>HyperParameterTuningJobSummary</a> objects that describe the hyperparameter tuning jobs launched in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListHyperParameterTuningJobsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListHyperParameterTuningJobsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListLabelingJobs':
    post:
      operationId: ListLabelingJobs
      description: Gets a list of labeling jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLabelingJobsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLabelingJobsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListLabelingJobsForWorkteam':
    post:
      operationId: ListLabelingJobsForWorkteam
      description: Gets a list of labeling jobs assigned to a specified work team.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLabelingJobsForWorkteamResponse'
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLabelingJobsForWorkteamRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListModelPackages':
    post:
      operationId: ListModelPackages
      description: Lists the model packages that have been created.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListModelPackagesOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListModelPackagesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListModels':
    post:
      operationId: ListModels
      description: 'Lists models created with the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html">CreateModel</a> API.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListModelsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListModelsInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListNotebookInstanceLifecycleConfigs':
    post:
      operationId: ListNotebookInstanceLifecycleConfigs
      description: Lists notebook instance lifestyle configurations created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNotebookInstanceLifecycleConfigsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListNotebookInstanceLifecycleConfigsInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListNotebookInstances':
    post:
      operationId: ListNotebookInstances
      description: 'Returns a list of the Amazon SageMaker notebook instances in the requester''s account in an AWS Region. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNotebookInstancesOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListNotebookInstancesInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListSubscribedWorkteams':
    post:
      operationId: ListSubscribedWorkteams
      description: Gets a list of the work teams that you are subscribed to in the AWS Marketplace. The list may be empty if no work team satisfies the filter specified in the <code>NameContains</code> parameter.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSubscribedWorkteamsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSubscribedWorkteamsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTags':
    post:
      operationId: ListTags
      description: Returns the tags for the specified Amazon SageMaker resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTrainingJobs':
    post:
      operationId: ListTrainingJobs
      description: Lists training jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTrainingJobsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTrainingJobsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTrainingJobsForHyperParameterTuningJob':
    post:
      operationId: ListTrainingJobsForHyperParameterTuningJob
      description: Gets a list of <a>TrainingJobSummary</a> objects that describe the training jobs that a hyperparameter tuning job launched.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTrainingJobsForHyperParameterTuningJobResponse'
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTrainingJobsForHyperParameterTuningJobRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTransformJobs':
    post:
      operationId: ListTransformJobs
      description: Lists transform jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTransformJobsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTransformJobsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListWorkteams':
    post:
      operationId: ListWorkteams
      description: Gets a list of work teams that you have defined in a region. The list may be empty if no work team satisfies the filter specified in the <code>NameContains</code> parameter.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListWorkteamsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListWorkteamsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RenderUiTemplate':
    post:
      operationId: RenderUiTemplate
      description: 'Renders the UI template so that you can preview the worker''s experience. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RenderUiTemplateResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RenderUiTemplateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#Search':
    post:
      operationId: Search
      description: '<p>Finds Amazon SageMaker resources that match a search query. Matching resource objects are returned as a list of <code>SearchResult</code> objects in the response. You can sort the search results by any resource property in a ascending or descending order.</p> <p>You can query against the following value types: numerical, text, Booleans, and timestamps.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartNotebookInstance':
    post:
      operationId: StartNotebookInstance
      description: 'Launches an ML compute instance with the latest version of the libraries and attaches your ML storage volume. After configuring the notebook instance, Amazon SageMaker sets the notebook instance status to <code>InService</code>. A notebook instance''s status must be <code>InService</code> before you can connect to your Jupyter notebook. '
      responses:
        '200':
          description: Success
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartNotebookInstanceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopCompilationJob':
    post:
      operationId: StopCompilationJob
      description: '<p>Stops a model compilation job.</p> <p> To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal. This gracefully shuts the job down. If the job hasn''t stopped, it sends the SIGKILL signal.</p> <p>When it receives a <code>StopCompilationJob</code> request, Amazon SageMaker changes the <a>CompilationJobSummary$CompilationJobStatus</a> of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the <a>CompilationJobSummary$CompilationJobStatus</a> to <code>Stopped</code>. </p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopCompilationJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopHyperParameterTuningJob':
    post:
      operationId: StopHyperParameterTuningJob
      description: '<p>Stops a running hyperparameter tuning job and all running training jobs that the tuning job launched.</p> <p>All model artifacts output from the training jobs are stored in Amazon Simple Storage Service (Amazon S3). All data that the training jobs write to Amazon CloudWatch Logs are still available in CloudWatch. After the tuning job moves to the <code>Stopped</code> state, it releases all reserved resources for the tuning job.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopHyperParameterTuningJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopLabelingJob':
    post:
      operationId: StopLabelingJob
      description: Stops a running labeling job. A job that is stopped cannot be restarted. Any results obtained before the job is stopped are placed in the Amazon S3 output bucket.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopLabelingJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopNotebookInstance':
    post:
      operationId: StopNotebookInstance
      description: '<p>Terminates the ML compute instance. Before terminating the instance, Amazon SageMaker disconnects the ML storage volume from it. Amazon SageMaker preserves the ML storage volume. </p> <p>To access data on the ML storage volume for a notebook instance that has been terminated, call the <code>StartNotebookInstance</code> API. <code>StartNotebookInstance</code> launches another ML compute instance, configures it, and attaches the preserved ML storage volume so you can continue your work. </p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopNotebookInstanceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopTrainingJob':
    post:
      operationId: StopTrainingJob
      description: '<p>Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of the training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker save the intermediate results of a model training job. This intermediate data is a valid model artifact. You can use the model artifacts that are saved when Amazon SageMaker stops a training job to create a model. </p> <p>When it receives a <code>StopTrainingJob</code> request, Amazon SageMaker changes the status of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the status to <code>Stopped</code>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopTrainingJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopTransformJob':
    post:
      operationId: StopTransformJob
      description: '<p>Stops a transform job.</p> <p>When Amazon SageMaker receives a <code>StopTransformJob</code> request, the status of the job changes to <code>Stopping</code>. After Amazon SageMaker stops the job, the status is set to <code>Stopped</code>. When you stop a transform job before it is completed, Amazon SageMaker doesn''t store the job''s output in Amazon S3.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopTransformJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateCodeRepository':
    post:
      operationId: UpdateCodeRepository
      description: Updates the specified Git repository with the specified values.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCodeRepositoryOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCodeRepositoryInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateEndpoint':
    post:
      operationId: UpdateEndpoint
      description: '<p>Deploys the new <code>EndpointConfig</code> specified in the request, switches to using newly created endpoint, and then deletes resources provisioned for the endpoint using the previous <code>EndpointConfig</code> (there is no availability loss). </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API. </p> <note> <p>You cannot update an endpoint with the current <code>EndpointConfig</code>. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEndpointOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEndpointInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateEndpointWeightsAndCapacities':
    post:
      operationId: UpdateEndpointWeightsAndCapacities
      description: 'Updates variant weight of one or more variants associated with an existing endpoint, or capacity of one variant associated with an existing endpoint. When it receives the request, Amazon SageMaker sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEndpointWeightsAndCapacitiesOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEndpointWeightsAndCapacitiesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateNotebookInstance':
    post:
      operationId: UpdateNotebookInstance
      description: Updates a notebook instance. NotebookInstance updates include upgrading or downgrading the ML compute instance used for your notebook instance to accommodate changes in your workload requirements. You can also update the VPC security groups.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNotebookInstanceOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNotebookInstanceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateNotebookInstanceLifecycleConfig':
    post:
      operationId: UpdateNotebookInstanceLifecycleConfig
      description: Updates a notebook instance lifecycle configuration created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNotebookInstanceLifecycleConfigOutput'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNotebookInstanceLifecycleConfigInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateWorkteam':
    post:
      operationId: UpdateWorkteam
      description: Updates an existing work team with new member definitions or description.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateWorkteamResponse'
        '480':
          description: ResourceLimitExceeded
          schema:
            $ref: '#/definitions/ResourceLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateWorkteamRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddTagsOutput:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tags associated with the Amazon SageMaker resource.
  AddTagsInput:
    type: object
    required:
      - ResourceArn
      - Tags
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource that you want to tag.
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of <code>Tag</code> objects. Each tag is a key-value pair. Only the <code>key</code> parameter is required. If you don''t specify a value, Amazon SageMaker sets the value to an empty string. '
  CreateAlgorithmOutput:
    type: object
    required:
      - AlgorithmArn
    properties:
      AlgorithmArn:
        $ref: '#/definitions/AlgorithmArn'
        description: The Amazon Resource Name (ARN) of the new algorithm.
  CreateAlgorithmInput:
    type: object
    required:
      - AlgorithmName
      - TrainingSpecification
    properties:
      AlgorithmName:
        $ref: '#/definitions/EntityName'
        description: The name of the algorithm.
      AlgorithmDescription:
        $ref: '#/definitions/EntityDescription'
        description: A description of the algorithm.
      TrainingSpecification:
        $ref: '#/definitions/TrainingSpecification'
        description: '<p>Specifies details about training jobs run by this algorithm, including the following:</p> <ul> <li> <p>The Amazon ECR path of the container and the version digest of the algorithm.</p> </li> <li> <p>The hyperparameters that the algorithm supports.</p> </li> <li> <p>The instance types that the algorithm supports for training.</p> </li> <li> <p>Whether the algorithm supports distributed training.</p> </li> <li> <p>The metrics that the algorithm emits to Amazon CloudWatch.</p> </li> <li> <p>Which metrics that the algorithm emits can be used as the objective metric for hyperparameter tuning jobs.</p> </li> <li> <p>The input channels that the algorithm supports for training data. For example, an algorithm might support <code>train</code>, <code>validation</code>, and <code>test</code> channels.</p> </li> </ul>'
      InferenceSpecification:
        $ref: '#/definitions/InferenceSpecification'
        description: '<p>Specifies details about inference jobs that the algorithm runs, including the following:</p> <ul> <li> <p>The Amazon ECR paths of containers that contain the inference code and model artifacts.</p> </li> <li> <p>The instance types that the algorithm supports for transform jobs and real-time endpoints used for inference.</p> </li> <li> <p>The input and output content formats that the algorithm supports for inference.</p> </li> </ul>'
      ValidationSpecification:
        $ref: '#/definitions/AlgorithmValidationSpecification'
        description: 'Specifies configurations for one or more training jobs and that Amazon SageMaker runs to test the algorithm''s training code and, optionally, one or more batch transform jobs that Amazon SageMaker runs to test the algorithm''s inference code.'
      CertifyForMarketplace:
        $ref: '#/definitions/CertifyForMarketplace'
        description: Whether to certify the algorithm so that it can be listed in AWS Marketplace.
  CreateCodeRepositoryOutput:
    type: object
    required:
      - CodeRepositoryArn
    properties:
      CodeRepositoryArn:
        $ref: '#/definitions/CodeRepositoryArn'
        description: The Amazon Resource Name (ARN) of the new repository.
  CreateCodeRepositoryInput:
    type: object
    required:
      - CodeRepositoryName
      - GitConfig
    properties:
      CodeRepositoryName:
        $ref: '#/definitions/EntityName'
        description: 'The name of the Git repository. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
      GitConfig:
        $ref: '#/definitions/GitConfig'
        description: 'Specifies details about the repository, including the URL where the repository is located, the default branch, and credentials to use to access the repository.'
  CreateCompilationJobResponse:
    type: object
    required:
      - CompilationJobArn
    properties:
      CompilationJobArn:
        $ref: '#/definitions/CompilationJobArn'
        description: '<p>If the action is successful, the service sends back an HTTP 200 response. Amazon SageMaker returns the following data in JSON format:</p> <ul> <li> <p> <code>CompilationJobArn</code>: The Amazon Resource Name (ARN) of the compiled job.</p> </li> </ul>'
  CreateCompilationJobRequest:
    type: object
    required:
      - CompilationJobName
      - RoleArn
      - InputConfig
      - OutputConfig
      - StoppingCondition
    properties:
      CompilationJobName:
        $ref: '#/definitions/EntityName'
        description: 'A name for the model compilation job. The name must be unique within the AWS Region and within your AWS account. '
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: '<p>The Amazon Resource Name (ARN) of an IIAMAM role that enables Amazon SageMaker to perform tasks on your behalf. </p> <p>During model compilation, Amazon SageMaker needs your permission to:</p> <ul> <li> <p>Read input data from an S3 bucket</p> </li> <li> <p>Write model artifacts to an S3 bucket</p> </li> <li> <p>Write logs to Amazon CloudWatch Logs</p> </li> <li> <p>Publish metrics to Amazon CloudWatch</p> </li> </ul> <p>You grant permissions for all of these tasks to an IAM role. To pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles.</a> </p>'
      InputConfig:
        $ref: '#/definitions/InputConfig'
        description: 'Provides information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
      OutputConfig:
        $ref: '#/definitions/OutputConfig'
        description: Provides information about the output location for the compiled model and the target device the model runs on.
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: The duration allowed for model compilation.
  ResourceInUse: {}
  ResourceLimitExceeded: {}
  CreateEndpointOutput:
    type: object
    required:
      - EndpointArn
    properties:
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the endpoint.
  CreateEndpointInput:
    type: object
    required:
      - EndpointName
      - EndpointConfigName
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint. The name must be unique within an AWS Region in your AWS account.
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: 'The name of an endpoint configuration. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html">CreateEndpointConfig</a>. '
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a>in the <i>AWS Billing and Cost Management User Guide</i>. '
  CreateEndpointConfigOutput:
    type: object
    required:
      - EndpointConfigArn
    properties:
      EndpointConfigArn:
        $ref: '#/definitions/EndpointConfigArn'
        description: 'The Amazon Resource Name (ARN) of the endpoint configuration. '
  CreateEndpointConfigInput:
    type: object
    required:
      - EndpointConfigName
      - ProductionVariants
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: 'The name of the endpoint configuration. You specify this name in a <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html">CreateEndpoint</a> request. '
      ProductionVariants:
        $ref: '#/definitions/ProductionVariantList'
        description: 'An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.'
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. '
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
  CreateHyperParameterTuningJobResponse:
    type: object
    required:
      - HyperParameterTuningJobArn
    properties:
      HyperParameterTuningJobArn:
        $ref: '#/definitions/HyperParameterTuningJobArn'
        description: The Amazon Resource Name (ARN) of the tuning job. Amazon SageMaker assigns an ARN to a hyperparameter tuning job when you create it.
  CreateHyperParameterTuningJobRequest:
    type: object
    required:
      - HyperParameterTuningJobName
      - HyperParameterTuningJobConfig
      - TrainingJobDefinition
    properties:
      HyperParameterTuningJobName:
        $ref: '#/definitions/HyperParameterTuningJobName'
        description: 'The name of the tuning job. This name is the prefix for the names of all training jobs that this tuning job launches. The name must be unique within the same AWS account and AWS Region. The name must have { } to { } characters. Valid characters are a-z, A-Z, 0-9, and : + = @ _ % - (hyphen). The name is not case sensitive.'
      HyperParameterTuningJobConfig:
        $ref: '#/definitions/HyperParameterTuningJobConfig'
        description: 'The <a>HyperParameterTuningJobConfig</a> object that describes the tuning job, including the search strategy, the objective metric used to evaluate training jobs, ranges of parameters to search, and resource limits for the tuning job. For more information, see <a>automatic-model-tuning</a> '
      TrainingJobDefinition:
        $ref: '#/definitions/HyperParameterTrainingJobDefinition'
        description: 'The <a>HyperParameterTrainingJobDefinition</a> object that describes the training jobs that this tuning job launches, including static hyperparameters, input data configuration, output data configuration, resource configuration, and stopping condition.'
      WarmStartConfig:
        $ref: '#/definitions/HyperParameterTuningJobWarmStartConfig'
        description: '<p>Specifies the configuration for starting the hyperparameter tuning job using one or more previous tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric. If you specify <code>IDENTICAL_DATA_AND_ALGORITHM</code> as the <code>WarmStartType</code> value for the warm start configuration, the training job that performs the best in the new tuning job is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>'
      Tags:
        $ref: '#/definitions/TagList'
        description: '<p>An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS Tagging Strategies</a>.</p> <p>Tags that you specify for the tuning job are also added to all training jobs that the tuning job launches.</p>'
  CreateLabelingJobResponse:
    type: object
    required:
      - LabelingJobArn
    properties:
      LabelingJobArn:
        $ref: '#/definitions/LabelingJobArn'
        description: The Amazon Resource Name (ARN) of the labeling job. You use this ARN to identify the labeling job.
  CreateLabelingJobRequest:
    type: object
    required:
      - LabelingJobName
      - LabelAttributeName
      - InputConfig
      - OutputConfig
      - RoleArn
      - HumanTaskConfig
    properties:
      LabelingJobName:
        $ref: '#/definitions/LabelingJobName'
        description: The name of the labeling job. This name is used to identify the job in a list of labeling jobs.
      LabelAttributeName:
        $ref: '#/definitions/LabelAttributeName'
        description: 'The attribute name to use for the label in the output manifest file. This is the key for the key/value pair formed with the label that a worker assigns to the object. The name can''t end with "-metadata". If you are running a semantic segmentation labeling job, the attribute name must end with "-ref". If you are running any other kind of labeling job, the attribute name must not end with "-ref".'
      InputConfig:
        $ref: '#/definitions/LabelingJobInputConfig'
        description: 'Input data for the labeling job, such as the Amazon S3 location of the data objects and the location of the manifest file that describes the data objects.'
      OutputConfig:
        $ref: '#/definitions/LabelingJobOutputConfig'
        description: 'The location of the output data and the AWS Key Management Service key ID for the key used to encrypt the output data, if any.'
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during data labeling. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete data labeling.
      LabelCategoryConfigS3Uri:
        $ref: '#/definitions/S3Uri'
        description: '<p>The S3 URL of the file that defines the categories used to label the data objects.</p> <p>The file is a JSON structure in the following format:</p> <p> <code>{</code> </p> <p> <code> "document-version": "2018-11-28"</code> </p> <p> <code> "labels": [</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 1</i>"</code> </p> <p> <code> },</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 2</i>"</code> </p> <p> <code> },</code> </p> <p> <code> ...</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label n</i>"</code> </p> <p> <code> }</code> </p> <p> <code> ]</code> </p> <p> <code>}</code> </p>'
      StoppingConditions:
        $ref: '#/definitions/LabelingJobStoppingConditions'
        description: 'A set of conditions for stopping the labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.'
      LabelingJobAlgorithmsConfig:
        $ref: '#/definitions/LabelingJobAlgorithmsConfig'
        description: Configures the information required to perform automated data labeling.
      HumanTaskConfig:
        $ref: '#/definitions/HumanTaskConfig'
        description: Configures the information required for human workers to complete a labeling task.
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key/value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
  CreateModelOutput:
    type: object
    required:
      - ModelArn
    properties:
      ModelArn:
        $ref: '#/definitions/ModelArn'
        description: The ARN of the model created in Amazon SageMaker.
  CreateModelInput:
    type: object
    required:
      - ModelName
      - ExecutionRoleArn
    properties:
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the new model.
      PrimaryContainer:
        $ref: '#/definitions/ContainerDefinition'
        description: 'The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed for predictions. '
      Containers:
        $ref: '#/definitions/ContainerDefinitionList'
        description: Specifies the containers in the inference pipeline.
      ExecutionRoleArn:
        $ref: '#/definitions/RoleArn'
        description: '<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances or for batch transform jobs. Deploying on ML compute instances is part of model hosting. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. '
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A <a>VpcConfig</a> object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. <code>VpcConfig</code> is used in hosting services and in batch transform. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/batch-vpc.html">Protect Data in Batch Transform Jobs by Using an Amazon Virtual Private Cloud</a>.'
      EnableNetworkIsolation:
        $ref: '#/definitions/Boolean'
        description: <p>Isolates the model container. No inbound or outbound network calls can be made to or from the model container.</p> <note> <p>The Semantic Segmentation built-in algorithm does not support network isolation.</p> </note>
  CreateModelPackageOutput:
    type: object
    required:
      - ModelPackageArn
    properties:
      ModelPackageArn:
        $ref: '#/definitions/ModelPackageArn'
        description: The Amazon Resource Name (ARN) of the new model package.
  CreateModelPackageInput:
    type: object
    required:
      - ModelPackageName
    properties:
      ModelPackageName:
        $ref: '#/definitions/EntityName'
        description: 'The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
      ModelPackageDescription:
        $ref: '#/definitions/EntityDescription'
        description: A description of the model package.
      InferenceSpecification:
        $ref: '#/definitions/InferenceSpecification'
        description: '<p>Specifies details about inference jobs that can be run with models based on this model package, including the following:</p> <ul> <li> <p>The Amazon ECR paths of containers that contain the inference code and model artifacts.</p> </li> <li> <p>The instance types that the model package supports for transform jobs and real-time endpoints used for inference.</p> </li> <li> <p>The input and output content formats that the model package supports for inference.</p> </li> </ul>'
      ValidationSpecification:
        $ref: '#/definitions/ModelPackageValidationSpecification'
        description: Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
      SourceAlgorithmSpecification:
        $ref: '#/definitions/SourceAlgorithmSpecification'
        description: Details about the algorithm that was used to create the model package.
      CertifyForMarketplace:
        $ref: '#/definitions/CertifyForMarketplace'
        description: Whether to certify the model package for listing on AWS Marketplace.
  CreateNotebookInstanceOutput:
    type: object
    properties:
      NotebookInstanceArn:
        $ref: '#/definitions/NotebookInstanceArn'
        description: 'The Amazon Resource Name (ARN) of the notebook instance. '
  CreateNotebookInstanceInput:
    type: object
    required:
      - NotebookInstanceName
      - InstanceType
      - RoleArn
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the new notebook instance.
      InstanceType:
        $ref: '#/definitions/InstanceType'
        description: The type of ML compute instance to launch for the notebook instance.
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: 'The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance. '
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: 'The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. '
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: '<p> When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: ' If you provide a AWS KMS key ID, Amazon SageMaker uses it to encrypt data at rest on the ML storage volume that is attached to your notebook instance. The KMS key you provide must be enabled. For information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html">Enabling and Disabling Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.'
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tags to associate with the notebook instance. You can add tags later by using the <code>CreateTags</code> API.
      LifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: 'The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.'
      DirectInternetAccess:
        $ref: '#/definitions/DirectInternetAccess'
        description: '<p>Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to <code>Disabled</code> this notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access">Notebook Instances Are Internet-Enabled by Default</a>. You can set the value of this parameter to <code>Disabled</code> only if you set a value for the <code>SubnetId</code> parameter.</p>'
      VolumeSizeInGB:
        $ref: '#/definitions/NotebookInstanceVolumeSizeInGB'
        description: 'The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.'
      AcceleratorTypes:
        $ref: '#/definitions/NotebookInstanceAcceleratorTypes'
        description: 'A list of Elastic Inference (EI) instance types to associate with this notebook instance. Currently, only one instance type can be associated with a notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
      DefaultCodeRepository:
        $ref: '#/definitions/CodeRepositoryNameOrUrl'
        description: 'A Git repository to associate with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
      AdditionalCodeRepositories:
        $ref: '#/definitions/AdditionalCodeRepositoryNamesOrUrls'
        description: 'An array of up to three Git repositories to associate with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
  CreateNotebookInstanceLifecycleConfigOutput:
    type: object
    properties:
      NotebookInstanceLifecycleConfigArn:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigArn'
        description: The Amazon Resource Name (ARN) of the lifecycle configuration.
  CreateNotebookInstanceLifecycleConfigInput:
    type: object
    required:
      - NotebookInstanceLifecycleConfigName
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration.
      OnCreate:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'A shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string.'
      OnStart:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'A shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string.'
  CreatePresignedNotebookInstanceUrlOutput:
    type: object
    properties:
      AuthorizedUrl:
        $ref: '#/definitions/NotebookInstanceUrl'
        description: 'A JSON object that contains the URL string. '
  CreatePresignedNotebookInstanceUrlInput:
    type: object
    required:
      - NotebookInstanceName
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance.
      SessionExpirationDurationInSeconds:
        $ref: '#/definitions/SessionExpirationDurationInSeconds'
        description: 'The duration of the session, in seconds. The default is 12 hours.'
  CreateTrainingJobResponse:
    type: object
    required:
      - TrainingJobArn
    properties:
      TrainingJobArn:
        $ref: '#/definitions/TrainingJobArn'
        description: The Amazon Resource Name (ARN) of the training job.
  CreateTrainingJobRequest:
    type: object
    required:
      - TrainingJobName
      - AlgorithmSpecification
      - RoleArn
      - OutputDataConfig
      - ResourceConfig
      - StoppingCondition
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: 'The name of the training job. The name must be unique within an AWS Region in an AWS account. '
      HyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: '<p>Algorithm-specific parameters that influence the quality of the model. You set hyperparameters before you start the learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> <p>You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the <code>Length Constraint</code>. </p>'
      AlgorithmSpecification:
        $ref: '#/definitions/AlgorithmSpecification'
        description: 'The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about providing your own algorithms, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. '
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: '<p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. </p> <p>During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
      InputDataConfig:
        $ref: '#/definitions/InputDataConfig'
        description: '<p>An array of <code>Channel</code> objects. Each channel is a named input source. <code>InputDataConfig</code> describes the input data and its location. </p> <p>Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, <code>training_data</code> and <code>validation_data</code>. The configuration for each channel provides the S3 location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. </p> <p>Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. </p>'
      OutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
        description: 'Specifies the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. '
      ResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: '<p>The resources, including the ML compute instances and ML storage volumes, to use for model training. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>'
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A <a>VpcConfig</a> object that specifies the VPC that you want your training job to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: '<p>Sets a duration for training. Use this parameter to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts. </p> <p>When Amazon SageMaker terminates a job because the stopping condition has been met, training algorithms provided by Amazon SageMaker save the intermediate results of the job. This intermediate data is a valid model artifact. You can use it to create a model using the <code>CreateModel</code> API. </p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. '
      EnableNetworkIsolation:
        $ref: '#/definitions/Boolean'
        description: '<p>Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.</p> <note> <p>The Semantic Segmentation built-in algorithm does not support network isolation.</p> </note>'
      EnableInterContainerTrafficEncryption:
        $ref: '#/definitions/Boolean'
        description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>,. Encryption provides greater security for distributed training, but training can take longer because of additional communications between ML compute instances.'
  CreateTransformJobResponse:
    type: object
    required:
      - TransformJobArn
    properties:
      TransformJobArn:
        $ref: '#/definitions/TransformJobArn'
        description: The Amazon Resource Name (ARN) of the transform job.
  CreateTransformJobRequest:
    type: object
    required:
      - TransformJobName
      - ModelName
      - TransformInput
      - TransformOutput
      - TransformResources
    properties:
      TransformJobName:
        $ref: '#/definitions/TransformJobName'
        description: 'The name of the transform job. The name must be unique within an AWS Region in an AWS account. '
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model that you want to use for the transform job. <code>ModelName</code> must be the name of an existing Amazon SageMaker model within an AWS Region in an AWS account.
      MaxConcurrentTransforms:
        $ref: '#/definitions/MaxConcurrentTransforms'
        description: 'The maximum number of parallel requests that can be sent to an algorithm container on an instance. This is good for algorithms that implement multiple workers on larger instances . The default value is <code>1</code>. To allow Amazon SageMaker to determine the appropriate number for <code>MaxConcurrentTransforms</code>, do not set the value in the API.'
      MaxPayloadInMB:
        $ref: '#/definitions/MaxPayloadInMB'
        description: '<p>The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata). The value in <code>MaxPayloadInMB</code> must be greater or equal to the size of a single record. You can approximate the size of a record by dividing the size of your dataset by the number of records. Then multiply this value by the number of records you want in a mini-batch. We recommend to enter a slightly larger value than this to ensure the records fit within the maximum payload size. The default value is <code>6</code> MB. </p> <p>For cases where the payload might be arbitrarily large and is transmitted using HTTP chunked encoding, set the value to <code>0</code>. This feature only works in supported algorithms. Currently, Amazon SageMaker built-in algorithms do not support this feature.</p>'
      BatchStrategy:
        $ref: '#/definitions/BatchStrategy'
        description: '<p>Determines the number of records to include in a mini-batch. If you want to include only one record in a mini-batch, specify <code>SingleRecord</code>.. If you want mini-batches to contain a maximum of the number of records specified in the <code>MaxPayloadInMB</code> parameter, specify <code>MultiRecord</code>.</p> <p> If you set <code>SplitType</code> to <code>Line</code> and <code>BatchStrategy</code> to <code>MultiRecord</code>, a batch transform automatically splits your input data into the specified payload size. There''s no need to split the dataset into smaller files or to use larger payload sizes unless the records in your dataset are very large.</p>'
      Environment:
        $ref: '#/definitions/TransformEnvironmentMap'
        description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
      TransformInput:
        $ref: '#/definitions/TransformInput'
        description: Describes the input source and the way the transform job consumes it.
      TransformOutput:
        $ref: '#/definitions/TransformOutput'
        description: Describes the results of the transform job.
      TransformResources:
        $ref: '#/definitions/TransformResources'
        description: 'Describes the resources, including ML instance types and ML instance count, to use for the transform job.'
      Tags:
        $ref: '#/definitions/TagList'
        description: '(Optional) An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
  CreateWorkteamResponse:
    type: object
    properties:
      WorkteamArn:
        $ref: '#/definitions/WorkteamArn'
        description: The Amazon Resource Name (ARN) of the work team. You can use this ARN to identify the work team.
  CreateWorkteamRequest:
    type: object
    required:
      - WorkteamName
      - MemberDefinitions
      - Description
    properties:
      WorkteamName:
        $ref: '#/definitions/WorkteamName'
        description: The name of the work team. Use this name to identify the work team.
      MemberDefinitions:
        $ref: '#/definitions/MemberDefinitions'
        description: '<p>A list of <code>MemberDefinition</code> objects that contains objects that identify the Amazon Cognito user pool that makes up the work team. For more information, see <a href="http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html">Amazon Cognito User Pools</a>.</p> <p>All of the <code>CognitoMemberDefinition</code> objects that make up the member definition must have the same <code>ClientId</code> and <code>UserPool</code> values.</p>'
      Description:
        $ref: '#/definitions/String200'
        description: A description of the work team.
      Tags:
        $ref: '#/definitions/TagList'
        description: <p/>
  DeleteAlgorithmInput:
    type: object
    required:
      - AlgorithmName
    properties:
      AlgorithmName:
        $ref: '#/definitions/EntityName'
        description: The name of the algorithm to delete.
  DeleteCodeRepositoryInput:
    type: object
    required:
      - CodeRepositoryName
    properties:
      CodeRepositoryName:
        $ref: '#/definitions/EntityName'
        description: The name of the Git repository to delete.
  DeleteEndpointInput:
    type: object
    required:
      - EndpointName
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint that you want to delete.
  DeleteEndpointConfigInput:
    type: object
    required:
      - EndpointConfigName
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the endpoint configuration that you want to delete.
  DeleteModelInput:
    type: object
    required:
      - ModelName
    properties:
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model to delete.
  DeleteModelPackageInput:
    type: object
    required:
      - ModelPackageName
    properties:
      ModelPackageName:
        $ref: '#/definitions/EntityName'
        description: 'The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
  DeleteNotebookInstanceInput:
    type: object
    required:
      - NotebookInstanceName
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the Amazon SageMaker notebook instance to delete.
  DeleteNotebookInstanceLifecycleConfigInput:
    type: object
    required:
      - NotebookInstanceLifecycleConfigName
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration to delete.
  DeleteTagsOutput:
    type: object
    properties: {}
  DeleteTagsInput:
    type: object
    required:
      - ResourceArn
      - TagKeys
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource whose tags you want to delete.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: An array or one or more tag keys to delete.
  DeleteWorkteamResponse:
    type: object
    required:
      - Success
    properties:
      Success:
        $ref: '#/definitions/Success'
        description: 'Returns <code>true</code> if the work team was successfully deleted; otherwise, returns <code>false</code>.'
  DeleteWorkteamRequest:
    type: object
    required:
      - WorkteamName
    properties:
      WorkteamName:
        $ref: '#/definitions/WorkteamName'
        description: The name of the work team to delete.
  DescribeAlgorithmOutput:
    type: object
    required:
      - AlgorithmName
      - AlgorithmArn
      - CreationTime
      - TrainingSpecification
      - AlgorithmStatus
      - AlgorithmStatusDetails
    properties:
      AlgorithmName:
        $ref: '#/definitions/EntityName'
        description: The name of the algorithm being described.
      AlgorithmArn:
        $ref: '#/definitions/AlgorithmArn'
        description: The Amazon Resource Name (ARN) of the algorithm.
      AlgorithmDescription:
        $ref: '#/definitions/EntityDescription'
        description: A brief summary about the algorithm.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp specifying when the algorithm was created.
      TrainingSpecification:
        $ref: '#/definitions/TrainingSpecification'
        description: Details about training jobs run by this algorithm.
      InferenceSpecification:
        $ref: '#/definitions/InferenceSpecification'
        description: Details about inference jobs that the algorithm runs.
      ValidationSpecification:
        $ref: '#/definitions/AlgorithmValidationSpecification'
        description: Details about configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
      AlgorithmStatus:
        $ref: '#/definitions/AlgorithmStatus'
        description: The current status of the algorithm.
      AlgorithmStatusDetails:
        $ref: '#/definitions/AlgorithmStatusDetails'
        description: Details about the current status of the algorithm.
      ProductId:
        $ref: '#/definitions/ProductId'
        description: The product identifier of the algorithm.
      CertifyForMarketplace:
        $ref: '#/definitions/CertifyForMarketplace'
        description: Whether the algorithm is certified to be listed in AWS Marketplace.
  DescribeAlgorithmInput:
    type: object
    required:
      - AlgorithmName
    properties:
      AlgorithmName:
        $ref: '#/definitions/ArnOrName'
        description: The name of the algorithm to describe.
  DescribeCodeRepositoryOutput:
    type: object
    required:
      - CodeRepositoryName
      - CodeRepositoryArn
      - CreationTime
      - LastModifiedTime
    properties:
      CodeRepositoryName:
        $ref: '#/definitions/EntityName'
        description: The name of the Git repository.
      CodeRepositoryArn:
        $ref: '#/definitions/CodeRepositoryArn'
        description: The Amazon Resource Name (ARN) of the Git repository.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: The date and time that the repository was created.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: The date and time that the repository was last changed.
      GitConfig:
        $ref: '#/definitions/GitConfig'
        description: 'Configuration details about the repository, including the URL where the repository is located, the default branch, and the Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the repository.'
  DescribeCodeRepositoryInput:
    type: object
    required:
      - CodeRepositoryName
    properties:
      CodeRepositoryName:
        $ref: '#/definitions/EntityName'
        description: The name of the Git repository to describe.
  DescribeCompilationJobResponse:
    type: object
    required:
      - CompilationJobName
      - CompilationJobArn
      - CompilationJobStatus
      - StoppingCondition
      - CreationTime
      - LastModifiedTime
      - FailureReason
      - ModelArtifacts
      - RoleArn
      - InputConfig
      - OutputConfig
    properties:
      CompilationJobName:
        $ref: '#/definitions/EntityName'
        description: The name of the model compilation job.
      CompilationJobArn:
        $ref: '#/definitions/CompilationJobArn'
        description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker assumes to perform the model compilation job.
      CompilationJobStatus:
        $ref: '#/definitions/CompilationJobStatus'
        description: The status of the model compilation job.
      CompilationStartTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time when the model compilation job started the <code>CompilationJob</code> instances. </p> <p>You are billed for the time between this timestamp and the timestamp in the <a>DescribeCompilationJobResponse$CompilationEndTime</a> field. In Amazon CloudWatch Logs, the start time might be later than this time. That''s because it takes time to download the compilation job, which depends on the size of the compilation job container. </p>'
      CompilationEndTime:
        $ref: '#/definitions/Timestamp'
        description: 'The time when the model compilation job on a compilation job instance ended. For a successful or stopped job, this is when the job''s model artifacts have finished uploading. For a failed job, this is when Amazon SageMaker detected that the job failed. '
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: The duration allowed for model compilation.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: The time that the model compilation job was created.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: The time that the status of the model compilation job was last modified.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a model compilation job failed, the reason it failed. '
      ModelArtifacts:
        $ref: '#/definitions/ModelArtifacts'
        description: Information about the location in Amazon S3 that has been configured for storing the model artifacts used in the compilation job.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the model compilation job.
      InputConfig:
        $ref: '#/definitions/InputConfig'
        description: 'Information about the location in Amazon S3 of the input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
      OutputConfig:
        $ref: '#/definitions/OutputConfig'
        description: Information about the output location for the compiled model and the target device that the model runs on.
  DescribeCompilationJobRequest:
    type: object
    required:
      - CompilationJobName
    properties:
      CompilationJobName:
        $ref: '#/definitions/EntityName'
        description: The name of the model compilation job that you want information about.
  ResourceNotFound: {}
  DescribeEndpointOutput:
    type: object
    required:
      - EndpointName
      - EndpointArn
      - EndpointConfigName
      - EndpointStatus
      - CreationTime
      - LastModifiedTime
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: Name of the endpoint.
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the endpoint.
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the endpoint configuration associated with this endpoint.
      ProductionVariants:
        $ref: '#/definitions/ProductionVariantSummaryList'
        description: ' An array of <a>ProductionVariantSummary</a> objects, one for each model hosted behind this endpoint. '
      EndpointStatus:
        $ref: '#/definitions/EndpointStatus'
        description: '<p>The status of the endpoint.</p> <ul> <li> <p> <code>OutOfService</code>: Endpoint is not available to take incoming requests.</p> </li> <li> <p> <code>Creating</code>: <a>CreateEndpoint</a> is executing.</p> </li> <li> <p> <code>Updating</code>: <a>UpdateEndpoint</a> or <a>UpdateEndpointWeightsAndCapacities</a> is executing.</p> </li> <li> <p> <code>SystemUpdating</code>: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This maintenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count.</p> </li> <li> <p> <code>RollingBack</code>: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an <code>InService</code> status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an <a>UpdateEndpointWeightsAndCapacities</a> call or when the <a>UpdateEndpointWeightsAndCapacities</a> operation is called explicitly.</p> </li> <li> <p> <code>InService</code>: Endpoint is available to process incoming requests.</p> </li> <li> <p> <code>Deleting</code>: <a>DeleteEndpoint</a> is executing.</p> </li> <li> <p> <code>Failed</code>: Endpoint could not be created, updated, or re-scaled. Use <a>DescribeEndpointOutput$FailureReason</a> for information about the failure. <a>DeleteEndpoint</a> is the only operation that can be performed on a failed endpoint.</p> </li> </ul>'
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the status of the endpoint is <code>Failed</code>, the reason why it failed. '
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint was created.
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint was last modified.
  DescribeEndpointInput:
    type: object
    required:
      - EndpointName
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint.
  DescribeEndpointConfigOutput:
    type: object
    required:
      - EndpointConfigName
      - EndpointConfigArn
      - ProductionVariants
      - CreationTime
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: Name of the Amazon SageMaker endpoint configuration.
      EndpointConfigArn:
        $ref: '#/definitions/EndpointConfigArn'
        description: The Amazon Resource Name (ARN) of the endpoint configuration.
      ProductionVariants:
        $ref: '#/definitions/ProductionVariantList'
        description: 'An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.'
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint configuration was created.
  DescribeEndpointConfigInput:
    type: object
    required:
      - EndpointConfigName
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the endpoint configuration.
  DescribeHyperParameterTuningJobResponse:
    type: object
    required:
      - HyperParameterTuningJobName
      - HyperParameterTuningJobArn
      - HyperParameterTuningJobConfig
      - TrainingJobDefinition
      - HyperParameterTuningJobStatus
      - CreationTime
      - TrainingJobStatusCounters
      - ObjectiveStatusCounters
    properties:
      HyperParameterTuningJobName:
        $ref: '#/definitions/HyperParameterTuningJobName'
        description: The name of the tuning job.
      HyperParameterTuningJobArn:
        $ref: '#/definitions/HyperParameterTuningJobArn'
        description: The Amazon Resource Name (ARN) of the tuning job.
      HyperParameterTuningJobConfig:
        $ref: '#/definitions/HyperParameterTuningJobConfig'
        description: The <a>HyperParameterTuningJobConfig</a> object that specifies the configuration of the tuning job.
      TrainingJobDefinition:
        $ref: '#/definitions/HyperParameterTrainingJobDefinition'
        description: The <a>HyperParameterTrainingJobDefinition</a> object that specifies the definition of the training jobs that this tuning job launches.
      HyperParameterTuningJobStatus:
        $ref: '#/definitions/HyperParameterTuningJobStatus'
        description: 'The status of the tuning job: InProgress, Completed, Failed, Stopping, or Stopped.'
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the tuning job started.
      HyperParameterTuningEndTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the tuning job ended.
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time that the status of the tuning job was modified. '
      TrainingJobStatusCounters:
        $ref: '#/definitions/TrainingJobStatusCounters'
        description: 'The <a>TrainingJobStatusCounters</a> object that specifies the number of training jobs, categorized by status, that this tuning job launched.'
      ObjectiveStatusCounters:
        $ref: '#/definitions/ObjectiveStatusCounters'
        description: 'The <a>ObjectiveStatusCounters</a> object that specifies the number of training jobs, categorized by the status of their final objective metric, that this tuning job launched.'
      BestTrainingJob:
        $ref: '#/definitions/HyperParameterTrainingJobSummary'
        description: A <a>TrainingJobSummary</a> object that describes the training job that completed with the best current <a>HyperParameterTuningJobObjective</a>.
      OverallBestTrainingJob:
        $ref: '#/definitions/HyperParameterTrainingJobSummary'
        description: 'If the hyperparameter tuning job is an warm start tuning job with a <code>WarmStartType</code> of <code>IDENTICAL_DATA_AND_ALGORITHM</code>, this is the <a>TrainingJobSummary</a> for the training job with the best objective metric value of all training jobs launched by this tuning job and all parent jobs specified for the warm start tuning job.'
      WarmStartConfig:
        $ref: '#/definitions/HyperParameterTuningJobWarmStartConfig'
        description: The configuration for starting the hyperparameter parameter tuning job using one or more previous tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the tuning job failed, the reason it failed.'
  DescribeHyperParameterTuningJobRequest:
    type: object
    required:
      - HyperParameterTuningJobName
    properties:
      HyperParameterTuningJobName:
        $ref: '#/definitions/HyperParameterTuningJobName'
        description: The name of the tuning job to describe.
  DescribeLabelingJobResponse:
    type: object
    required:
      - LabelingJobStatus
      - LabelCounters
      - CreationTime
      - LastModifiedTime
      - JobReferenceCode
      - LabelingJobName
      - LabelingJobArn
      - InputConfig
      - OutputConfig
      - RoleArn
      - HumanTaskConfig
    properties:
      LabelingJobStatus:
        $ref: '#/definitions/LabelingJobStatus'
        description: 'The processing status of the labeling job. '
      LabelCounters:
        $ref: '#/definitions/LabelCounters'
        description: 'Provides a breakdown of the number of data objects labeled by humans, the number of objects labeled by machine, the number of objects than couldn''t be labeled, and the total number of objects labeled. '
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the job failed, the reason that it failed. '
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the labeling job was created.
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the labeling job was last updated.
      JobReferenceCode:
        $ref: '#/definitions/JobReferenceCode'
        description: A unique identifier for work done as part of a labeling job.
      LabelingJobName:
        $ref: '#/definitions/LabelingJobName'
        description: The name assigned to the labeling job when it was created.
      LabelingJobArn:
        $ref: '#/definitions/LabelingJobArn'
        description: The Amazon Resource Name (ARN) of the labeling job.
      LabelAttributeName:
        $ref: '#/definitions/LabelAttributeName'
        description: The attribute used as the label in the output manifest file.
      InputConfig:
        $ref: '#/definitions/LabelingJobInputConfig'
        description: 'Input configuration information for the labeling job, such as the Amazon S3 location of the data objects and the location of the manifest file that describes the data objects.'
      OutputConfig:
        $ref: '#/definitions/LabelingJobOutputConfig'
        description: 'The location of the job''s output data and the AWS Key Management Service key ID for the key used to encrypt the output data, if any.'
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during data labeling.
      LabelCategoryConfigS3Uri:
        $ref: '#/definitions/S3Uri'
        description: '<p>The S3 location of the JSON file that defines the categories used to label data objects.</p> <p>The file is a JSON structure in the following format:</p> <p> <code>{</code> </p> <p> <code> "document-version": "2018-11-28"</code> </p> <p> <code> "labels": [</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 1</i>"</code> </p> <p> <code> },</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 2</i>"</code> </p> <p> <code> },</code> </p> <p> <code> ...</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label n</i>"</code> </p> <p> <code> }</code> </p> <p> <code> ]</code> </p> <p> <code>}</code> </p>'
      StoppingConditions:
        $ref: '#/definitions/LabelingJobStoppingConditions'
        description: 'A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped.'
      LabelingJobAlgorithmsConfig:
        $ref: '#/definitions/LabelingJobAlgorithmsConfig'
        description: Configuration information for automated data labeling.
      HumanTaskConfig:
        $ref: '#/definitions/HumanTaskConfig'
        description: Configuration information required for human workers to complete a labeling task.
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key/value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
      LabelingJobOutput:
        $ref: '#/definitions/LabelingJobOutput'
        description: The location of the output produced by the labeling job.
  DescribeLabelingJobRequest:
    type: object
    required:
      - LabelingJobName
    properties:
      LabelingJobName:
        $ref: '#/definitions/LabelingJobName'
        description: The name of the labeling job to return information for.
  DescribeModelOutput:
    type: object
    required:
      - ModelName
      - ExecutionRoleArn
      - CreationTime
      - ModelArn
    properties:
      ModelName:
        $ref: '#/definitions/ModelName'
        description: Name of the Amazon SageMaker model.
      PrimaryContainer:
        $ref: '#/definitions/ContainerDefinition'
        description: 'The location of the primary inference code, associated artifacts, and custom environment map that the inference code uses when it is deployed in production. '
      Containers:
        $ref: '#/definitions/ContainerDefinitionList'
        description: The containers in the inference pipeline.
      ExecutionRoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role that you specified for the model.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A <a>VpcConfig</a> object that specifies the VPC that this model has access to. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> '
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the model was created.
      ModelArn:
        $ref: '#/definitions/ModelArn'
        description: The Amazon Resource Name (ARN) of the model.
      EnableNetworkIsolation:
        $ref: '#/definitions/Boolean'
        description: '<p>If <code>True</code>, no inbound or outbound network calls can be made to or from the model container.</p> <note> <p>The Semantic Segmentation built-in algorithm does not support network isolation.</p> </note>'
  DescribeModelInput:
    type: object
    required:
      - ModelName
    properties:
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model.
  DescribeModelPackageOutput:
    type: object
    required:
      - ModelPackageName
      - ModelPackageArn
      - CreationTime
      - ModelPackageStatus
      - ModelPackageStatusDetails
    properties:
      ModelPackageName:
        $ref: '#/definitions/EntityName'
        description: The name of the model package being described.
      ModelPackageArn:
        $ref: '#/definitions/ModelPackageArn'
        description: The Amazon Resource Name (ARN) of the model package.
      ModelPackageDescription:
        $ref: '#/definitions/EntityDescription'
        description: A brief summary of the model package.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp specifying when the model package was created.
      InferenceSpecification:
        $ref: '#/definitions/InferenceSpecification'
        description: Details about inference jobs that can be run with models based on this model package.
      SourceAlgorithmSpecification:
        $ref: '#/definitions/SourceAlgorithmSpecification'
        description: Details about the algorithm that was used to create the model package.
      ValidationSpecification:
        $ref: '#/definitions/ModelPackageValidationSpecification'
        description: Configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
      ModelPackageStatus:
        $ref: '#/definitions/ModelPackageStatus'
        description: The current status of the model package.
      ModelPackageStatusDetails:
        $ref: '#/definitions/ModelPackageStatusDetails'
        description: Details about the current status of the model package.
      CertifyForMarketplace:
        $ref: '#/definitions/CertifyForMarketplace'
        description: Whether the model package is certified for listing on AWS Marketplace.
  DescribeModelPackageInput:
    type: object
    required:
      - ModelPackageName
    properties:
      ModelPackageName:
        $ref: '#/definitions/ArnOrName'
        description: The name of the model package to describe.
  DescribeNotebookInstanceOutput:
    type: object
    properties:
      NotebookInstanceArn:
        $ref: '#/definitions/NotebookInstanceArn'
        description: The Amazon Resource Name (ARN) of the notebook instance.
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: 'The name of the Amazon SageMaker notebook instance. '
      NotebookInstanceStatus:
        $ref: '#/definitions/NotebookInstanceStatus'
        description: The status of the notebook instance.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If status is <code>Failed</code>, the reason it failed.'
      Url:
        $ref: '#/definitions/NotebookInstanceUrl'
        description: 'The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. '
      InstanceType:
        $ref: '#/definitions/InstanceType'
        description: The type of ML compute instance running on the notebook instance.
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: The ID of the VPC subnet.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroupIds'
        description: The IDs of the VPC security groups.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) of the IAM role associated with the instance. '
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: 'The AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance. '
      NetworkInterfaceId:
        $ref: '#/definitions/NetworkInterfaceId'
        description: 'The network interface IDs that Amazon SageMaker created at the time of creating the instance. '
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: 'A timestamp. Use this parameter to retrieve the time when the notebook instance was last modified. '
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp. Use this parameter to return the time when the notebook instance was created
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: '<p>Returns the name of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a> </p>'
      DirectInternetAccess:
        $ref: '#/definitions/DirectInternetAccess'
        description: '<p>Describes whether Amazon SageMaker provides internet access to the notebook instance. If this value is set to <i>Disabled, he notebook instance does not have internet access, and cannot connect to Amazon SageMaker training and endpoint services</i>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access">Notebook Instances Are Internet-Enabled by Default</a>.</p>'
      VolumeSizeInGB:
        $ref: '#/definitions/NotebookInstanceVolumeSizeInGB'
        description: 'The size, in GB, of the ML storage volume attached to the notebook instance.'
      AcceleratorTypes:
        $ref: '#/definitions/NotebookInstanceAcceleratorTypes'
        description: 'A list of the Elastic Inference (EI) instance types associated with this notebook instance. Currently only one EI instance type can be associated with a notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
      DefaultCodeRepository:
        $ref: '#/definitions/CodeRepositoryNameOrUrl'
        description: 'The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
      AdditionalCodeRepositories:
        $ref: '#/definitions/AdditionalCodeRepositoryNamesOrUrls'
        description: 'An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
  DescribeNotebookInstanceInput:
    type: object
    required:
      - NotebookInstanceName
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance that you want information about.
  DescribeNotebookInstanceLifecycleConfigOutput:
    type: object
    properties:
      NotebookInstanceLifecycleConfigArn:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigArn'
        description: The Amazon Resource Name (ARN) of the lifecycle configuration.
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration.
      OnCreate:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'The shell script that runs only once, when you create a notebook instance.'
      OnStart:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'The shell script that runs every time you start a notebook instance, including when you create the notebook instance.'
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: A timestamp that tells when the lifecycle configuration was last modified.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp that tells when the lifecycle configuration was created.
  DescribeNotebookInstanceLifecycleConfigInput:
    type: object
    required:
      - NotebookInstanceLifecycleConfigName
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration to describe.
  DescribeSubscribedWorkteamResponse:
    type: object
    required:
      - SubscribedWorkteam
    properties:
      SubscribedWorkteam:
        $ref: '#/definitions/SubscribedWorkteam'
        description: A <code>Workteam</code> instance that contains information about the work team.
  DescribeSubscribedWorkteamRequest:
    type: object
    required:
      - WorkteamArn
    properties:
      WorkteamArn:
        $ref: '#/definitions/WorkteamArn'
        description: The Amazon Resource Name (ARN) of the subscribed work team to describe.
  DescribeTrainingJobResponse:
    type: object
    required:
      - TrainingJobName
      - TrainingJobArn
      - ModelArtifacts
      - TrainingJobStatus
      - SecondaryStatus
      - AlgorithmSpecification
      - ResourceConfig
      - StoppingCondition
      - CreationTime
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: ' Name of the model training job. '
      TrainingJobArn:
        $ref: '#/definitions/TrainingJobArn'
        description: The Amazon Resource Name (ARN) of the training job.
      TuningJobArn:
        $ref: '#/definitions/HyperParameterTuningJobArn'
        description: The Amazon Resource Name (ARN) of the associated hyperparameter tuning job if the training job was launched by a hyperparameter tuning job.
      LabelingJobArn:
        $ref: '#/definitions/LabelingJobArn'
        description: The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.
      ModelArtifacts:
        $ref: '#/definitions/ModelArtifacts'
        description: 'Information about the Amazon S3 location that is configured for storing model artifacts. '
      TrainingJobStatus:
        $ref: '#/definitions/TrainingJobStatus'
        description: '<p>The status of the training job.</p> <p>Amazon SageMaker provides the following training job statuses:</p> <ul> <li> <p> <code>InProgress</code> - The training is in progress.</p> </li> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> <li> <p> <code>Failed</code> - The training job has failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeTrainingJobResponse</code> call.</p> </li> <li> <p> <code>Stopping</code> - The training job is stopping.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> <p>For more detailed information, see <code>SecondaryStatus</code>. </p>'
      SecondaryStatus:
        $ref: '#/definitions/SecondaryStatus'
        description: '<p> Provides detailed information about the state of the training job. For detailed information on the secondary status of the training job, see <code>StatusMessage</code> under <a>SecondaryStatusTransition</a>.</p> <p>Amazon SageMaker provides primary statuses and secondary statuses that apply to each of them:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <important> <p>Valid values for <code>SecondaryStatus</code> are subject to change. </p> </important> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the training job failed, the reason it failed. '
      HyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: 'Algorithm-specific parameters. '
      AlgorithmSpecification:
        $ref: '#/definitions/AlgorithmSpecification'
        description: 'Information about the algorithm used for training, and algorithm metadata. '
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The AWS Identity and Access Management (IAM) role configured for the training job. '
      InputDataConfig:
        $ref: '#/definitions/InputDataConfig'
        description: 'An array of <code>Channel</code> objects that describes each data input channel. '
      OutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
        description: 'The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts. '
      ResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: 'Resources, including ML compute instances and ML storage volumes, that are configured for model training. '
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A <a>VpcConfig</a> object that specifies the VPC that this training job has access to. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: 'The condition under which to stop the training job. '
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when the training job was created.
      TrainingStartTime:
        $ref: '#/definitions/Timestamp'
        description: Indicates the time when the training job starts on training instances. You are billed for the time interval between this time and the value of <code>TrainingEndTime</code>. The start time in CloudWatch Logs might be later than this time. The difference is due to the time it takes to download the training data and to the size of the training container.
      TrainingEndTime:
        $ref: '#/definitions/Timestamp'
        description: 'Indicates the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when the status of the training job was last modified.
      SecondaryStatusTransitions:
        $ref: '#/definitions/SecondaryStatusTransitions'
        description: A history of all of the secondary statuses that the training job has transitioned through.
      FinalMetricDataList:
        $ref: '#/definitions/FinalMetricDataList'
        description: 'A collection of <code>MetricData</code> objects that specify the names, values, and dates and times that the training algorithm emitted to Amazon CloudWatch.'
      EnableNetworkIsolation:
        $ref: '#/definitions/Boolean'
        description: '<p>If you want to allow inbound or outbound network calls, except for calls between peers within a training cluster for distributed training, choose <code>True</code>. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.</p> <note> <p>The Semantic Segmentation built-in algorithm does not support network isolation.</p> </note>'
      EnableInterContainerTrafficEncryption:
        $ref: '#/definitions/Boolean'
        description: 'To encrypt all communications between ML compute instances in distributed training, specify <code>True</code>. Encryption provides greater security for distributed training, but training take longer because of the additional communications between ML compute instances.'
  DescribeTrainingJobRequest:
    type: object
    required:
      - TrainingJobName
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: The name of the training job.
  DescribeTransformJobResponse:
    type: object
    required:
      - TransformJobName
      - TransformJobArn
      - TransformJobStatus
      - ModelName
      - TransformInput
      - TransformResources
      - CreationTime
    properties:
      TransformJobName:
        $ref: '#/definitions/TransformJobName'
        description: The name of the transform job.
      TransformJobArn:
        $ref: '#/definitions/TransformJobArn'
        description: The Amazon Resource Name (ARN) of the transform job.
      TransformJobStatus:
        $ref: '#/definitions/TransformJobStatus'
        description: 'The status of the transform job. If the transform job failed, the reason is returned in the <code>FailureReason</code> field.'
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the transform job failed, the reason that it failed.'
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model used in the transform job.
      MaxConcurrentTransforms:
        $ref: '#/definitions/MaxConcurrentTransforms'
        description: The maximum number of parallel requests on each instance node that can be launched in a transform job. The default value is 1.
      MaxPayloadInMB:
        $ref: '#/definitions/MaxPayloadInMB'
        description: 'The maximum payload size, in MB, used in the transform job.'
      BatchStrategy:
        $ref: '#/definitions/BatchStrategy'
        description: ' If you want to include only one record in a batch, specify <code>SingleRecord</code>.. If you want batches to contain a maximum of the number of records specified in the <code>MaxPayloadInMB</code> parameter, specify <code>MultiRecord</code>.S'
      Environment:
        $ref: '#/definitions/TransformEnvironmentMap'
        description: <p/>
      TransformInput:
        $ref: '#/definitions/TransformInput'
        description: Describes the dataset to be transformed and the Amazon S3 location where it is stored.
      TransformOutput:
        $ref: '#/definitions/TransformOutput'
        description: Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
      TransformResources:
        $ref: '#/definitions/TransformResources'
        description: 'Describes the resources, including ML instance types and ML instance count, to use for the transform job.'
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the transform Job was created.
      TransformStartTime:
        $ref: '#/definitions/Timestamp'
        description: Indicates when the transform job starts on ML instances. You are billed for the time interval between this time and the value of <code>TransformEndTime</code>.
      TransformEndTime:
        $ref: '#/definitions/Timestamp'
        description: 'Indicates when the transform job has been completed, or has stopped or failed. You are billed for the time interval between this time and the value of <code>TransformStartTime</code>.'
      LabelingJobArn:
        $ref: '#/definitions/LabelingJobArn'
        description: The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.
  DescribeTransformJobRequest:
    type: object
    required:
      - TransformJobName
    properties:
      TransformJobName:
        $ref: '#/definitions/TransformJobName'
        description: The name of the transform job that you want to view details of.
  DescribeWorkteamResponse:
    type: object
    required:
      - Workteam
    properties:
      Workteam:
        $ref: '#/definitions/Workteam'
        description: 'A <code>Workteam</code> instance that contains information about the work team. '
  DescribeWorkteamRequest:
    type: object
    required:
      - WorkteamName
    properties:
      WorkteamName:
        $ref: '#/definitions/WorkteamName'
        description: The name of the work team to return a description of.
  GetSearchSuggestionsResponse:
    type: object
    properties:
      PropertyNameSuggestions:
        $ref: '#/definitions/PropertyNameSuggestionList'
        description: A list of property names for a <code>Resource</code> that match a <code>SuggestionQuery</code>.
  GetSearchSuggestionsRequest:
    type: object
    required:
      - Resource
    properties:
      Resource:
        $ref: '#/definitions/ResourceType'
        description: The name of the Amazon SageMaker resource to Search for. The only valid <code>Resource</code> value is <code>TrainingJob</code>.
      SuggestionQuery:
        $ref: '#/definitions/SuggestionQuery'
        description: Limits the property names that are included in the response.
  ListAlgorithmsOutput:
    type: object
    required:
      - AlgorithmSummaryList
    properties:
      AlgorithmSummaryList:
        $ref: '#/definitions/AlgorithmSummaryList'
        description: '&gt;An array of <code>AlgorithmSummary</code> objects, each of which lists an algorithm.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of algorithms, use it in the subsequent request.'
  ListAlgorithmsInput:
    type: object
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only algorithms created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only algorithms created before the specified time (timestamp).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of algorithms to return in the response.
      NameContains:
        $ref: '#/definitions/NameContains'
        description: A string in the algorithm name. This filter returns only algorithms whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response to a previous <code>ListAlgorithms</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of algorithms, use the token in the next request.'
      SortBy:
        $ref: '#/definitions/AlgorithmSortBy'
        description: The parameter by which to sort the results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for the results. The default is <code>Ascending</code>.
  ListCodeRepositoriesOutput:
    type: object
    required:
      - CodeRepositorySummaryList
    properties:
      CodeRepositorySummaryList:
        $ref: '#/definitions/CodeRepositorySummaryList'
        description: '<p>Gets a list of summaries of the Git repositories. Each summary specifies the following values for the repository: </p> <ul> <li> <p>Name</p> </li> <li> <p>Amazon Resource Name (ARN)</p> </li> <li> <p>Creation time</p> </li> <li> <p>Last modified time</p> </li> <li> <p>Configuration information, including the URL location of the repository and the ARN of the AWS Secrets Manager secret that contains the credentials used to access the repository.</p> </li> </ul>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of a <code>ListCodeRepositoriesOutput</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of Git repositories, use the token in the next request.'
  ListCodeRepositoriesInput:
    type: object
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only Git repositories that were created after the specified time.
      CreationTimeBefore:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only Git repositories that were created before the specified time.
      LastModifiedTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only Git repositories that were last modified after the specified time.
      LastModifiedTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only Git repositories that were last modified before the specified time.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of Git repositories to return in the response.
      NameContains:
        $ref: '#/definitions/CodeRepositoryNameContains'
        description: A string in the Git repositories name. This filter returns only repositories whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of a <code>ListCodeRepositoriesOutput</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of Git repositories, use the token in the next request.'
      SortBy:
        $ref: '#/definitions/CodeRepositorySortBy'
        description: The field to sort results by. The default is <code>Name</code>.
      SortOrder:
        $ref: '#/definitions/CodeRepositorySortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
  ListCompilationJobsResponse:
    type: object
    required:
      - CompilationJobSummaries
    properties:
      CompilationJobSummaries:
        $ref: '#/definitions/CompilationJobSummaries'
        description: 'An array of <a>CompilationJobSummary</a> objects, each describing a model compilation job. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this <code>NextToken</code>. To retrieve the next set of model compilation jobs, use this token in the next request.'
  ListCompilationJobsRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListCompilationJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model compilation jobs, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of model compilation jobs to return in the response.
      CreationTimeAfter:
        $ref: '#/definitions/CreationTime'
        description: 'A filter that returns the model compilation jobs that were created after a specified time. '
      CreationTimeBefore:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns the model compilation jobs that were created before a specified time.
      LastModifiedTimeAfter:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns the model compilation jobs that were modified after a specified time.
      LastModifiedTimeBefore:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns the model compilation jobs that were modified before a specified time.
      NameContains:
        $ref: '#/definitions/NameContains'
        description: A filter that returns the model compilation jobs whose name contains a specified string.
      StatusEquals:
        $ref: '#/definitions/CompilationJobStatus'
        description: A filter that retrieves model compilation jobs with a specific <a>DescribeCompilationJobResponse$CompilationJobStatus</a> status.
      SortBy:
        $ref: '#/definitions/ListCompilationJobsSortBy'
        description: The field by which to sort results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
  ListEndpointConfigsOutput:
    type: object
    required:
      - EndpointConfigs
    properties:
      EndpointConfigs:
        $ref: '#/definitions/EndpointConfigSummaryList'
        description: An array of endpoint configurations.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of endpoint configurations, use it in the subsequent request '
  ListEndpointConfigsInput:
    type: object
    properties:
      SortBy:
        $ref: '#/definitions/EndpointConfigSortKey'
        description: The field to sort results by. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/OrderKey'
        description: The sort order for results. The default is <code>Ascending</code>.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the result of the previous <code>ListEndpointConfig</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoint configurations, use the token in the next request. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of training jobs to return in the response.
      NameContains:
        $ref: '#/definitions/EndpointConfigNameContains'
        description: 'A string in the endpoint configuration name. This filter returns only endpoint configurations whose name contains the specified string. '
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only endpoint configurations created before the specified time (timestamp).
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only endpoint configurations created after the specified time (timestamp).
  ListEndpointsOutput:
    type: object
    required:
      - Endpoints
    properties:
      Endpoints:
        $ref: '#/definitions/EndpointSummaryList'
        description: ' An array or endpoint objects. '
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request. '
  ListEndpointsInput:
    type: object
    properties:
      SortBy:
        $ref: '#/definitions/EndpointSortKey'
        description: Sorts the list of results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/OrderKey'
        description: The sort order for results. The default is <code>Ascending</code>.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the result of a <code>ListEndpoints</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoints, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of endpoints to return in the response.
      NameContains:
        $ref: '#/definitions/EndpointNameContains'
        description: A string in endpoint names. This filter returns only endpoints whose name contains the specified string.
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only endpoints that were created before the specified time (timestamp).
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only endpoints that were created after the specified time (timestamp).
      LastModifiedTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: ' A filter that returns only endpoints that were modified before the specified timestamp. '
      LastModifiedTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: ' A filter that returns only endpoints that were modified after the specified timestamp. '
      StatusEquals:
        $ref: '#/definitions/EndpointStatus'
        description: ' A filter that returns only endpoints with the specified status.'
  ListHyperParameterTuningJobsResponse:
    type: object
    required:
      - HyperParameterTuningJobSummaries
    properties:
      HyperParameterTuningJobSummaries:
        $ref: '#/definitions/HyperParameterTuningJobSummaries'
        description: A list of <a>HyperParameterTuningJobSummary</a> objects that describe the tuning jobs that the <code>ListHyperParameterTuningJobs</code> request returned.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of this <code>ListHyperParameterTuningJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of tuning jobs, use the token in the next request.'
  ListHyperParameterTuningJobsRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListHyperParameterTuningJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of tuning jobs, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of tuning jobs to return. The default value is 10.
      SortBy:
        $ref: '#/definitions/HyperParameterTuningJobSortByOptions'
        description: The field to sort results by. The default is <code>Name</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
      NameContains:
        $ref: '#/definitions/NameContains'
        description: A string in the tuning job name. This filter returns only tuning jobs whose name contains the specified string.
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only tuning jobs that were created after the specified time.
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only tuning jobs that were created before the specified time.
      LastModifiedTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only tuning jobs that were modified after the specified time.
      LastModifiedTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only tuning jobs that were modified before the specified time.
      StatusEquals:
        $ref: '#/definitions/HyperParameterTuningJobStatus'
        description: A filter that returns only tuning jobs with the specified status.
  ListLabelingJobsResponse:
    type: object
    properties:
      LabelingJobSummaryList:
        $ref: '#/definitions/LabelingJobSummaryList'
        description: 'An array of <code>LabelingJobSummary</code> objects, each describing a labeling job.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of labeling jobs, use it in the subsequent request.'
  ListLabelingJobsRequest:
    type: object
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only labeling jobs created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only labeling jobs created before the specified time (timestamp).
      LastModifiedTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only labeling jobs modified after the specified time (timestamp).
      LastModifiedTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only labeling jobs modified before the specified time (timestamp).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of labeling jobs to return in each page of the response.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListLabelingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
      NameContains:
        $ref: '#/definitions/NameContains'
        description: A string in the labeling job name. This filter returns only labeling jobs whose name contains the specified string.
      SortBy:
        $ref: '#/definitions/SortBy'
        description: The field to sort results by. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
      StatusEquals:
        $ref: '#/definitions/LabelingJobStatus'
        description: A filter that retrieves only labeling jobs with a specific status.
  ListLabelingJobsForWorkteamResponse:
    type: object
    required:
      - LabelingJobSummaryList
    properties:
      LabelingJobSummaryList:
        $ref: '#/definitions/LabelingJobForWorkteamSummaryList'
        description: 'An array of <code>LabelingJobSummary</code> objects, each describing a labeling job.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of labeling jobs, use it in the subsequent request.'
  ListLabelingJobsForWorkteamRequest:
    type: object
    required:
      - WorkteamArn
    properties:
      WorkteamArn:
        $ref: '#/definitions/WorkteamArn'
        description: The Amazon Resource Name (ARN) of the work team for which you want to see labeling jobs for.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of labeling jobs to return in each page of the response.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListLabelingJobsForWorkteam</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only labeling jobs created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only labeling jobs created before the specified time (timestamp).
      JobReferenceCodeContains:
        $ref: '#/definitions/JobReferenceCodeContains'
        description: A filter the limits jobs to only the ones whose job reference code contains the specified string.
      SortBy:
        $ref: '#/definitions/ListLabelingJobsForWorkteamSortByOptions'
        description: The field to sort results by. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
  ListModelPackagesOutput:
    type: object
    required:
      - ModelPackageSummaryList
    properties:
      ModelPackageSummaryList:
        $ref: '#/definitions/ModelPackageSummaryList'
        description: 'An array of <code>ModelPackageSummary</code> objects, each of which lists a model package.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of model packages, use it in the subsequent request.'
  ListModelPackagesInput:
    type: object
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only model packages created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only model packages created before the specified time (timestamp).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of model packages to return in the response.
      NameContains:
        $ref: '#/definitions/NameContains'
        description: A string in the model package name. This filter returns only model packages whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response to a previous <code>ListModelPackages</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model packages, use the token in the next request.'
      SortBy:
        $ref: '#/definitions/ModelPackageSortBy'
        description: The parameter by which to sort the results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for the results. The default is <code>Ascending</code>.
  ListModelsOutput:
    type: object
    required:
      - Models
    properties:
      Models:
        $ref: '#/definitions/ModelSummaryList'
        description: 'An array of <code>ModelSummary</code> objects, each of which lists a model.'
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of models, use it in the subsequent request. '
  ListModelsInput:
    type: object
    properties:
      SortBy:
        $ref: '#/definitions/ModelSortKey'
        description: Sorts the list of results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/OrderKey'
        description: The sort order for results. The default is <code>Ascending</code>.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of models to return in the response.
      NameContains:
        $ref: '#/definitions/ModelNameContains'
        description: A string in the training job name. This filter returns only models in the training job whose name contains the specified string.
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only models created before the specified time (timestamp).
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only models created after the specified time (timestamp).
  ListNotebookInstanceLifecycleConfigsOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To get the next set of lifecycle configurations, use it in the next request. '
      NotebookInstanceLifecycleConfigs:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigSummaryList'
        description: 'An array of <code>NotebookInstanceLifecycleConfiguration</code> objects, each listing a lifecycle configuration.'
  ListNotebookInstanceLifecycleConfigsInput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of a <code>ListNotebookInstanceLifecycleConfigs</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of lifecycle configurations, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of lifecycle configurations to return in the response.
      SortBy:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigSortKey'
        description: Sorts the list of results. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigSortOrder'
        description: The sort order for results.
      NameContains:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigNameContains'
        description: A string in the lifecycle configuration name. This filter returns only lifecycle configurations whose name contains the specified string.
      CreationTimeBefore:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only lifecycle configurations that were created before the specified time (timestamp).
      CreationTimeAfter:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only lifecycle configurations that were created after the specified time (timestamp).
      LastModifiedTimeBefore:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns only lifecycle configurations that were modified before the specified time (timestamp).
      LastModifiedTimeAfter:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns only lifecycle configurations that were modified after the specified time (timestamp).
  ListNotebookInstancesOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response to the previous <code>ListNotebookInstances</code> request was truncated, Amazon SageMaker returns this token. To retrieve the next set of notebook instances, use the token in the next request.'
      NotebookInstances:
        $ref: '#/definitions/NotebookInstanceSummaryList'
        description: 'An array of <code>NotebookInstanceSummary</code> objects, one for each notebook instance.'
  ListNotebookInstancesInput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: '<p> If the previous call to the <code>ListNotebookInstances</code> is truncated, the response includes a <code>NextToken</code>. You can use this token in your subsequent <code>ListNotebookInstances</code> request to fetch the next set of notebook instances. </p> <note> <p>You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request. </p> </note>'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of notebook instances to return.
      SortBy:
        $ref: '#/definitions/NotebookInstanceSortKey'
        description: The field to sort results by. The default is <code>Name</code>.
      SortOrder:
        $ref: '#/definitions/NotebookInstanceSortOrder'
        description: 'The sort order for results. '
      NameContains:
        $ref: '#/definitions/NotebookInstanceNameContains'
        description: A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string.
      CreationTimeBefore:
        $ref: '#/definitions/CreationTime'
        description: 'A filter that returns only notebook instances that were created before the specified time (timestamp). '
      CreationTimeAfter:
        $ref: '#/definitions/CreationTime'
        description: A filter that returns only notebook instances that were created after the specified time (timestamp).
      LastModifiedTimeBefore:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns only notebook instances that were modified before the specified time (timestamp).
      LastModifiedTimeAfter:
        $ref: '#/definitions/LastModifiedTime'
        description: A filter that returns only notebook instances that were modified after the specified time (timestamp).
      StatusEquals:
        $ref: '#/definitions/NotebookInstanceStatus'
        description: A filter that returns only notebook instances with the specified status.
      NotebookInstanceLifecycleConfigNameContains:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: A string in the name of a notebook instances lifecycle configuration associated with this notebook instance. This filter returns only notebook instances associated with a lifecycle configuration with a name that contains the specified string.
      DefaultCodeRepositoryContains:
        $ref: '#/definitions/CodeRepositoryContains'
        description: A string in the name or URL of a Git repository associated with this notebook instance. This filter returns only notebook instances associated with a git repository with a name that contains the specified string.
      AdditionalCodeRepositoryEquals:
        $ref: '#/definitions/CodeRepositoryNameOrUrl'
        description: A filter that returns only notebook instances with associated with the specified git repository.
  ListSubscribedWorkteamsResponse:
    type: object
    required:
      - SubscribedWorkteams
    properties:
      SubscribedWorkteams:
        $ref: '#/definitions/SubscribedWorkteams'
        description: 'An array of <code>Workteam</code> objects, each describing a work team.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of work teams, use it in the subsequent request.'
  ListSubscribedWorkteamsRequest:
    type: object
    properties:
      NameContains:
        $ref: '#/definitions/WorkteamName'
        description: A string in the work team name. This filter returns only work teams whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListSubscribedWorkteams</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of work teams to return in each page of the response.
  ListTagsOutput:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of <code>Tag</code> objects, each with a tag key and a value.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' If response is truncated, Amazon SageMaker includes a token in the response. You can use this token in your subsequent request to fetch next set of tokens. '
  ListTagsInput:
    type: object
    required:
      - ResourceArn
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' If the response to the previous <code>ListTags</code> request is truncated, Amazon SageMaker returns this token. To retrieve the next set of tags, use it in the subsequent request. '
      MaxResults:
        $ref: '#/definitions/ListTagsMaxResults'
        description: Maximum number of tags to return.
  ListTrainingJobsResponse:
    type: object
    required:
      - TrainingJobSummaries
    properties:
      TrainingJobSummaries:
        $ref: '#/definitions/TrainingJobSummaries'
        description: 'An array of <code>TrainingJobSummary</code> objects, each listing a training job.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request.'
  ListTrainingJobsRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListTrainingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of training jobs to return in the response.
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only training jobs created after the specified time (timestamp).
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only training jobs created before the specified time (timestamp).
      LastModifiedTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only training jobs modified after the specified time (timestamp).
      LastModifiedTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only training jobs modified before the specified time (timestamp).
      NameContains:
        $ref: '#/definitions/NameContains'
        description: A string in the training job name. This filter returns only training jobs whose name contains the specified string.
      StatusEquals:
        $ref: '#/definitions/TrainingJobStatus'
        description: A filter that retrieves only training jobs with a specific status.
      SortBy:
        $ref: '#/definitions/SortBy'
        description: The field to sort results by. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
  ListTrainingJobsForHyperParameterTuningJobResponse:
    type: object
    required:
      - TrainingJobSummaries
    properties:
      TrainingJobSummaries:
        $ref: '#/definitions/HyperParameterTrainingJobSummaries'
        description: A list of <a>TrainingJobSummary</a> objects that describe the training jobs that the <code>ListTrainingJobsForHyperParameterTuningJob</code> request returned.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of this <code>ListTrainingJobsForHyperParameterTuningJob</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request.'
  ListTrainingJobsForHyperParameterTuningJobRequest:
    type: object
    required:
      - HyperParameterTuningJobName
    properties:
      HyperParameterTuningJobName:
        $ref: '#/definitions/HyperParameterTuningJobName'
        description: The name of the tuning job whose training jobs you want to list.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListTrainingJobsForHyperParameterTuningJob</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of training jobs to return. The default value is 10.
      StatusEquals:
        $ref: '#/definitions/TrainingJobStatus'
        description: A filter that returns only training jobs with the specified status.
      SortBy:
        $ref: '#/definitions/TrainingJobSortByOptions'
        description: '<p>The field to sort results by. The default is <code>Name</code>.</p> <p>If the value of this field is <code>FinalObjectiveMetricValue</code>, any training jobs that did not return an objective metric are not listed.</p>'
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
  ListTransformJobsResponse:
    type: object
    required:
      - TransformJobSummaries
    properties:
      TransformJobSummaries:
        $ref: '#/definitions/TransformJobSummaries'
        description: An array of <code>TransformJobSummary</code> objects.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of transform jobs, use it in the next request.'
  ListTransformJobsRequest:
    type: object
    properties:
      CreationTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only transform jobs created after the specified time.
      CreationTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only transform jobs created before the specified time.
      LastModifiedTimeAfter:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only transform jobs modified after the specified time.
      LastModifiedTimeBefore:
        $ref: '#/definitions/Timestamp'
        description: A filter that returns only transform jobs modified before the specified time.
      NameContains:
        $ref: '#/definitions/NameContains'
        description: A string in the transform job name. This filter returns only transform jobs whose name contains the specified string.
      StatusEquals:
        $ref: '#/definitions/TransformJobStatus'
        description: A filter that retrieves only transform jobs with a specific status.
      SortBy:
        $ref: '#/definitions/SortBy'
        description: The field to sort results by. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Descending</code>.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListTransformJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of transform jobs, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of transform jobs to return in the response. The default value is <code>10</code>.
  ListWorkteamsResponse:
    type: object
    required:
      - Workteams
    properties:
      Workteams:
        $ref: '#/definitions/Workteams'
        description: 'An array of <code>Workteam</code> objects, each describing a work team.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of work teams, use it in the subsequent request.'
  ListWorkteamsRequest:
    type: object
    properties:
      SortBy:
        $ref: '#/definitions/ListWorkteamsSortByOptions'
        description: The field to sort results by. The default is <code>CreationTime</code>.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: The sort order for results. The default is <code>Ascending</code>.
      NameContains:
        $ref: '#/definitions/WorkteamName'
        description: A string in the work team's name. This filter returns only work teams whose name contains the specified string.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>ListWorkteams</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of work teams to return in each page of the response.
  RenderUiTemplateResponse:
    type: object
    required:
      - RenderedContent
      - Errors
    properties:
      RenderedContent:
        $ref: '#/definitions/String'
        description: A Liquid template that renders the HTML for the worker UI.
      Errors:
        $ref: '#/definitions/RenderingErrorList'
        description: 'A list of one or more <code>RenderingError</code> objects if any were encountered while rendering the template. If there were no errors, the list is empty.'
  RenderUiTemplateRequest:
    type: object
    required:
      - UiTemplate
      - Task
      - RoleArn
    properties:
      UiTemplate:
        $ref: '#/definitions/UiTemplate'
        description: A <code>Template</code> object containing the worker UI template to render.
      Task:
        $ref: '#/definitions/RenderableTask'
        description: A <code>RenderableTask</code> object containing a representative task to render.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) that has access to the S3 objects that are used by the template.
  SearchResponse:
    type: object
    properties:
      Results:
        $ref: '#/definitions/SearchResultsList'
        description: A list of <code>SearchResult</code> objects.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous <code>Search</code> request was truncated, the response includes a NextToken. To retrieve the next set of results, use the token in the next request.'
  SearchRequest:
    type: object
    required:
      - Resource
    properties:
      Resource:
        $ref: '#/definitions/ResourceType'
        description: 'The name of the Amazon SageMaker resource to search for. Currently, the only valid <code>Resource</code> value is <code>TrainingJob</code>.'
      SearchExpression:
        $ref: '#/definitions/SearchExpression'
        description: 'A Boolean conditional statement. Resource objects must satisfy this condition to be included in search results. You must provide at least one subexpression, filter, or nested filter. The maximum number of recursive <code>SubExpressions</code>, <code>NestedFilters</code>, and <code>Filters</code> that can be included in a <code>SearchExpression</code> object is 50.'
      SortBy:
        $ref: '#/definitions/ResourcePropertyName'
        description: The name of the resource property used to sort the <code>SearchResults</code>. The default is <code>LastModifiedTime</code>.
      SortOrder:
        $ref: '#/definitions/SearchSortOrder'
        description: How <code>SearchResults</code> are ordered. Valid values are <code>Ascending</code> or <code>Descending</code>. The default is <code>Descending</code>.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If more than <code>MaxResults</code> resource objects match the specified <code>SearchExpression</code>, the <code>SearchResponse</code> includes a <code>NextToken</code>. The <code>NextToken</code> can be passed to the next <code>SearchRequest</code> to continue retrieving results for the specified <code>SearchExpression</code> and <code>Sort</code> parameters.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a <code>SearchResponse</code>.
  StartNotebookInstanceInput:
    type: object
    required:
      - NotebookInstanceName
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance to start.
  StopCompilationJobRequest:
    type: object
    required:
      - CompilationJobName
    properties:
      CompilationJobName:
        $ref: '#/definitions/EntityName'
        description: The name of the model compilation job to stop.
  StopHyperParameterTuningJobRequest:
    type: object
    required:
      - HyperParameterTuningJobName
    properties:
      HyperParameterTuningJobName:
        $ref: '#/definitions/HyperParameterTuningJobName'
        description: The name of the tuning job to stop.
  StopLabelingJobRequest:
    type: object
    required:
      - LabelingJobName
    properties:
      LabelingJobName:
        $ref: '#/definitions/LabelingJobName'
        description: The name of the labeling job to stop.
  StopNotebookInstanceInput:
    type: object
    required:
      - NotebookInstanceName
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance to terminate.
  StopTrainingJobRequest:
    type: object
    required:
      - TrainingJobName
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: The name of the training job to stop.
  StopTransformJobRequest:
    type: object
    required:
      - TransformJobName
    properties:
      TransformJobName:
        $ref: '#/definitions/TransformJobName'
        description: The name of the transform job to stop.
  UpdateCodeRepositoryOutput:
    type: object
    required:
      - CodeRepositoryArn
    properties:
      CodeRepositoryArn:
        $ref: '#/definitions/CodeRepositoryArn'
        description: The ARN of the Git repository.
  UpdateCodeRepositoryInput:
    type: object
    required:
      - CodeRepositoryName
    properties:
      CodeRepositoryName:
        $ref: '#/definitions/EntityName'
        description: The name of the Git repository to update.
      GitConfig:
        $ref: '#/definitions/GitConfigForUpdate'
        description: '<p>The configuration of the git repository, including the URL and the Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
  UpdateEndpointOutput:
    type: object
    required:
      - EndpointArn
    properties:
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the endpoint.
  UpdateEndpointInput:
    type: object
    required:
      - EndpointName
      - EndpointConfigName
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint whose configuration you want to update.
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the new endpoint configuration.
  UpdateEndpointWeightsAndCapacitiesOutput:
    type: object
    required:
      - EndpointArn
    properties:
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the updated endpoint.
  UpdateEndpointWeightsAndCapacitiesInput:
    type: object
    required:
      - EndpointName
      - DesiredWeightsAndCapacities
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of an existing Amazon SageMaker endpoint.
      DesiredWeightsAndCapacities:
        $ref: '#/definitions/DesiredWeightAndCapacityList'
        description: An object that provides new capacity and weight values for a variant.
  UpdateNotebookInstanceOutput:
    type: object
    properties: {}
  UpdateNotebookInstanceInput:
    type: object
    required:
      - NotebookInstanceName
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance to update.
      InstanceType:
        $ref: '#/definitions/InstanceType'
        description: The Amazon ML compute instance type.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: '<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access the notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
      LifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: 'The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.'
      DisassociateLifecycleConfig:
        $ref: '#/definitions/DisassociateNotebookInstanceLifecycleConfig'
        description: Set to <code>true</code> to remove the notebook instance lifecycle configuration currently associated with the notebook instance.
      VolumeSizeInGB:
        $ref: '#/definitions/NotebookInstanceVolumeSizeInGB'
        description: 'The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.'
      DefaultCodeRepository:
        $ref: '#/definitions/CodeRepositoryNameOrUrl'
        description: 'The Git repository to associate with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
      AdditionalCodeRepositories:
        $ref: '#/definitions/AdditionalCodeRepositoryNamesOrUrls'
        description: 'An array of up to three Git repositories to associate with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository.. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
      AcceleratorTypes:
        $ref: '#/definitions/NotebookInstanceAcceleratorTypes'
        description: 'A list of the Elastic Inference (EI) instance types to associate with this notebook instance. Currently only one EI instance type can be associated with a notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
      DisassociateAcceleratorTypes:
        $ref: '#/definitions/DisassociateNotebookInstanceAcceleratorTypes'
        description: A list of the Elastic Inference (EI) instance types to remove from this notebook instance.
      DisassociateDefaultCodeRepository:
        $ref: '#/definitions/DisassociateDefaultCodeRepository'
        description: The name or URL of the default Git repository to remove from this notebook instance.
      DisassociateAdditionalCodeRepositories:
        $ref: '#/definitions/DisassociateAdditionalCodeRepositories'
        description: A list of names or URLs of the default Git repositories to remove from this notebook instance.
  UpdateNotebookInstanceLifecycleConfigOutput:
    type: object
    properties: {}
  UpdateNotebookInstanceLifecycleConfigInput:
    type: object
    required:
      - NotebookInstanceLifecycleConfigName
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration.
      OnCreate:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'The shell script that runs only once, when you create a notebook instance'
      OnStart:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigList'
        description: 'The shell script that runs every time you start a notebook instance, including when you create the notebook instance.'
  UpdateWorkteamResponse:
    type: object
    required:
      - Workteam
    properties:
      Workteam:
        $ref: '#/definitions/Workteam'
        description: A <code>Workteam</code> object that describes the updated work team.
  UpdateWorkteamRequest:
    type: object
    required:
      - WorkteamName
    properties:
      WorkteamName:
        $ref: '#/definitions/WorkteamName'
        description: The name of the work team to update.
      MemberDefinitions:
        $ref: '#/definitions/MemberDefinitions'
        description: A list of <code>MemberDefinition</code> objects that contain the updated work team members.
      Description:
        $ref: '#/definitions/String200'
        description: An updated description for the work team.
  Accept:
    type: string
    maxLength: 256
  AccountId:
    type: string
    pattern: ^\d+$
  ResourceArn:
    type: string
    maxLength: 256
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 0
    maxItems: 50
  CodeRepositoryNameOrUrl:
    type: string
    pattern: '^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    minLength: 1
    maxLength: 1024
  AdditionalCodeRepositoryNamesOrUrls:
    type: array
    items:
      $ref: '#/definitions/CodeRepositoryNameOrUrl'
    maxItems: 3
  AlgorithmArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:algorithm/.*'
    minLength: 1
    maxLength: 2048
  AlgorithmImage:
    type: string
    maxLength: 255
  AlgorithmSortBy:
    type: string
    enum:
      - Name
      - CreationTime
  ArnOrName:
    type: string
    pattern: '(arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$'
    minLength: 1
    maxLength: 170
  TrainingInputMode:
    type: string
    enum:
      - Pipe
      - File
  MetricDefinitionList:
    type: array
    items:
      $ref: '#/definitions/MetricDefinition'
    minItems: 0
    maxItems: 20
  AlgorithmSpecification:
    type: object
    required:
      - TrainingInputMode
    properties:
      TrainingImage:
        $ref: '#/definitions/AlgorithmImage'
        description: 'The registry path of the Docker image that contains the training algorithm. For information about docker registry paths for built-in algorithms, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Algorithms Provided by Amazon SageMaker: Common Parameters</a>.'
      AlgorithmName:
        $ref: '#/definitions/ArnOrName'
        description: 'The name of the algorithm resource to use for the training job. This must be an algorithm resource that you created or subscribe to on AWS Marketplace. If you specify a value for this parameter, you can''t specify a value for <code>TrainingImage</code>.'
      TrainingInputMode:
        $ref: '#/definitions/TrainingInputMode'
        description: '<p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker algorithms support, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p> <p> In File mode, make sure you provision ML storage volume with sufficient capacity to accommodate the data download from S3. In addition to the training data, the ML storage volume also stores the output model. The algorithm container use ML storage volume to also store intermediate information, if any. </p> <p> For distributed algorithms using File mode, training data is distributed uniformly, and your training duration is predictable if the input data objects size is approximately same. Amazon SageMaker does not split the files any further for model training. If the object sizes are skewed, training won''t be optimal as the data distribution is also skewed where one host in a training cluster is overloaded, thus becoming bottleneck in training. </p>'
      MetricDefinitions:
        $ref: '#/definitions/MetricDefinitionList'
        description: A list of metric definition objects. Each object specifies the metric name and regular expressions used to parse algorithm logs. Amazon SageMaker publishes each metric to Amazon CloudWatch.
    description: '<p>Specifies the training algorithm to use in a <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTrainingJob.html">CreateTrainingJob</a> request.</p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about using your own algorithms, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. </p>'
  AlgorithmStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Completed
      - Failed
      - Deleting
  AlgorithmStatusItemList:
    type: array
    items:
      $ref: '#/definitions/AlgorithmStatusItem'
  AlgorithmStatusDetails:
    type: object
    properties:
      ValidationStatuses:
        $ref: '#/definitions/AlgorithmStatusItemList'
        description: The status of algorithm validation.
      ImageScanStatuses:
        $ref: '#/definitions/AlgorithmStatusItemList'
        description: The status of the scan of the algorithm's Docker image container.
    description: Specifies the validation and image scan statuses of the algorithm.
  EntityName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*$'
    minLength: 1
    maxLength: 63
  DetailedAlgorithmStatus:
    type: string
    enum:
      - NotStarted
      - InProgress
      - Completed
      - Failed
  String:
    type: string
  AlgorithmStatusItem:
    type: object
    required:
      - Name
      - Status
    properties:
      Name:
        $ref: '#/definitions/EntityName'
        description: The name of the algorithm for which the overall status is being reported.
      Status:
        $ref: '#/definitions/DetailedAlgorithmStatus'
        description: The current status.
      FailureReason:
        $ref: '#/definitions/String'
        description: 'if the overall status is <code>Failed</code>, the reason for the failure.'
    description: Represents the overall status of an algorithm.
  EntityDescription:
    type: string
    pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
    maxLength: 1024
  CreationTime:
    type: string
    format: date-time
  AlgorithmSummary:
    type: object
    required:
      - AlgorithmName
      - AlgorithmArn
      - CreationTime
      - AlgorithmStatus
    properties:
      AlgorithmName:
        $ref: '#/definitions/EntityName'
        description: The name of the algorithm that is described by the summary.
      AlgorithmArn:
        $ref: '#/definitions/AlgorithmArn'
        description: The Amazon Resource Name (ARN) of the algorithm.
      AlgorithmDescription:
        $ref: '#/definitions/EntityDescription'
        description: A brief description of the algorithm.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp that shows when the algorithm was created.
      AlgorithmStatus:
        $ref: '#/definitions/AlgorithmStatus'
        description: The overall status of the algorithm.
    description: Provides summary information about an algorithm.
  AlgorithmSummaryList:
    type: array
    items:
      $ref: '#/definitions/AlgorithmSummary'
  TrainingJobDefinition:
    type: object
    required:
      - TrainingInputMode
      - InputDataConfig
      - OutputDataConfig
      - ResourceConfig
      - StoppingCondition
    properties:
      TrainingInputMode:
        $ref: '#/definitions/TrainingInputMode'
        description: '<p>The input mode used by the algorithm for the training job. For the input modes that Amazon SageMaker algorithms support, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>.</p> <p>If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container.</p>'
      HyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: The hyperparameters used for the training job.
      InputDataConfig:
        $ref: '#/definitions/InputDataConfig'
        description: 'An array of <code>Channel</code> objects, each of which specifies an input source.'
      OutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
        description: the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts.
      ResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: 'The resources, including the ML compute instances and ML storage volumes, to use for model training.'
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: '<p>Sets a duration for training. Use this parameter to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts.</p>'
    description: Defines the input needed to run a training job using the algorithm.
  TransformJobDefinition:
    type: object
    required:
      - TransformInput
      - TransformOutput
      - TransformResources
    properties:
      MaxConcurrentTransforms:
        $ref: '#/definitions/MaxConcurrentTransforms'
        description: The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
      MaxPayloadInMB:
        $ref: '#/definitions/MaxPayloadInMB'
        description: 'The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).'
      BatchStrategy:
        $ref: '#/definitions/BatchStrategy'
        description: <p>A string that determines the number of records included in a single mini-batch.</p> <p> <code>SingleRecord</code> means only one record is used per mini-batch. <code>MultiRecord</code> means a mini-batch is set to contain as many records that can fit within the <code>MaxPayloadInMB</code> limit.</p>
      Environment:
        $ref: '#/definitions/TransformEnvironmentMap'
        description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
      TransformInput:
        $ref: '#/definitions/TransformInput'
        description: A description of the input source and the way the transform job consumes it.
      TransformOutput:
        $ref: '#/definitions/TransformOutput'
        description: Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
      TransformResources:
        $ref: '#/definitions/TransformResources'
        description: Identifies the ML compute instances for the transform job.
    description: Defines the input needed to run a transform job using the inference specification specified in the algorithm.
  AlgorithmValidationProfile:
    type: object
    required:
      - ProfileName
      - TrainingJobDefinition
    properties:
      ProfileName:
        $ref: '#/definitions/EntityName'
        description: 'The name of the profile for the algorithm. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
      TrainingJobDefinition:
        $ref: '#/definitions/TrainingJobDefinition'
        description: The <code>TrainingJobDefinition</code> object that describes the training job that Amazon SageMaker runs to validate your algorithm.
      TransformJobDefinition:
        $ref: '#/definitions/TransformJobDefinition'
        description: The <code>TransformJobDefinition</code> object that describes the transform job that Amazon SageMaker runs to validate your algorithm.
    description: <p>Defines a training job and a batch transform job that Amazon SageMaker runs to validate your algorithm.</p> <p>The data provided in the validation profile is made available to your buyers on AWS Marketplace.</p>
  AlgorithmValidationProfiles:
    type: array
    items:
      $ref: '#/definitions/AlgorithmValidationProfile'
    minItems: 1
    maxItems: 1
  RoleArn:
    type: string
    pattern: '^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
    minLength: 20
    maxLength: 2048
  AlgorithmValidationSpecification:
    type: object
    required:
      - ValidationRole
      - ValidationProfiles
    properties:
      ValidationRole:
        $ref: '#/definitions/RoleArn'
        description: The IAM roles that Amazon SageMaker uses to run the training jobs.
      ValidationProfiles:
        $ref: '#/definitions/AlgorithmValidationProfiles'
        description: 'An array of <code>AlgorithmValidationProfile</code> objects, each of which specifies a training job and batch transform job that Amazon SageMaker runs to validate your algorithm.'
    description: Specifies configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
  LambdaFunctionArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
    maxLength: 2048
  AnnotationConsolidationConfig:
    type: object
    required:
      - AnnotationConsolidationLambdaArn
    properties:
      AnnotationConsolidationLambdaArn:
        $ref: '#/definitions/LambdaFunctionArn'
        description: '<p>The Amazon Resource Name (ARN) of a Lambda function implements the logic for annotation consolidation.</p> <p>For the built-in bounding box, image classification, semantic segmentation, and text classification task types, Amazon SageMaker Ground Truth provides the following Lambda functions:</p> <ul> <li> <p> <i>Bounding box</i> - Finds the most similar boxes from different workers based on the Jaccard index of the boxes.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-BoundingBox</code> </p> </li> <li> <p> <i>Image classification</i> - Uses a variant of the Expectation Maximization approach to estimate the true class of an image based on annotations from individual workers.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <i>Semantic segmentation</i> - Treats each pixel in an image as a multi-class classification and treats pixel annotations from workers as "votes" for the correct label.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <i>Text classification</i> - Uses a variant of the Expectation Maximization approach to estimate the true class of text based on annotations from individual workers.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-TextMultiClass</code> </p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sms-annotation-consolidation.html">Annotation Consolidation</a>.</p>'
    description: Configures how labels are consolidated across human workers.
  AssemblyType:
    type: string
    enum:
      - None
      - Line
  AttributeName:
    type: string
    minLength: 1
    maxLength: 256
  AttributeNames:
    type: array
    items:
      $ref: '#/definitions/AttributeName'
    maxItems: 16
  BatchStrategy:
    type: string
    enum:
      - MultiRecord
      - SingleRecord
  Boolean:
    type: boolean
  BooleanOperator:
    type: string
    enum:
      - And
      - Or
  Branch:
    type: string
    minLength: 1
    maxLength: 1024
  ParameterKey:
    type: string
    maxLength: 256
  ParameterValues:
    type: array
    items:
      $ref: '#/definitions/ParameterValue'
    minItems: 1
    maxItems: 20
  CategoricalParameterRange:
    type: object
    required:
      - Name
      - Values
    properties:
      Name:
        $ref: '#/definitions/ParameterKey'
        description: The name of the categorical hyperparameter to tune.
      Values:
        $ref: '#/definitions/ParameterValues'
        description: A list of the categories for the hyperparameter.
    description: A list of categorical hyperparameters to tune.
  CategoricalParameterRangeSpecification:
    type: object
    required:
      - Values
    properties:
      Values:
        $ref: '#/definitions/ParameterValues'
        description: The allowed categories for the hyperparameter.
    description: Defines the possible values for a categorical hyperparameter.
  CategoricalParameterRanges:
    type: array
    items:
      $ref: '#/definitions/CategoricalParameterRange'
    minItems: 0
    maxItems: 20
  Cents:
    type: integer
    minimum: 0
    maximum: 99
  CertifyForMarketplace:
    type: boolean
  ChannelName:
    type: string
    pattern: '[A-Za-z0-9\.\-_]+'
    minLength: 1
    maxLength: 64
  DataSource:
    type: object
    required:
      - S3DataSource
    properties:
      S3DataSource:
        $ref: '#/definitions/S3DataSource'
        description: The S3 location of the data source that is associated with a channel.
    description: Describes the location of the channel data.
  ContentType:
    type: string
    maxLength: 256
  CompressionType:
    type: string
    enum:
      - None
      - Gzip
  RecordWrapper:
    type: string
    enum:
      - None
      - RecordIO
  ShuffleConfig:
    type: object
    required:
      - Seed
    properties:
      Seed:
        $ref: '#/definitions/Seed'
        description: Determines the shuffling order in <code>ShuffleConfig</code> value.
    description: '<p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, the results of the S3 key prefix matches are shuffled. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when <code>ShuffleConfig</code> is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>'
  Channel:
    type: object
    required:
      - ChannelName
      - DataSource
    properties:
      ChannelName:
        $ref: '#/definitions/ChannelName'
        description: 'The name of the channel. '
      DataSource:
        $ref: '#/definitions/DataSource'
        description: The location of the channel data.
      ContentType:
        $ref: '#/definitions/ContentType'
        description: The MIME type of the data.
      CompressionType:
        $ref: '#/definitions/CompressionType'
        description: 'If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in Pipe input mode. In File mode, leave this field unset or set it to None.'
      RecordWrapperType:
        $ref: '#/definitions/RecordWrapper'
        description: '<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format. In this case, Amazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don''t need to set this attribute. For more information, see <a href="https://mxnet.incubator.apache.org/architecture/note_data_loading.html#data-format">Create a Dataset Using RecordIO</a>. </p> <p>In File mode, leave this field unset or set it to None.</p>'
      InputMode:
        $ref: '#/definitions/TrainingInputMode'
        description: '<p>(Optional) The input mode to use for the data channel in a training job. If you don''t set a value for <code>InputMode</code>, Amazon SageMaker uses the value set for <code>TrainingInputMode</code>. Use this parameter to override the <code>TrainingInputMode</code> setting in a <a>AlgorithmSpecification</a> request when you have a channel that needs a different input mode from the training job''s general setting. To download the data from Amazon Simple Storage Service (Amazon S3) to the provisioned ML storage volume, and mount the directory to a Docker volume, use <code>File</code> input mode. To stream data directly from Amazon S3 to the container, choose <code>Pipe</code> input mode.</p> <p>To use a model for incremental training, choose <code>File</code> input model.</p>'
      ShuffleConfig:
        $ref: '#/definitions/ShuffleConfig'
        description: '<p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, this shuffles the results of the S3 key prefix matches. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, shuffling is done at the start of every epoch. With large datasets this ensures that the order of the training data is different for each epoch, it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>'
    description: 'A channel is a named input source that training algorithms can consume. '
  ContentTypes:
    type: array
    items:
      $ref: '#/definitions/ContentType'
  CompressionTypes:
    type: array
    items:
      $ref: '#/definitions/CompressionType'
  InputModes:
    type: array
    items:
      $ref: '#/definitions/TrainingInputMode'
    minItems: 1
  ChannelSpecification:
    type: object
    required:
      - Name
      - SupportedContentTypes
      - SupportedInputModes
    properties:
      Name:
        $ref: '#/definitions/ChannelName'
        description: The name of the channel.
      Description:
        $ref: '#/definitions/EntityDescription'
        description: A brief description of the channel.
      IsRequired:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the channel is required by the algorithm.
      SupportedContentTypes:
        $ref: '#/definitions/ContentTypes'
        description: The supported MIME types for the data.
      SupportedCompressionTypes:
        $ref: '#/definitions/CompressionTypes'
        description: 'The allowed compression types, if data compression is used.'
      SupportedInputModes:
        $ref: '#/definitions/InputModes'
        description: '<p>The allowed input mode, either FILE or PIPE.</p> <p>In FILE mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode.</p> <p>In PIPE mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume.</p>'
    description: 'Defines a named input source, called a channel, to be used by an algorithm.'
  ChannelSpecifications:
    type: array
    items:
      $ref: '#/definitions/ChannelSpecification'
    minItems: 1
    maxItems: 8
  CodeRepositoryArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:code-repository/.*'
    minLength: 1
    maxLength: 2048
  CodeRepositoryContains:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    maxLength: 1024
  CodeRepositoryNameContains:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    maxLength: 63
  CodeRepositorySortBy:
    type: string
    enum:
      - Name
      - CreationTime
      - LastModifiedTime
  CodeRepositorySortOrder:
    type: string
    enum:
      - Ascending
      - Descending
  LastModifiedTime:
    type: string
    format: date-time
  GitConfig:
    type: object
    required:
      - RepositoryUrl
    properties:
      RepositoryUrl:
        $ref: '#/definitions/GitConfigUrl'
        description: The URL where the Git repository is located.
      Branch:
        $ref: '#/definitions/Branch'
        description: The default branch for the Git repository.
      SecretArn:
        $ref: '#/definitions/SecretArn'
        description: '<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
    description: Specifies configuration details for a Git repository in your AWS account.
  CodeRepositorySummary:
    type: object
    required:
      - CodeRepositoryName
      - CodeRepositoryArn
      - CreationTime
      - LastModifiedTime
    properties:
      CodeRepositoryName:
        $ref: '#/definitions/EntityName'
        description: The name of the Git repository.
      CodeRepositoryArn:
        $ref: '#/definitions/CodeRepositoryArn'
        description: The Amazon Resource Name (ARN) of the Git repository.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: The date and time that the Git repository was created.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: The date and time that the Git repository was last modified.
      GitConfig:
        $ref: '#/definitions/GitConfig'
        description: 'Configuration details for the Git repository, including the URL where it is located and the ARN of the AWS Secrets Manager secret that contains the credentials used to access the repository.'
    description: Specifies summary information about a Git repository.
  CodeRepositorySummaryList:
    type: array
    items:
      $ref: '#/definitions/CodeRepositorySummary'
  CognitoClientId:
    type: string
    pattern: '[\w+]+'
    minLength: 1
    maxLength: 128
  CognitoUserPool:
    type: string
    pattern: '[\w-]+_[0-9a-zA-Z]+'
    minLength: 1
    maxLength: 55
  CognitoUserGroup:
    type: string
    pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
    minLength: 1
    maxLength: 128
  CognitoMemberDefinition:
    type: object
    required:
      - UserPool
      - UserGroup
      - ClientId
    properties:
      UserPool:
        $ref: '#/definitions/CognitoUserPool'
        description: An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
      UserGroup:
        $ref: '#/definitions/CognitoUserGroup'
        description: An identifier for a user group.
      ClientId:
        $ref: '#/definitions/CognitoClientId'
        description: An identifier for an application client. You must create the app client ID using Amazon Cognito.
    description: Identifies a Amazon Cognito user group. A user group can be used in on or more work teams.
  CompilationJobArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:compilation-job/.*'
    maxLength: 256
  CompilationJobStatus:
    type: string
    enum:
      - INPROGRESS
      - COMPLETED
      - FAILED
      - STARTING
      - STOPPING
      - STOPPED
  CompilationJobSummary:
    type: object
    required:
      - CompilationJobName
      - CompilationJobArn
      - CreationTime
      - CompilationTargetDevice
      - CompilationJobStatus
    properties:
      CompilationJobName:
        $ref: '#/definitions/EntityName'
        description: The name of the model compilation job that you want a summary for.
      CompilationJobArn:
        $ref: '#/definitions/CompilationJobArn'
        description: The Amazon Resource Name (ARN) of the model compilation job.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: The time when the model compilation job was created.
      CompilationStartTime:
        $ref: '#/definitions/Timestamp'
        description: The time when the model compilation job started.
      CompilationEndTime:
        $ref: '#/definitions/Timestamp'
        description: The time when the model compilation job completed.
      CompilationTargetDevice:
        $ref: '#/definitions/TargetDevice'
        description: The type of device that the model will run on after compilation has completed.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: The time when the model compilation job was last modified.
      CompilationJobStatus:
        $ref: '#/definitions/CompilationJobStatus'
        description: The status of the model compilation job.
    description: A summary of a model compilation job.
  CompilationJobSummaries:
    type: array
    items:
      $ref: '#/definitions/CompilationJobSummary'
  Timestamp:
    type: string
    format: date-time
  TargetDevice:
    type: string
    enum:
      - ml_m4
      - ml_m5
      - ml_c4
      - ml_c5
      - ml_p2
      - ml_p3
      - jetson_tx1
      - jetson_tx2
      - rasp3b
      - deeplens
  ContainerHostname:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    maxLength: 63
  Image:
    type: string
    pattern: '[\S]+'
    maxLength: 255
  Url:
    type: string
    pattern: '^(https|s3)://([^/]+)/?(.*)$'
    maxLength: 1024
  EnvironmentMap:
    type: array
    maxItems: 16
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/EnvironmentKey'
        value:
          $ref: '#/definitions/EnvironmentValue'
  ContainerDefinition:
    type: object
    properties:
      ContainerHostname:
        $ref: '#/definitions/ContainerHostname'
        description: The DNS host name for the container after Amazon SageMaker deploys it.
      Image:
        $ref: '#/definitions/Image'
        description: 'The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored. If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a> '
      ModelDataUrl:
        $ref: '#/definitions/Url'
        description: '<p>The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). </p> <p>If you provide a value for this parameter, Amazon SageMaker uses AWS Security Token Service to download model artifacts from the S3 path you provide. AWS STS is activated in your IAM user account by default. If you previously deactivated AWS STS for a region, you need to reactivate AWS STS for that region. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating and Deactivating AWS STS in an AWS Region</a> in the <i>AWS Identity and Access Management User Guide</i>.</p>'
      Environment:
        $ref: '#/definitions/EnvironmentMap'
        description: 'The environment variables to set in the Docker container. Each key and value in the <code>Environment</code> string to string map can have length of up to 1024. We support up to 16 entries in the map. '
      ModelPackageName:
        $ref: '#/definitions/ArnOrName'
        description: The name of the model package to use to create the model.
    description: 'Describes the container, as part of model definition.'
  ContainerDefinitionList:
    type: array
    items:
      $ref: '#/definitions/ContainerDefinition'
    maxItems: 5
  ContentClassifier:
    type: string
    enum:
      - FreeOfPersonallyIdentifiableInformation
      - FreeOfAdultContent
  ContentClassifiers:
    type: array
    items:
      $ref: '#/definitions/ContentClassifier'
    maxItems: 256
  ParameterValue:
    type: string
    maxLength: 256
  ContinuousParameterRange:
    type: object
    required:
      - Name
      - MinValue
      - MaxValue
    properties:
      Name:
        $ref: '#/definitions/ParameterKey'
        description: The name of the continuous hyperparameter to tune.
      MinValue:
        $ref: '#/definitions/ParameterValue'
        description: The minimum value for the hyperparameter. The tuning job uses floating-point values between this value and <code>MaxValue</code>for tuning.
      MaxValue:
        $ref: '#/definitions/ParameterValue'
        description: The maximum value for the hyperparameter. The tuning job uses floating-point values between <code>MinValue</code> value and this value for tuning.
    description: A list of continuous hyperparameters to tune.
  ContinuousParameterRangeSpecification:
    type: object
    required:
      - MinValue
      - MaxValue
    properties:
      MinValue:
        $ref: '#/definitions/ParameterValue'
        description: The minimum floating-point value allowed.
      MaxValue:
        $ref: '#/definitions/ParameterValue'
        description: The maximum floating-point value allowed.
    description: Defines the possible values for a continuous hyperparameter.
  ContinuousParameterRanges:
    type: array
    items:
      $ref: '#/definitions/ContinuousParameterRange'
    minItems: 0
    maxItems: 20
  TrainingSpecification:
    type: object
    required:
      - TrainingImage
      - SupportedTrainingInstanceTypes
      - TrainingChannels
    properties:
      TrainingImage:
        $ref: '#/definitions/Image'
        description: The Amazon ECR registry path of the Docker image that contains the training algorithm.
      TrainingImageDigest:
        $ref: '#/definitions/ImageDigest'
        description: An MD5 hash of the training algorithm that identifies the Docker image used for training.
      SupportedHyperParameters:
        $ref: '#/definitions/HyperParameterSpecifications'
        description: 'A list of the <code>HyperParameterSpecification</code> objects, that define the supported hyperparameters. This is required if the algorithm supports automatic model tuning.&gt;'
      SupportedTrainingInstanceTypes:
        $ref: '#/definitions/TrainingInstanceTypes'
        description: A list of the instance types that this algorithm can use for training.
      SupportsDistributedTraining:
        $ref: '#/definitions/Boolean'
        description: 'Indicates whether the algorithm supports distributed training. If set to false, buyers can’t request more than one instance during training.'
      MetricDefinitions:
        $ref: '#/definitions/MetricDefinitionList'
        description: 'A list of <code>MetricDefinition</code> objects, which are used for parsing metrics generated by the algorithm.'
      TrainingChannels:
        $ref: '#/definitions/ChannelSpecifications'
        description: 'A list of <code>ChannelSpecification</code> objects, which specify the input sources to be used by the algorithm.'
      SupportedTuningJobObjectiveMetrics:
        $ref: '#/definitions/HyperParameterTuningJobObjectives'
        description: A list of the metrics that the algorithm emits that can be used as the objective metric in a hyperparameter tuning job.
    description: Defines how the algorithm is used for a training job.
  InferenceSpecification:
    type: object
    required:
      - Containers
      - SupportedTransformInstanceTypes
      - SupportedRealtimeInferenceInstanceTypes
      - SupportedContentTypes
      - SupportedResponseMIMETypes
    properties:
      Containers:
        $ref: '#/definitions/ModelPackageContainerDefinitionList'
        description: The Amazon ECR registry path of the Docker image that contains the inference code.
      SupportedTransformInstanceTypes:
        $ref: '#/definitions/TransformInstanceTypes'
        description: A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
      SupportedRealtimeInferenceInstanceTypes:
        $ref: '#/definitions/RealtimeInferenceInstanceTypes'
        description: A list of the instance types that are used to generate inferences in real-time.
      SupportedContentTypes:
        $ref: '#/definitions/ContentTypes'
        description: The supported MIME types for the input data.
      SupportedResponseMIMETypes:
        $ref: '#/definitions/ResponseMIMETypes'
        description: The supported MIME types for the output data.
    description: Defines how to perform inference generation after a training job is run.
  InputConfig:
    type: object
    required:
      - S3Uri
      - DataInputConfig
      - Framework
    properties:
      S3Uri:
        $ref: '#/definitions/S3Uri'
        description: 'The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).'
      DataInputConfig:
        $ref: '#/definitions/DataInputConfig'
        description: '<p>Specifies the name and shape of the expected data inputs for your trained model with a JSON dictionary form. The data inputs are <a>InputConfig$Framework</a> specific. </p> <ul> <li> <p> <code>TensorFlow</code>: You must specify the name and shape (NHWC format) of the expected data inputs using a dictionary format for your trained model. The dictionary formats required for the console and CLI are different.</p> <ul> <li> <p>Examples for one input:</p> <ul> <li> <p>If using the console, <code>{"input":[1,1024,1024,3]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input\":[1,1024,1024,3]}</code> </p> </li> </ul> </li> <li> <p>Examples for two inputs:</p> <ul> <li> <p>If using the console, <code>{"data1": [1,28,28,1], "data2":[1,28,28,1]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"data1\": [1,28,28,1], \"data2\":[1,28,28,1]}</code> </p> </li> </ul> </li> </ul> </li> <li> <p> <code>MXNET/ONNX</code>: You must specify the name and shape (NCHW format) of the expected data inputs in order using a dictionary format for your trained model. The dictionary formats required for the console and CLI are different.</p> <ul> <li> <p>Examples for one input:</p> <ul> <li> <p>If using the console, <code>{"data":[1,3,1024,1024]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"data\":[1,3,1024,1024]}</code> </p> </li> </ul> </li> <li> <p>Examples for two inputs:</p> <ul> <li> <p>If using the console, <code>{"var1": [1,1,28,28], "var2":[1,1,28,28]} </code> </p> </li> <li> <p>If using the CLI, <code>{\"var1\": [1,1,28,28], \"var2\":[1,1,28,28]}</code> </p> </li> </ul> </li> </ul> </li> <li> <p> <code>PyTorch</code>: You can either specify the name and shape (NCHW format) of expected data inputs in order using a dictionary format for your trained model or you can specify the shape only using a list format. The dictionary formats required for the console and CLI are different. The list formats for the console and CLI are the same.</p> <ul> <li> <p>Examples for one input in dictionary format:</p> <ul> <li> <p>If using the console, <code>{"input0":[1,3,224,224]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input0\":[1,3,224,224]}</code> </p> </li> </ul> </li> <li> <p>Example for one input in list format: <code>[[1,3,224,224]]</code> </p> </li> <li> <p>Examples for two inputs in dictionary format:</p> <ul> <li> <p>If using the console, <code>{"input0":[1,3,224,224], "input1":[1,3,224,224]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input0\":[1,3,224,224], \"input1\":[1,3,224,224]} </code> </p> </li> </ul> </li> <li> <p>Example for two inputs in list format: <code>[[1,3,224,224], [1,3,224,224]]</code> </p> </li> </ul> </li> <li> <p> <code>XGBOOST</code>: input data name and shape are not needed.</p> </li> </ul>'
      Framework:
        $ref: '#/definitions/Framework'
        description: 'Identifies the framework in which the model was trained. For example: TENSORFLOW.'
    description: 'Contains information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
  OutputConfig:
    type: object
    required:
      - S3OutputLocation
      - TargetDevice
    properties:
      S3OutputLocation:
        $ref: '#/definitions/S3Uri'
        description: 'Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, s3://bucket-name/key-name-prefix.'
      TargetDevice:
        $ref: '#/definitions/TargetDevice'
        description: 'Identifies the device that you want to run your model on after it has been compiled. For example: ml_c5.'
    description: Contains information about the output location for the compiled model and the device (target) that the model runs on.
  StoppingCondition:
    type: object
    properties:
      MaxRuntimeInSeconds:
        $ref: '#/definitions/MaxRuntimeInSeconds'
        description: 'The maximum length of time, in seconds, that the training job can run. If model training does not complete during this time, Amazon SageMaker ends the job. If value is not specified, default value is 1 day. Maximum value is 28 days.'
    description: '<p>Specifies how long model training can run. When model training reaches the limit, Amazon SageMaker ends the training job. Use this API to cap model training cost.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker automatically saves the intermediate results of a model training job (it is best effort case, as model might not be ready to save as some stages, for example training just started). This intermediate data is a valid model artifact. You can use it to create a model (<code>CreateModel</code>). </p>'
  EndpointConfigName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    maxLength: 63
  ProductionVariantList:
    type: array
    items:
      $ref: '#/definitions/ProductionVariant'
    minItems: 1
  KmsKeyId:
    type: string
    maxLength: 2048
  EndpointConfigArn:
    type: string
    minLength: 20
    maxLength: 2048
  EndpointName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    maxLength: 63
  EndpointArn:
    type: string
    minLength: 20
    maxLength: 2048
  HyperParameterTuningJobName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    minLength: 1
    maxLength: 32
  HyperParameterTuningJobConfig:
    type: object
    required:
      - Strategy
      - HyperParameterTuningJobObjective
      - ResourceLimits
      - ParameterRanges
    properties:
      Strategy:
        $ref: '#/definitions/HyperParameterTuningJobStrategyType'
        description: 'Specifies the search strategy for hyperparameters. Currently, the only valid value is <code>Bayesian</code>.'
      HyperParameterTuningJobObjective:
        $ref: '#/definitions/HyperParameterTuningJobObjective'
        description: The <a>HyperParameterTuningJobObjective</a> object that specifies the objective metric for this tuning job.
      ResourceLimits:
        $ref: '#/definitions/ResourceLimits'
        description: The <a>ResourceLimits</a> object that specifies the maximum number of training jobs and parallel training jobs for this tuning job.
      ParameterRanges:
        $ref: '#/definitions/ParameterRanges'
        description: The <a>ParameterRanges</a> object that specifies the ranges of hyperparameters that this tuning job searches.
      TrainingJobEarlyStoppingType:
        $ref: '#/definitions/TrainingJobEarlyStoppingType'
        description: '<p>Specifies whether to use early stopping for training jobs launched by the hyperparameter tuning job. This can be one of the following values (the default value is <code>OFF</code>):</p> <dl> <dt>OFF</dt> <dd> <p>Training jobs launched by the hyperparameter tuning job do not use early stopping.</p> </dd> <dt>AUTO</dt> <dd> <p>Amazon SageMaker stops training jobs launched by the hyperparameter tuning job when they are unlikely to perform better than previously completed training jobs. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-early-stopping.html">Stop Training Jobs Early</a>.</p> </dd> </dl>'
    description: Configures a hyperparameter tuning job.
  HyperParameterTrainingJobDefinition:
    type: object
    required:
      - AlgorithmSpecification
      - RoleArn
      - OutputDataConfig
      - ResourceConfig
      - StoppingCondition
    properties:
      StaticHyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: Specifies the values of hyperparameters that do not change for the tuning job.
      AlgorithmSpecification:
        $ref: '#/definitions/HyperParameterAlgorithmSpecification'
        description: The <a>HyperParameterAlgorithmSpecification</a> object that specifies the resource algorithm to use for the training jobs that the tuning job launches.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role associated with the training jobs that the tuning job launches.
      InputDataConfig:
        $ref: '#/definitions/InputDataConfig'
        description: An array of <a>Channel</a> objects that specify the input for the training jobs that the tuning job launches.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'The <a>VpcConfig</a> object that specifies the VPC that you want the training jobs that this hyperparameter tuning job launches to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
      OutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
        description: Specifies the path to the Amazon S3 bucket where you store model artifacts from the training jobs that the tuning job launches.
      ResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: '<p>The resources, including the compute instances and storage volumes, to use for the training jobs that the tuning job launches.</p> <p>Storage volumes store model artifacts and incremental states. Training algorithms might also use storage volumes for scratch space. If you want Amazon SageMaker to use the storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>'
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: '<p>Sets a maximum duration for the training jobs that the tuning job launches. Use this parameter to limit model training costs. </p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal. This delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts.</p> <p>When Amazon SageMaker terminates a job because the stopping condition has been met, training algorithms provided by Amazon SageMaker save the intermediate results of the job.</p>'
      EnableNetworkIsolation:
        $ref: '#/definitions/Boolean'
        description: '<p>Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If network isolation is used for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.</p> <note> <p>The Semantic Segmentation built-in algorithm does not support network isolation.</p> </note>'
      EnableInterContainerTrafficEncryption:
        $ref: '#/definitions/Boolean'
        description: 'To encrypt all communications between ML compute instances in distributed training, specify <code>True</code>. Encryption provides greater security for distributed training, but training take longer because of the additional communications between ML compute instances.'
    description: Defines the training jobs launched by a hyperparameter tuning job.
  HyperParameterTuningJobWarmStartConfig:
    type: object
    required:
      - ParentHyperParameterTuningJobs
      - WarmStartType
    properties:
      ParentHyperParameterTuningJobs:
        $ref: '#/definitions/ParentHyperParameterTuningJobs'
        description: '<p>An array of hyperparameter tuning jobs that are used as the starting point for the new hyperparameter tuning job. For more information about warm starting a hyperparameter tuning job, see <a href="http://docs.aws.amazon.com/automatic-model-tuning-incremental">Using a Previous Hyperparameter Tuning Job as a Starting Point</a>.</p> <p>Hyperparameter tuning jobs created before October 1, 2018 cannot be used as parent jobs for warm start tuning jobs.</p>'
      WarmStartType:
        $ref: '#/definitions/HyperParameterTuningJobWarmStartType'
        description: '<p>Specifies one of the following:</p> <dl> <dt>IDENTICAL_DATA_AND_ALGORITHM</dt> <dd> <p>The new hyperparameter tuning job uses the same input data and training image as the parent tuning jobs. You can change the hyperparameter ranges to search and the maximum number of training jobs that the hyperparameter tuning job launches. You cannot use a new version of the training algorithm, unless the changes in the new version do not affect the algorithm itself. For example, changes that improve logging or adding support for a different data format are allowed. You can also change hyperparameters from tunable to static, and from static to tunable, but the total number of static plus tunable hyperparameters must remain the same as it is in all parent jobs. The objective metric for the new tuning job must be the same as for all parent jobs.</p> </dd> <dt>TRANSFER_LEARNING</dt> <dd> <p>The new hyperparameter tuning job can include input data, hyperparameter ranges, maximum number of concurrent training jobs, and maximum number of training jobs that are different than those of its parent hyperparameter tuning jobs. The training image can also be a different version from the version used in the parent hyperparameter tuning job. You can also change hyperparameters from tunable to static, and from static to tunable, but the total number of static plus tunable hyperparameters must remain the same as it is in all parent jobs. The objective metric for the new tuning job must be the same as for all parent jobs.</p> </dd> </dl>'
    description: '<p>Specifies the configuration for a hyperparameter tuning job that uses one or more previous hyperparameter tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric, and the training job that performs the best is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>'
  HyperParameterTuningJobArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*'
    maxLength: 256
  LabelingJobName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    minLength: 1
    maxLength: 63
  LabelAttributeName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    minLength: 1
    maxLength: 127
  LabelingJobInputConfig:
    type: object
    required:
      - DataSource
    properties:
      DataSource:
        $ref: '#/definitions/LabelingJobDataSource'
        description: The location of the input data.
      DataAttributes:
        $ref: '#/definitions/LabelingJobDataAttributes'
        description: Attributes of the data specified by the customer.
    description: Input configuration information for a labeling job.
  LabelingJobOutputConfig:
    type: object
    required:
      - S3OutputPath
    properties:
      S3OutputPath:
        $ref: '#/definitions/S3Uri'
        description: The Amazon S3 location to write output data.
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: 'The AWS Key Management Service ID of the key used to encrypt the output data, if any.'
    description: Output configuration information for a labeling job.
  S3Uri:
    type: string
    pattern: '^(https|s3)://([^/]+)/?(.*)$'
    maxLength: 1024
  LabelingJobStoppingConditions:
    type: object
    properties:
      MaxHumanLabeledObjectCount:
        $ref: '#/definitions/MaxHumanLabeledObjectCount'
        description: The maximum number of objects that can be labeled by human workers.
      MaxPercentageOfInputDatasetLabeled:
        $ref: '#/definitions/MaxPercentageOfInputDatasetLabeled'
        description: The maximum number of input data objects that should be labeled.
    description: 'A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.'
  LabelingJobAlgorithmsConfig:
    type: object
    required:
      - LabelingJobAlgorithmSpecificationArn
    properties:
      LabelingJobAlgorithmSpecificationArn:
        $ref: '#/definitions/LabelingJobAlgorithmSpecificationArn'
        description: '<p>Specifies the Amazon Resource Name (ARN) of the algorithm used for auto-labeling. You must select one of the following ARNs:</p> <ul> <li> <p> <i>Image classification</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/image-classification</code> </p> </li> <li> <p> <i>Text classification</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/text-classification</code> </p> </li> <li> <p> <i>Object detection</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/object-detection</code> </p> </li> </ul>'
      InitialActiveLearningModelArn:
        $ref: '#/definitions/ModelArn'
        description: 'At the end of an auto-label job Amazon SageMaker Ground Truth sends the Amazon Resource Nam (ARN) of the final model used for auto-labeling. You can use this model as the starting point for subsequent similar jobs by providing the ARN of the model here. '
      LabelingJobResourceConfig:
        $ref: '#/definitions/LabelingJobResourceConfig'
        description: Provides configuration information for a labeling job.
    description: Provides configuration information for auto-labeling of your data objects. A <code>LabelingJobAlgorithmsConfig</code> object must be supplied in order to use auto-labeling.
  HumanTaskConfig:
    type: object
    required:
      - WorkteamArn
      - UiConfig
      - PreHumanTaskLambdaArn
      - TaskTitle
      - TaskDescription
      - NumberOfHumanWorkersPerDataObject
      - TaskTimeLimitInSeconds
      - AnnotationConsolidationConfig
    properties:
      WorkteamArn:
        $ref: '#/definitions/WorkteamArn'
        description: The Amazon Resource Name (ARN) of the work team assigned to complete the tasks.
      UiConfig:
        $ref: '#/definitions/UiConfig'
        description: Information about the user interface that workers use to complete the labeling task.
      PreHumanTaskLambdaArn:
        $ref: '#/definitions/LambdaFunctionArn'
        description: '<p>The Amazon Resource Name (ARN) of a Lambda function that is run before a data object is sent to a human worker. Use this function to provide input to a custom labeling job.</p> <p>For the built-in bounding box, image classification, semantic segmentation, and text classification task types, Amazon SageMaker Ground Truth provides the following Lambda functions:</p> <p> <b>US East (Northern Virginia) (us-east-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-TextMultiClass</code> </p> </li> </ul> <p> <b>US East (Ohio) (us-east-2):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-TextMultiClass</code> </p> </li> </ul> <p> <b>US West (Oregon) (us-west-2):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-TextMultiClass</code> </p> </li> </ul> <p> <b>EU (Ireland) (eu-west-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-TextMultiClass</code> </p> </li> </ul> <p> <b>Asia Pacific (Tokyo (ap-northeast-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-TextMultiClass</code> </p> </li> </ul>'
      TaskKeywords:
        $ref: '#/definitions/TaskKeywords'
        description: Keywords used to describe the task so that workers on Amazon Mechanical Turk can discover the task.
      TaskTitle:
        $ref: '#/definitions/TaskTitle'
        description: A title for the task for your human workers.
      TaskDescription:
        $ref: '#/definitions/TaskDescription'
        description: A description of the task for your human workers.
      NumberOfHumanWorkersPerDataObject:
        $ref: '#/definitions/NumberOfHumanWorkersPerDataObject'
        description: 'The number of human workers that will label an object. '
      TaskTimeLimitInSeconds:
        $ref: '#/definitions/TaskTimeLimitInSeconds'
        description: The amount of time that a worker has to complete a task.
      TaskAvailabilityLifetimeInSeconds:
        $ref: '#/definitions/TaskAvailabilityLifetimeInSeconds'
        description: The length of time that a task remains available for labelling by human workers.
      MaxConcurrentTaskCount:
        $ref: '#/definitions/MaxConcurrentTaskCount'
        description: Defines the maximum number of data objects that can be labeled by human workers at the same time. Each object may have more than one worker at one time.
      AnnotationConsolidationConfig:
        $ref: '#/definitions/AnnotationConsolidationConfig'
        description: Configures how labels are consolidated across human workers.
      PublicWorkforceTaskPrice:
        $ref: '#/definitions/PublicWorkforceTaskPrice'
        description: The price that you pay for each task performed by a public worker.
    description: Information required for human workers to complete a labeling task.
  LabelingJobArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*'
    maxLength: 2048
  ModelName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    maxLength: 63
  VpcConfig:
    type: object
    required:
      - SecurityGroupIds
      - Subnets
    properties:
      SecurityGroupIds:
        $ref: '#/definitions/VpcSecurityGroupIds'
        description: 'The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field.'
      Subnets:
        $ref: '#/definitions/Subnets'
        description: 'The ID of the subnets in the VPC to which you want to connect your training job or model. '
    description: 'Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. '
  ModelArn:
    type: string
    minLength: 20
    maxLength: 2048
  ModelPackageValidationSpecification:
    type: object
    required:
      - ValidationRole
      - ValidationProfiles
    properties:
      ValidationRole:
        $ref: '#/definitions/RoleArn'
        description: The IAM roles to be used for the validation of the model package.
      ValidationProfiles:
        $ref: '#/definitions/ModelPackageValidationProfiles'
        description: 'An array of <code>ModelPackageValidationProfile</code> objects, each of which specifies a batch transform job that Amazon SageMaker runs to validate your model package.'
    description: Specifies batch transform jobs that Amazon SageMaker runs to validate your model package.
  SourceAlgorithmSpecification:
    type: object
    required:
      - SourceAlgorithms
    properties:
      SourceAlgorithms:
        $ref: '#/definitions/SourceAlgorithmList'
        description: A list of the algorithms that were used to create a model package.
    description: A list of algorithms that were used to create a model package.
  ModelPackageArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model-package/.*'
    minLength: 1
    maxLength: 2048
  NotebookInstanceName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    maxLength: 63
  InstanceType:
    type: string
    enum:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.t3.medium
      - ml.t3.large
      - ml.t3.xlarge
      - ml.t3.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
      - ml.c5d.xlarge
      - ml.c5d.2xlarge
      - ml.c5d.4xlarge
      - ml.c5d.9xlarge
      - ml.c5d.18xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
  SubnetId:
    type: string
    maxLength: 32
  SecurityGroupIds:
    type: array
    items:
      $ref: '#/definitions/SecurityGroupId'
    maxItems: 5
  NotebookInstanceLifecycleConfigName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    maxLength: 63
  DirectInternetAccess:
    type: string
    enum:
      - Enabled
      - Disabled
  NotebookInstanceVolumeSizeInGB:
    type: integer
    minimum: 5
    maximum: 16384
  NotebookInstanceAcceleratorTypes:
    type: array
    items:
      $ref: '#/definitions/NotebookInstanceAcceleratorType'
  NotebookInstanceLifecycleConfigList:
    type: array
    items:
      $ref: '#/definitions/NotebookInstanceLifecycleHook'
    maxItems: 1
  NotebookInstanceLifecycleConfigArn:
    type: string
    maxLength: 256
  NotebookInstanceArn:
    type: string
    maxLength: 256
  SessionExpirationDurationInSeconds:
    type: integer
    minimum: 1800
    maximum: 43200
  NotebookInstanceUrl:
    type: string
  TrainingJobName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    minLength: 1
    maxLength: 63
  HyperParameters:
    type: array
    minItems: 0
    maxItems: 100
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ParameterKey'
        value:
          $ref: '#/definitions/ParameterValue'
  InputDataConfig:
    type: array
    items:
      $ref: '#/definitions/Channel'
    minItems: 1
    maxItems: 8
  OutputDataConfig:
    type: object
    required:
      - S3OutputPath
    properties:
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>"alias/ExampleAlias"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"</code> </p> </li> </ul> <p>If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateTramsformJob</code> request. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      S3OutputPath:
        $ref: '#/definitions/S3Uri'
        description: 'Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. '
    description: Provides information about how to store model training results (model artifacts).
  ResourceConfig:
    type: object
    required:
      - InstanceType
      - InstanceCount
      - VolumeSizeInGB
    properties:
      InstanceType:
        $ref: '#/definitions/TrainingInstanceType'
        description: 'The ML compute instance type. '
      InstanceCount:
        $ref: '#/definitions/TrainingInstanceCount'
        description: 'The number of ML compute instances to use. For distributed training, provide a value greater than 1. '
      VolumeSizeInGB:
        $ref: '#/definitions/VolumeSizeInGB'
        description: '<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note>'
      VolumeKmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job. The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
    description: 'Describes the resources, including ML compute instances and ML storage volumes, to use for model training. '
  TrainingJobArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*'
    maxLength: 256
  TransformJobName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    minLength: 1
    maxLength: 63
  MaxConcurrentTransforms:
    type: integer
    minimum: 0
  MaxPayloadInMB:
    type: integer
    minimum: 0
  TransformEnvironmentMap:
    type: array
    maxItems: 16
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/TransformEnvironmentKey'
        value:
          $ref: '#/definitions/TransformEnvironmentValue'
  TransformInput:
    type: object
    required:
      - DataSource
    properties:
      DataSource:
        $ref: '#/definitions/TransformDataSource'
        description: 'Describes the location of the channel data, which is, the S3 location of the input data that the model can consume.'
      ContentType:
        $ref: '#/definitions/ContentType'
        description: The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
      CompressionType:
        $ref: '#/definitions/CompressionType'
        description: 'If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is <code>None</code>.'
      SplitType:
        $ref: '#/definitions/SplitType'
        description: '<p>The method to use to split the transform job''s data into smaller batches. If you don''t want to split the data, specify <code>None</code>. If you want to split records on a newline character boundary, specify <code>Line</code>. To split records according to the RecordIO format, specify <code>RecordIO</code>. The default value is <code>None</code>. </p> <p>Amazon SageMaker sends the maximum number of records per batch in each request up to the MaxPayloadInMB limit. For more information, see <a href="http://mxnet.io/architecture/note_data_loading.html#data-format">RecordIO data format</a>.</p> <note> <p>For information about the <code>RecordIO</code> format, see <a href="http://mxnet.io/architecture/note_data_loading.html#data-format">Data Format</a>.</p> </note>'
    description: Describes the input source of a transform job and the way the transform job consumes it.
  TransformOutput:
    type: object
    required:
      - S3OutputPath
    properties:
      S3OutputPath:
        $ref: '#/definitions/S3Uri'
        description: '<p>The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job. For example, <code>s3://bucket-name/key-name-prefix</code>.</p> <p>For every S3 object used as input for the transform job, the transformed data is stored in a corresponding subfolder in the location under the output prefix. For example, for the input data <code>s3://bucket-name/input-name-prefix/dataset01/data.csv</code> the transformed data is stored at <code>s3://bucket-name/key-name-prefix/dataset01/</code>. This is based on the original name, as a series of .part files (.part0001, part0002, etc.).</p>'
      Accept:
        $ref: '#/definitions/Accept'
        description: The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
      AssembleWith:
        $ref: '#/definitions/AssemblyType'
        description: 'Defines how to assemble the results of the transform job as a single S3 object. Choose a format that is most convenient to you. To concatenate the results in binary format, specify <code>None</code>. To add a newline character at the end of every transformed record, specify <code>Line</code>.'
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>"alias/ExampleAlias"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"</code> </p> </li> </ul> <p>If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateTramsformJob</code> request. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
    description: Describes the results of a transform job output.
  TransformResources:
    type: object
    required:
      - InstanceType
      - InstanceCount
    properties:
      InstanceType:
        $ref: '#/definitions/TransformInstanceType'
        description: 'The ML compute instance type for the transform job. For using built-in algorithms to transform moderately sized datasets, ml.m4.xlarge or <code>ml.m5.large</code> should suffice. There is no default value for <code>InstanceType</code>.'
      InstanceCount:
        $ref: '#/definitions/TransformInstanceCount'
        description: 'The number of ML compute instances to use in the transform job. For distributed transform, provide a value greater than 1. The default value is <code>1</code>.'
      VolumeKmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the batch transform job. The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
    description: 'Describes the resources, including ML instance types and ML instance count, to use for transform job.'
  TransformJobArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:transform-job/.*'
    maxLength: 256
  WorkteamName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    minLength: 1
    maxLength: 63
  MemberDefinitions:
    type: array
    items:
      $ref: '#/definitions/MemberDefinition'
    minItems: 1
    maxItems: 10
  String200:
    type: string
    minLength: 1
    maxLength: 200
  WorkteamArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*'
    maxLength: 256
  DataInputConfig:
    type: string
    minLength: 1
    maxLength: 1024
  S3DataSource:
    type: object
    required:
      - S3DataType
      - S3Uri
    properties:
      S3DataType:
        $ref: '#/definitions/S3DataType'
        description: '<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects that match the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p> <p>If you choose <code>AugmentedManifestFile</code>, S3Uri identifies an object that is an augmented manifest file in JSON lines format. This file contains the data you want to use for model training. <code>AugmentedManifestFile</code> can only be used if the Channel''s input mode is <code>Pipe</code>.</p>'
      S3Uri:
        $ref: '#/definitions/S3Uri'
        description: '<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {"prefix": "s3://customer_bucket/some/prefix/"},</code> </p> <p> <code> "relative/path/to/custdata-1",</code> </p> <p> <code> "relative/path/custdata-2",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-2</code> </p> <p> <code>...</code> </p> <p>The complete set of <code>s3uris</code> in this manifest is the input data for the channel for this datasource. The object that each <code>s3uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>'
      S3DataDistributionType:
        $ref: '#/definitions/S3DataDistribution'
        description: '<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don''t choose more ML compute instances for training than available S3 objects. If you do, some nodes won''t get any data and you will pay for nodes that aren''t getting any training data. This applies in both File and Pipe modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>'
      AttributeNames:
        $ref: '#/definitions/AttributeNames'
        description: A list of one or more attribute names to use that are found in a specified augmented manifest file.
    description: Describes the S3 data source.
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 50
  Success:
    type: boolean
  DeployedImage:
    type: object
    properties:
      SpecifiedImage:
        $ref: '#/definitions/Image'
        description: The image path you specified when you created the model.
      ResolvedImage:
        $ref: '#/definitions/Image'
        description: The specific digest path of the image hosted in this <code>ProductionVariant</code>.
      ResolutionTime:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when the image path for the model resolved to the <code>ResolvedImage</code> '
    description: '<p>Gets the Amazon EC2 Container Registry path of the docker image of the model that is hosted in this <a>ProductionVariant</a>.</p> <p>If you used the <code>registry/repository[:tag]</code> form to specify the image path of the primary container when you created the model hosted in this <code>ProductionVariant</code>, the path resolves to a path of the form <code>registry/repository[@digest]</code>. A digest is a hash value that identifies a specific version of an image. For information about Amazon ECR paths, see <a href="http://docs.aws.amazon.com//AmazonECR/latest/userguide/docker-pull-ecr-image.html">Pulling an Image</a> in the <i>Amazon ECR User Guide</i>.</p>'
  DeployedImages:
    type: array
    items:
      $ref: '#/definitions/DeployedImage'
  ProductId:
    type: string
  FailureReason:
    type: string
    maxLength: 1024
  ModelArtifacts:
    type: object
    required:
      - S3ModelArtifacts
    properties:
      S3ModelArtifacts:
        $ref: '#/definitions/S3Uri'
        description: 'The path of the S3 object that contains the model artifacts. For example, <code>s3://bucket-name/keynameprefix/model.tar.gz</code>.'
    description: 'Provides information about the location that is configured for storing model artifacts. '
  ProductionVariantSummaryList:
    type: array
    items:
      $ref: '#/definitions/ProductionVariantSummary'
    minItems: 1
  EndpointStatus:
    type: string
    enum:
      - OutOfService
      - Creating
      - Updating
      - SystemUpdating
      - RollingBack
      - InService
      - Deleting
      - Failed
  HyperParameterTuningJobStatus:
    type: string
    enum:
      - Completed
      - InProgress
      - Failed
      - Stopped
      - Stopping
  TrainingJobStatusCounters:
    type: object
    properties:
      Completed:
        $ref: '#/definitions/TrainingJobStatusCounter'
        description: The number of completed training jobs launched by the hyperparameter tuning job.
      InProgress:
        $ref: '#/definitions/TrainingJobStatusCounter'
        description: The number of in-progress training jobs launched by a hyperparameter tuning job.
      RetryableError:
        $ref: '#/definitions/TrainingJobStatusCounter'
        description: 'The number of training jobs that failed, but can be retried. A failed training job can be retried only if it failed because an internal service error occurred.'
      NonRetryableError:
        $ref: '#/definitions/TrainingJobStatusCounter'
        description: The number of training jobs that failed and can't be retried. A failed training job can't be retried if it failed because a client error occurred.
      Stopped:
        $ref: '#/definitions/TrainingJobStatusCounter'
        description: The number of training jobs launched by a hyperparameter tuning job that were manually stopped.
    description: 'The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.'
  ObjectiveStatusCounters:
    type: object
    properties:
      Succeeded:
        $ref: '#/definitions/ObjectiveStatusCounter'
        description: The number of training jobs whose final objective metric was evaluated by the hyperparameter tuning job and used in the hyperparameter tuning process.
      Pending:
        $ref: '#/definitions/ObjectiveStatusCounter'
        description: The number of training jobs that are in progress and pending evaluation of their final objective metric.
      Failed:
        $ref: '#/definitions/ObjectiveStatusCounter'
        description: The number of training jobs whose final objective metric was not evaluated and used in the hyperparameter tuning process. This typically occurs when the training job failed or did not emit an objective metric.
    description: 'Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.'
  HyperParameterTrainingJobSummary:
    type: object
    required:
      - TrainingJobName
      - TrainingJobArn
      - CreationTime
      - TrainingJobStatus
      - TunedHyperParameters
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: The name of the training job.
      TrainingJobArn:
        $ref: '#/definitions/TrainingJobArn'
        description: The Amazon Resource Name (ARN) of the training job.
      TuningJobName:
        $ref: '#/definitions/HyperParameterTuningJobName'
        description: The HyperParameter tuning job that launched the training job.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the training job was created.
      TrainingStartTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the training job started.
      TrainingEndTime:
        $ref: '#/definitions/Timestamp'
        description: 'Specifies the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
      TrainingJobStatus:
        $ref: '#/definitions/TrainingJobStatus'
        description: The status of the training job.
      TunedHyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: A list of the hyperparameters for which you specified ranges to search.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'The reason that the training job failed. '
      FinalHyperParameterTuningJobObjectiveMetric:
        $ref: '#/definitions/FinalHyperParameterTuningJobObjectiveMetric'
        description: The <a>FinalHyperParameterTuningJobObjectiveMetric</a> object that specifies the value of the objective metric of the tuning job that launched this training job.
      ObjectiveStatus:
        $ref: '#/definitions/ObjectiveStatus'
        description: '<p>The status of the objective metric for the training job:</p> <ul> <li> <p>Succeeded: The final objective metric for the training job was evaluated by the hyperparameter tuning job and used in the hyperparameter tuning process.</p> </li> </ul> <ul> <li> <p>Pending: The training job is in progress and evaluation of its final objective metric is pending.</p> </li> </ul> <ul> <li> <p>Failed: The final objective metric for the training job was not evaluated, and was not used in the hyperparameter tuning process. This typically occurs when the training job failed or did not emit an objective metric.</p> </li> </ul>'
    description: Specifies summary information about a training job.
  LabelingJobStatus:
    type: string
    enum:
      - InProgress
      - Completed
      - Failed
      - Stopping
      - Stopped
  LabelCounters:
    type: object
    properties:
      TotalLabeled:
        $ref: '#/definitions/LabelCounter'
        description: The total number of objects labeled.
      HumanLabeled:
        $ref: '#/definitions/LabelCounter'
        description: The total number of objects labeled by a human worker.
      MachineLabeled:
        $ref: '#/definitions/LabelCounter'
        description: The total number of objects labeled by automated data labeling.
      FailedNonRetryableError:
        $ref: '#/definitions/LabelCounter'
        description: The total number of objects that could not be labeled due to an error.
      Unlabeled:
        $ref: '#/definitions/LabelCounter'
        description: The total number of objects not yet labeled.
    description: Provides a breakdown of the number of objects labeled.
  JobReferenceCode:
    type: string
    minLength: 1
  LabelingJobOutput:
    type: object
    required:
      - OutputDatasetS3Uri
    properties:
      OutputDatasetS3Uri:
        $ref: '#/definitions/S3Uri'
        description: 'The Amazon S3 bucket location of the manifest file for labeled data. '
      FinalActiveLearningModelArn:
        $ref: '#/definitions/ModelArn'
        description: 'The Amazon Resource Name (ARN) for the most recent Amazon SageMaker model trained as part of automated data labeling. '
    description: 'Specifies the location of the output produced by the labeling job. '
  ModelPackageStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Completed
      - Failed
      - Deleting
  ModelPackageStatusDetails:
    type: object
    required:
      - ValidationStatuses
    properties:
      ValidationStatuses:
        $ref: '#/definitions/ModelPackageStatusItemList'
        description: The validation status of the model package.
      ImageScanStatuses:
        $ref: '#/definitions/ModelPackageStatusItemList'
        description: The status of the scan of the Docker image container for the model package.
    description: Specifies the validation and image scan statuses of the model package.
  NotebookInstanceStatus:
    type: string
    enum:
      - Pending
      - InService
      - Stopping
      - Stopped
      - Failed
      - Deleting
      - Updating
  NetworkInterfaceId:
    type: string
  SubscribedWorkteam:
    type: object
    required:
      - WorkteamArn
    properties:
      WorkteamArn:
        $ref: '#/definitions/WorkteamArn'
        description: The Amazon Resource Name (ARN) of the vendor that you have subscribed.
      MarketplaceTitle:
        $ref: '#/definitions/String200'
        description: The title of the service provided by the vendor in the Amazon Marketplace.
      SellerName:
        $ref: '#/definitions/String'
        description: The name of the vendor in the Amazon Marketplace.
      MarketplaceDescription:
        $ref: '#/definitions/String200'
        description: The description of the vendor from the Amazon Marketplace.
      ListingId:
        $ref: '#/definitions/String'
        description: <p/>
    description: Describes a work team of a vendor that does the a labelling job.
  TrainingJobStatus:
    type: string
    enum:
      - InProgress
      - Completed
      - Failed
      - Stopping
      - Stopped
  SecondaryStatus:
    type: string
    enum:
      - Starting
      - LaunchingMLInstances
      - PreparingTrainingStack
      - Downloading
      - DownloadingTrainingImage
      - Training
      - Uploading
      - Stopping
      - Stopped
      - MaxRuntimeExceeded
      - Completed
      - Failed
  SecondaryStatusTransitions:
    type: array
    items:
      $ref: '#/definitions/SecondaryStatusTransition'
  FinalMetricDataList:
    type: array
    items:
      $ref: '#/definitions/MetricData'
    minItems: 0
    maxItems: 20
  TransformJobStatus:
    type: string
    enum:
      - InProgress
      - Completed
      - Failed
      - Stopping
      - Stopped
  Workteam:
    type: object
    required:
      - WorkteamName
      - MemberDefinitions
      - WorkteamArn
      - Description
    properties:
      WorkteamName:
        $ref: '#/definitions/WorkteamName'
        description: The name of the work team.
      MemberDefinitions:
        $ref: '#/definitions/MemberDefinitions'
        description: The Amazon Cognito user groups that make up the work team.
      WorkteamArn:
        $ref: '#/definitions/WorkteamArn'
        description: The Amazon Resource Name (ARN) that identifies the work team.
      ProductListingIds:
        $ref: '#/definitions/ProductListings'
        description: The Amazon Marketplace identifier for a vendor's work team.
      Description:
        $ref: '#/definitions/String200'
        description: A description of the work team.
      SubDomain:
        $ref: '#/definitions/String'
        description: The URI of the labeling job's user interface. Workers open this URI to start labeling your data objects.
      CreateDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the work team was created (timestamp).
      LastUpdatedDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the work team was last updated (timestamp).
    description: Provides details about a labeling work team.
  VariantName:
    type: string
    pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
    maxLength: 63
  VariantWeight:
    type: number
    format: float
    minimum: 0
  TaskCount:
    type: integer
    minimum: 1
  DesiredWeightAndCapacity:
    type: object
    required:
      - VariantName
    properties:
      VariantName:
        $ref: '#/definitions/VariantName'
        description: The name of the variant to update.
      DesiredWeight:
        $ref: '#/definitions/VariantWeight'
        description: The variant's weight.
      DesiredInstanceCount:
        $ref: '#/definitions/TaskCount'
        description: The variant's capacity.
    description: Specifies weight and capacity values for a production variant.
  DesiredWeightAndCapacityList:
    type: array
    items:
      $ref: '#/definitions/DesiredWeightAndCapacity'
    minItems: 1
  DetailedModelPackageStatus:
    type: string
    enum:
      - NotStarted
      - InProgress
      - Completed
      - Failed
  DisassociateAdditionalCodeRepositories:
    type: boolean
  DisassociateDefaultCodeRepository:
    type: boolean
  DisassociateNotebookInstanceAcceleratorTypes:
    type: boolean
  DisassociateNotebookInstanceLifecycleConfig:
    type: boolean
  Dollars:
    type: integer
    minimum: 0
    maximum: 1
  EndpointConfigNameContains:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    maxLength: 63
  EndpointConfigSortKey:
    type: string
    enum:
      - Name
      - CreationTime
  EndpointConfigSummary:
    type: object
    required:
      - EndpointConfigName
      - EndpointConfigArn
      - CreationTime
    properties:
      EndpointConfigName:
        $ref: '#/definitions/EndpointConfigName'
        description: The name of the endpoint configuration.
      EndpointConfigArn:
        $ref: '#/definitions/EndpointConfigArn'
        description: The Amazon Resource Name (ARN) of the endpoint configuration.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint configuration was created.
    description: Provides summary information for an endpoint configuration.
  EndpointConfigSummaryList:
    type: array
    items:
      $ref: '#/definitions/EndpointConfigSummary'
  EndpointNameContains:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    maxLength: 63
  EndpointSortKey:
    type: string
    enum:
      - Name
      - CreationTime
      - Status
  EndpointSummary:
    type: object
    required:
      - EndpointName
      - EndpointArn
      - CreationTime
      - LastModifiedTime
      - EndpointStatus
    properties:
      EndpointName:
        $ref: '#/definitions/EndpointName'
        description: The name of the endpoint.
      EndpointArn:
        $ref: '#/definitions/EndpointArn'
        description: The Amazon Resource Name (ARN) of the endpoint.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint was created.
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the endpoint was last modified.
      EndpointStatus:
        $ref: '#/definitions/EndpointStatus'
        description: '<p>The status of the endpoint.</p> <ul> <li> <p> <code>OutOfService</code>: Endpoint is not available to take incoming requests.</p> </li> <li> <p> <code>Creating</code>: <a>CreateEndpoint</a> is executing.</p> </li> <li> <p> <code>Updating</code>: <a>UpdateEndpoint</a> or <a>UpdateEndpointWeightsAndCapacities</a> is executing.</p> </li> <li> <p> <code>SystemUpdating</code>: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This mainenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count.</p> </li> <li> <p> <code>RollingBack</code>: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an <code>InService</code> status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an <a>UpdateEndpointWeightsAndCapacities</a> call or when the <a>UpdateEndpointWeightsAndCapacities</a> operation is called explicitly.</p> </li> <li> <p> <code>InService</code>: Endpoint is available to process incoming requests.</p> </li> <li> <p> <code>Deleting</code>: <a>DeleteEndpoint</a> is executing.</p> </li> <li> <p> <code>Failed</code>: Endpoint could not be created, updated, or re-scaled. Use <a>DescribeEndpointOutput$FailureReason</a> for information about the failure. <a>DeleteEndpoint</a> is the only operation that can be performed on a failed endpoint.</p> </li> </ul> <p>To get a list of endpoints with a specified status, use the <a>ListEndpointsInput$StatusEquals</a> filter.</p>'
    description: Provides summary information for an endpoint.
  EndpointSummaryList:
    type: array
    items:
      $ref: '#/definitions/EndpointSummary'
  EnvironmentKey:
    type: string
    pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
    maxLength: 1024
  EnvironmentValue:
    type: string
    maxLength: 1024
  ResourcePropertyName:
    type: string
    minLength: 1
    maxLength: 255
  Operator:
    type: string
    enum:
      - Equals
      - NotEquals
      - GreaterThan
      - GreaterThanOrEqualTo
      - LessThan
      - LessThanOrEqualTo
      - Contains
  FilterValue:
    type: string
    minLength: 1
    maxLength: 1024
  Filter:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/ResourcePropertyName'
        description: 'A property name. For example, <code>TrainingJobName</code>. For the list of valid property names returned in a search result for each supported resource, see <a>TrainingJob</a> properties. You must specify a valid property name for the resource.'
      Operator:
        $ref: '#/definitions/Operator'
        description: '<p>A Boolean binary operator that is used to evaluate the filter. The operator field contains one of the following values:</p> <dl> <dt>Equals</dt> <dd> <p>The specified resource in <code>Name</code> equals the specified <code>Value</code>.</p> </dd> <dt>NotEquals</dt> <dd> <p>The specified resource in <code>Name</code> does not equal the specified <code>Value</code>.</p> </dd> <dt>GreaterThan</dt> <dd> <p>The specified resource in <code>Name</code> is greater than the specified <code>Value</code>. Not supported for text-based properties.</p> </dd> <dt>GreaterThanOrEqualTo</dt> <dd> <p>The specified resource in <code>Name</code> is greater than or equal to the specified <code>Value</code>. Not supported for text-based properties.</p> </dd> <dt>LessThan</dt> <dd> <p>The specified resource in <code>Name</code> is less than the specified <code>Value</code>. Not supported for text-based properties.</p> </dd> <dt>LessThanOrEqualTo</dt> <dd> <p>The specified resource in <code>Name</code> is less than or equal to the specified <code>Value</code>. Not supported for text-based properties.</p> </dd> <dt>Contains</dt> <dd> <p>Only supported for text-based properties. The word-list of the property contains the specified <code>Value</code>.</p> </dd> </dl> <p>If you have specified a filter <code>Value</code>, the default is <code>Equals</code>.</p>'
      Value:
        $ref: '#/definitions/FilterValue'
        description: 'A value used with <code>Resource</code> and <code>Operator</code> to determine if objects satisfy the filter''s condition. For numerical properties, <code>Value</code> must be an integer or floating-point decimal. For timestamp properties, <code>Value</code> must be an ISO 8601 date-time string of the following format: <code>YYYY-mm-dd''T''HH:MM:SS</code>.'
    description: '<p>A conditional statement for a search expression that includes a Boolean operator, a resource property, and a value.</p> <p>If you don''t specify an <code>Operator</code> and a <code>Value</code>, the filter searches for only the specified property. For example, defining a <code>Filter</code> for the <code>FailureReason</code> for the <code>TrainingJob</code> <code>Resource</code> searches for training job objects that have a value in the <code>FailureReason</code> field.</p> <p>If you specify a <code>Value</code>, but not an <code>Operator</code>, Amazon SageMaker uses the equals operator as the default.</p> <p>In search, there are several property types:</p> <dl> <dt>Metrics</dt> <dd> <p>To define a metric filter, enter a value using the form <code>"Metrics.&lt;name&gt;"</code>, where <code>&lt;name&gt;</code> is a metric name. For example, the following filter searches for training jobs with an <code>"accuracy"</code> metric greater than <code>"0.9"</code>:</p> <p> <code>{</code> </p> <p> <code>"Name": "Metrics.accuracy",</code> </p> <p> <code>"Operator": "GREATER_THAN",</code> </p> <p> <code>"Value": "0.9"</code> </p> <p> <code>}</code> </p> </dd> <dt>HyperParameters</dt> <dd> <p>To define a hyperparameter filter, enter a value with the form <code>"HyperParameters.&lt;name&gt;"</code>. Decimal hyperparameter values are treated as a decimal in a comparison if the specified <code>Value</code> is also a decimal value. If the specified <code>Value</code> is an integer, the decimal hyperparameter values are treated as integers. For example, the following filter is satisfied by training jobs with a <code>"learning_rate"</code> hyperparameter that is less than <code>"0.5"</code>:</p> <p> <code> {</code> </p> <p> <code> "Name": "HyperParameters.learning_rate",</code> </p> <p> <code> "Operator": "LESS_THAN",</code> </p> <p> <code> "Value": "0.5"</code> </p> <p> <code> }</code> </p> </dd> <dt>Tags</dt> <dd> <p>To define a tag filter, enter a value with the form <code>"Tags.&lt;key&gt;"</code>.</p> </dd> </dl>'
  FilterList:
    type: array
    items:
      $ref: '#/definitions/Filter'
    minItems: 1
    maxItems: 20
  HyperParameterTuningJobObjectiveType:
    type: string
    enum:
      - Maximize
      - Minimize
  MetricName:
    type: string
    minLength: 1
    maxLength: 255
  MetricValue:
    type: number
    format: float
  FinalHyperParameterTuningJobObjectiveMetric:
    type: object
    required:
      - MetricName
      - Value
    properties:
      Type:
        $ref: '#/definitions/HyperParameterTuningJobObjectiveType'
        description: Whether to minimize or maximize the objective metric. Valid values are Minimize and Maximize.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the objective metric.
      Value:
        $ref: '#/definitions/MetricValue'
        description: The value of the objective metric.
    description: Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the <code>HyperParameterTuningJobObjective</code> parameter of <a>HyperParameterTuningJobConfig</a>.
  MetricData:
    type: object
    properties:
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric.
      Value:
        $ref: '#/definitions/Float'
        description: The value of the metric.
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the algorithm emitted the metric.
    description: 'The name, value, and date and time of a metric that was emitted to Amazon CloudWatch.'
  Float:
    type: number
    format: float
  Framework:
    type: string
    enum:
      - TENSORFLOW
      - MXNET
      - ONNX
      - PYTORCH
      - XGBOOST
  ResourceType:
    type: string
    enum:
      - TrainingJob
  SuggestionQuery:
    type: object
    properties:
      PropertyNameQuery:
        $ref: '#/definitions/PropertyNameQuery'
        description: A type of <code>SuggestionQuery</code>. Defines a property name hint. Only property names that match the specified hint are included in the response.
    description: Limits the property names that are included in the response.
  PropertyNameSuggestionList:
    type: array
    items:
      $ref: '#/definitions/PropertyNameSuggestion'
  GitConfigUrl:
    type: string
    pattern: '^https://([^/]+)/?(.*)$'
  SecretArn:
    type: string
    pattern: 'arn:aws[a-z\-]*:secretsmanager:[a-z0-9\-]*:[0-9]{12}:secret:.*'
    minLength: 1
    maxLength: 2048
  GitConfigForUpdate:
    type: object
    properties:
      SecretArn:
        $ref: '#/definitions/SecretArn'
        description: '<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
    description: Specifies configuration details for a Git repository when the repository is updated.
  UiConfig:
    type: object
    required:
      - UiTemplateS3Uri
    properties:
      UiTemplateS3Uri:
        $ref: '#/definitions/S3Uri'
        description: 'The Amazon S3 bucket location of the UI template. For more information about the contents of a UI template, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sms-custom-templates-step2.html"> Creating Your Custom Labeling Task Template</a>.'
    description: 'Provided configuration information for the worker UI for a labeling job. '
  TaskKeywords:
    type: array
    items:
      $ref: '#/definitions/TaskKeyword'
    minItems: 1
    maxItems: 5
  TaskTitle:
    type: string
    pattern: '^[\t\n\r -\uD7FF\uE000-\uFFFD]*$'
    minLength: 1
    maxLength: 128
  TaskDescription:
    type: string
    minLength: 1
    maxLength: 255
  NumberOfHumanWorkersPerDataObject:
    type: integer
    minimum: 1
    maximum: 9
  TaskTimeLimitInSeconds:
    type: integer
    minimum: 1
    maximum: 3600
  TaskAvailabilityLifetimeInSeconds:
    type: integer
    minimum: 1
    maximum: 345600
  MaxConcurrentTaskCount:
    type: integer
    minimum: 1
    maximum: 1000
  PublicWorkforceTaskPrice:
    type: object
    properties:
      AmountInUsd:
        $ref: '#/definitions/USD'
        description: Defines the amount of money paid to a worker in United States dollars.
    description: '<p>Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. </p> <p>Use one of the following prices for bounding box tasks. Prices are in US dollars.</p> <ul> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for image classification, text classification, and custom tasks. Prices are in US dollars.</p> <ul> <li> <p>0.012</p> </li> <li> <p>0.024</p> </li> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for semantic segmentation tasks. Prices are in US dollars.</p> <ul> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul>'
  HyperParameterAlgorithmSpecification:
    type: object
    required:
      - TrainingInputMode
    properties:
      TrainingImage:
        $ref: '#/definitions/AlgorithmImage'
        description: ' The registry path of the Docker image that contains the training algorithm. For information about Docker registry paths for built-in algorithms, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Algorithms Provided by Amazon SageMaker: Common Parameters</a>.'
      TrainingInputMode:
        $ref: '#/definitions/TrainingInputMode'
        description: '<p>The input mode that the algorithm supports: File or Pipe. In File input mode, Amazon SageMaker downloads the training data from Amazon S3 to the storage volume that is attached to the training instance and mounts the directory to the Docker volume for the training container. In Pipe input mode, Amazon SageMaker streams data directly from Amazon S3 to the container. </p> <p>If you specify File mode, make sure that you provision the storage volume that is attached to the training instance with enough capacity to accommodate the training data downloaded from Amazon S3, the model artifacts, and intermediate information.</p> <p/> <p>For more information about input modes, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p>'
      AlgorithmName:
        $ref: '#/definitions/ArnOrName'
        description: 'The name of the resource algorithm to use for the hyperparameter tuning job. If you specify a value for this parameter, do not specify a value for <code>TrainingImage</code>.'
      MetricDefinitions:
        $ref: '#/definitions/MetricDefinitionList'
        description: An array of <a>MetricDefinition</a> objects that specify the metrics that the algorithm emits.
    description: Specifies which training algorithm to use for training jobs that a hyperparameter tuning job launches and the metrics to monitor.
  ParameterName:
    type: string
    maxLength: 256
  ParameterType:
    type: string
    enum:
      - Integer
      - Continuous
      - Categorical
      - FreeText
  ParameterRange:
    type: object
    properties:
      IntegerParameterRangeSpecification:
        $ref: '#/definitions/IntegerParameterRangeSpecification'
        description: A <code>IntegerParameterRangeSpecification</code> object that defines the possible values for an integer hyperparameter.
      ContinuousParameterRangeSpecification:
        $ref: '#/definitions/ContinuousParameterRangeSpecification'
        description: A <code>ContinuousParameterRangeSpecification</code> object that defines the possible values for a continuous hyperparameter.
      CategoricalParameterRangeSpecification:
        $ref: '#/definitions/CategoricalParameterRangeSpecification'
        description: A <code>CategoricalParameterRangeSpecification</code> object that defines the possible values for a categorical hyperparameter.
    description: 'Defines the possible values for categorical, continuous, and integer hyperparameters to be used by an algorithm.'
  HyperParameterSpecification:
    type: object
    required:
      - Name
      - Type
    properties:
      Name:
        $ref: '#/definitions/ParameterName'
        description: The name of this hyperparameter. The name must be unique.
      Description:
        $ref: '#/definitions/EntityDescription'
        description: A brief description of the hyperparameter.
      Type:
        $ref: '#/definitions/ParameterType'
        description: 'The type of this hyperparameter. The valid types are <code>Integer</code>, <code>Continuous</code>, <code>Categorical</code>, and <code>FreeText</code>.'
      Range:
        $ref: '#/definitions/ParameterRange'
        description: The allowed range for this hyperparameter.
      IsTunable:
        $ref: '#/definitions/Boolean'
        description: Indicates whether this hyperparameter is tunable in a hyperparameter tuning job.
      IsRequired:
        $ref: '#/definitions/Boolean'
        description: Indicates whether this hyperparameter is required.
      DefaultValue:
        $ref: '#/definitions/ParameterValue'
        description: 'The default value for this hyperparameter. If a default value is specified, a hyperparameter cannot be required.'
    description: Defines a hyperparameter to be used by an algorithm.
  HyperParameterSpecifications:
    type: array
    items:
      $ref: '#/definitions/HyperParameterSpecification'
    minItems: 0
    maxItems: 100
  HyperParameterTrainingJobSummaries:
    type: array
    items:
      $ref: '#/definitions/HyperParameterTrainingJobSummary'
  ObjectiveStatus:
    type: string
    enum:
      - Succeeded
      - Pending
      - Failed
  HyperParameterTuningJobStrategyType:
    type: string
    enum:
      - Bayesian
    description: 'The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is <code>Bayesian</code>.'
  HyperParameterTuningJobObjective:
    type: object
    required:
      - Type
      - MetricName
    properties:
      Type:
        $ref: '#/definitions/HyperParameterTuningJobObjectiveType'
        description: Whether to minimize or maximize the objective metric.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric to use for the objective metric.
    description: 'Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the <code>Type</code> parameter.'
  ResourceLimits:
    type: object
    required:
      - MaxNumberOfTrainingJobs
      - MaxParallelTrainingJobs
    properties:
      MaxNumberOfTrainingJobs:
        $ref: '#/definitions/MaxNumberOfTrainingJobs'
        description: The maximum number of training jobs that a hyperparameter tuning job can launch.
      MaxParallelTrainingJobs:
        $ref: '#/definitions/MaxParallelTrainingJobs'
        description: The maximum number of concurrent training jobs that a hyperparameter tuning job can launch.
    description: Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch.
  ParameterRanges:
    type: object
    properties:
      IntegerParameterRanges:
        $ref: '#/definitions/IntegerParameterRanges'
        description: The array of <a>IntegerParameterRange</a> objects that specify ranges of integer hyperparameters that a hyperparameter tuning job searches.
      ContinuousParameterRanges:
        $ref: '#/definitions/ContinuousParameterRanges'
        description: The array of <a>ContinuousParameterRange</a> objects that specify ranges of continuous hyperparameters that a hyperparameter tuning job searches.
      CategoricalParameterRanges:
        $ref: '#/definitions/CategoricalParameterRanges'
        description: The array of <a>CategoricalParameterRange</a> objects that specify ranges of categorical hyperparameters that a hyperparameter tuning job searches.
    description: '<p>Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job.</p> <note> <p>You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit.</p> </note>'
  TrainingJobEarlyStoppingType:
    type: string
    enum:
      - 'Off'
      - Auto
  HyperParameterTuningJobObjectives:
    type: array
    items:
      $ref: '#/definitions/HyperParameterTuningJobObjective'
  HyperParameterTuningJobSortByOptions:
    type: string
    enum:
      - Name
      - Status
      - CreationTime
  HyperParameterTuningJobSummary:
    type: object
    required:
      - HyperParameterTuningJobName
      - HyperParameterTuningJobArn
      - HyperParameterTuningJobStatus
      - Strategy
      - CreationTime
      - TrainingJobStatusCounters
      - ObjectiveStatusCounters
    properties:
      HyperParameterTuningJobName:
        $ref: '#/definitions/HyperParameterTuningJobName'
        description: The name of the tuning job.
      HyperParameterTuningJobArn:
        $ref: '#/definitions/HyperParameterTuningJobArn'
        description: The Amazon Resource Name (ARN) of the tuning job.
      HyperParameterTuningJobStatus:
        $ref: '#/definitions/HyperParameterTuningJobStatus'
        description: The status of the tuning job.
      Strategy:
        $ref: '#/definitions/HyperParameterTuningJobStrategyType'
        description: 'Specifies the search strategy hyperparameter tuning uses to choose which hyperparameters to use for each iteration. Currently, the only valid value is Bayesian.'
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the tuning job was created.
      HyperParameterTuningEndTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the tuning job ended.
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the tuning job was modified.
      TrainingJobStatusCounters:
        $ref: '#/definitions/TrainingJobStatusCounters'
        description: 'The <a>TrainingJobStatusCounters</a> object that specifies the numbers of training jobs, categorized by status, that this tuning job launched.'
      ObjectiveStatusCounters:
        $ref: '#/definitions/ObjectiveStatusCounters'
        description: 'The <a>ObjectiveStatusCounters</a> object that specifies the numbers of training jobs, categorized by objective metric status, that this tuning job launched.'
      ResourceLimits:
        $ref: '#/definitions/ResourceLimits'
        description: The <a>ResourceLimits</a> object that specifies the maximum number of training jobs and parallel training jobs allowed for this tuning job.
    description: Provides summary information about a hyperparameter tuning job.
  HyperParameterTuningJobSummaries:
    type: array
    items:
      $ref: '#/definitions/HyperParameterTuningJobSummary'
  ParentHyperParameterTuningJobs:
    type: array
    items:
      $ref: '#/definitions/ParentHyperParameterTuningJob'
    minItems: 1
    maxItems: 5
  HyperParameterTuningJobWarmStartType:
    type: string
    enum:
      - IdenticalDataAndAlgorithm
      - TransferLearning
  ImageDigest:
    type: string
    pattern: '^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$'
    maxLength: 72
  ModelPackageContainerDefinitionList:
    type: array
    items:
      $ref: '#/definitions/ModelPackageContainerDefinition'
    minItems: 1
    maxItems: 1
  TransformInstanceTypes:
    type: array
    items:
      $ref: '#/definitions/TransformInstanceType'
    minItems: 1
  RealtimeInferenceInstanceTypes:
    type: array
    items:
      $ref: '#/definitions/ProductionVariantInstanceType'
  ResponseMIMETypes:
    type: array
    items:
      $ref: '#/definitions/ResponseMIMEType'
  IntegerParameterRange:
    type: object
    required:
      - Name
      - MinValue
      - MaxValue
    properties:
      Name:
        $ref: '#/definitions/ParameterKey'
        description: The name of the hyperparameter to search.
      MinValue:
        $ref: '#/definitions/ParameterValue'
        description: The minimum value of the hyperparameter to search.
      MaxValue:
        $ref: '#/definitions/ParameterValue'
        description: The maximum value of the hyperparameter to search.
    description: 'For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches.'
  IntegerParameterRangeSpecification:
    type: object
    required:
      - MinValue
      - MaxValue
    properties:
      MinValue:
        $ref: '#/definitions/ParameterValue'
        description: The minimum integer value allowed.
      MaxValue:
        $ref: '#/definitions/ParameterValue'
        description: The maximum integer value allowed.
    description: Defines the possible values for an integer hyperparameter.
  IntegerParameterRanges:
    type: array
    items:
      $ref: '#/definitions/IntegerParameterRange'
    minItems: 0
    maxItems: 20
  JobReferenceCodeContains:
    type: string
    minLength: 1
    maxLength: 255
  LabelCounter:
    type: integer
    minimum: 0
  LabelCountersForWorkteam:
    type: object
    properties:
      HumanLabeled:
        $ref: '#/definitions/LabelCounter'
        description: The total number of data objects labeled by a human worker.
      PendingHuman:
        $ref: '#/definitions/LabelCounter'
        description: The total number of data objects that need to be labeled by a human worker.
      Total:
        $ref: '#/definitions/LabelCounter'
        description: The total number of tasks in the labeling job.
    description: Provides counts for human-labeled tasks in the labeling job.
  LabelingJobAlgorithmSpecificationArn:
    type: string
    maxLength: 2048
  LabelingJobResourceConfig:
    type: object
    properties:
      VolumeKmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: 'The AWS Key Management Service key ID for the key used to encrypt the output data, if any.'
    description: Provides configuration information for labeling jobs.
  LabelingJobDataAttributes:
    type: object
    properties:
      ContentClassifiers:
        $ref: '#/definitions/ContentClassifiers'
        description: Declares that your content is free of personally identifiable information or adult content. Amazon SageMaker may restrict the Amazon Mechanical Turk workers that can view your task based on this information.
    description: Attributes of the data specified by the customer. Use these to describe the data to be labeled.
  LabelingJobS3DataSource:
    type: object
    required:
      - ManifestS3Uri
    properties:
      ManifestS3Uri:
        $ref: '#/definitions/S3Uri'
        description: The Amazon S3 location of the manifest file that describes the input data objects.
    description: The Amazon S3 location of the input data objects.
  LabelingJobDataSource:
    type: object
    required:
      - S3DataSource
    properties:
      S3DataSource:
        $ref: '#/definitions/LabelingJobS3DataSource'
        description: The Amazon S3 location of the input data objects.
    description: Provides information about the location of input data.
  LabelingJobForWorkteamSummary:
    type: object
    required:
      - JobReferenceCode
      - WorkRequesterAccountId
      - CreationTime
    properties:
      LabelingJobName:
        $ref: '#/definitions/LabelingJobName'
        description: The name of the labeling job that the work team is assigned to.
      JobReferenceCode:
        $ref: '#/definitions/JobReferenceCode'
        description: A unique identifier for a labeling job. You can use this to refer to a specific labeling job.
      WorkRequesterAccountId:
        $ref: '#/definitions/AccountId'
        description: <p/>
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the labeling job was created.
      LabelCounters:
        $ref: '#/definitions/LabelCountersForWorkteam'
        description: Provides information about the progress of a labeling job.
    description: Provides summary information for a work team.
  LabelingJobForWorkteamSummaryList:
    type: array
    items:
      $ref: '#/definitions/LabelingJobForWorkteamSummary'
  MaxHumanLabeledObjectCount:
    type: integer
    minimum: 1
  MaxPercentageOfInputDatasetLabeled:
    type: integer
    minimum: 1
    maximum: 100
  LabelingJobSummary:
    type: object
    required:
      - LabelingJobName
      - LabelingJobArn
      - CreationTime
      - LastModifiedTime
      - LabelingJobStatus
      - LabelCounters
      - WorkteamArn
      - PreHumanTaskLambdaArn
    properties:
      LabelingJobName:
        $ref: '#/definitions/LabelingJobName'
        description: The name of the labeling job.
      LabelingJobArn:
        $ref: '#/definitions/LabelingJobArn'
        description: The Amazon Resource Name (ARN) assigned to the labeling job when it was created.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the job was created (timestamp).
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the job was last modified (timestamp).
      LabelingJobStatus:
        $ref: '#/definitions/LabelingJobStatus'
        description: 'The current status of the labeling job. '
      LabelCounters:
        $ref: '#/definitions/LabelCounters'
        description: Counts showing the progress of the labeling job.
      WorkteamArn:
        $ref: '#/definitions/WorkteamArn'
        description: The Amazon Resource Name (ARN) of the work team assigned to the job.
      PreHumanTaskLambdaArn:
        $ref: '#/definitions/LambdaFunctionArn'
        description: The Amazon Resource Name (ARN) of a Lambda function. The function is run before each data object is sent to a worker.
      AnnotationConsolidationLambdaArn:
        $ref: '#/definitions/LambdaFunctionArn'
        description: 'The Amazon Resource Name (ARN) of the Lambda function used to consolidate the annotations from individual workers into a label for a data object. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/sms-annotation-consolidation.html">Annotation Consolidation</a>.'
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the <code>LabelingJobStatus</code> field is <code>Failed</code>, this field contains a description of the error.'
      LabelingJobOutput:
        $ref: '#/definitions/LabelingJobOutput'
        description: The location of the output produced by the labeling job.
      InputConfig:
        $ref: '#/definitions/LabelingJobInputConfig'
        description: Input configuration for the labeling job.
    description: Provides summary information about a labeling job.
  LabelingJobSummaryList:
    type: array
    items:
      $ref: '#/definitions/LabelingJobSummary'
  MaxResults:
    type: integer
    minimum: 1
    maximum: 100
  NameContains:
    type: string
    pattern: '[a-zA-Z0-9\-]+'
    maxLength: 63
  NextToken:
    type: string
    maxLength: 8192
  SortOrder:
    type: string
    enum:
      - Ascending
      - Descending
  ListCompilationJobsSortBy:
    type: string
    enum:
      - Name
      - CreationTime
      - Status
  OrderKey:
    type: string
    enum:
      - Ascending
      - Descending
  PaginationToken:
    type: string
    maxLength: 8192
  ListLabelingJobsForWorkteamSortByOptions:
    type: string
    enum:
      - CreationTime
  SortBy:
    type: string
    enum:
      - Name
      - CreationTime
      - Status
  ModelPackageSortBy:
    type: string
    enum:
      - Name
      - CreationTime
  ModelPackageSummaryList:
    type: array
    items:
      $ref: '#/definitions/ModelPackageSummary'
  ModelSortKey:
    type: string
    enum:
      - Name
      - CreationTime
  ModelNameContains:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    maxLength: 63
  ModelSummaryList:
    type: array
    items:
      $ref: '#/definitions/ModelSummary'
  NotebookInstanceLifecycleConfigSortKey:
    type: string
    enum:
      - Name
      - CreationTime
      - LastModifiedTime
  NotebookInstanceLifecycleConfigSortOrder:
    type: string
    enum:
      - Ascending
      - Descending
  NotebookInstanceLifecycleConfigNameContains:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    maxLength: 63
  NotebookInstanceLifecycleConfigSummaryList:
    type: array
    items:
      $ref: '#/definitions/NotebookInstanceLifecycleConfigSummary'
  NotebookInstanceSortKey:
    type: string
    enum:
      - Name
      - CreationTime
      - Status
  NotebookInstanceSortOrder:
    type: string
    enum:
      - Ascending
      - Descending
  NotebookInstanceNameContains:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    maxLength: 63
  NotebookInstanceSummaryList:
    type: array
    items:
      $ref: '#/definitions/NotebookInstanceSummary'
  SubscribedWorkteams:
    type: array
    items:
      $ref: '#/definitions/SubscribedWorkteam'
  ListTagsMaxResults:
    type: integer
    minimum: 50
  TrainingJobSortByOptions:
    type: string
    enum:
      - Name
      - CreationTime
      - Status
      - FinalObjectiveMetricValue
  TrainingJobSummaries:
    type: array
    items:
      $ref: '#/definitions/TrainingJobSummary'
  TransformJobSummaries:
    type: array
    items:
      $ref: '#/definitions/TransformJobSummary'
  ListWorkteamsSortByOptions:
    type: string
    enum:
      - Name
      - CreateDate
  Workteams:
    type: array
    items:
      $ref: '#/definitions/Workteam'
  MaxNumberOfTrainingJobs:
    type: integer
    minimum: 1
  MaxParallelTrainingJobs:
    type: integer
    minimum: 1
  MaxRuntimeInSeconds:
    type: integer
    minimum: 1
  MemberDefinition:
    type: object
    properties:
      CognitoMemberDefinition:
        $ref: '#/definitions/CognitoMemberDefinition'
        description: The Amazon Cognito user group that is part of the work team.
    description: Defines the Amazon Cognito user group that is part of a work team.
  MetricRegex:
    type: string
    minLength: 1
    maxLength: 500
  MetricDefinition:
    type: object
    required:
      - Name
      - Regex
    properties:
      Name:
        $ref: '#/definitions/MetricName'
        description: The name of the metric.
      Regex:
        $ref: '#/definitions/MetricRegex'
        description: 'A regular expression that searches the output of a training job and gets the value of the metric. For more information about using regular expressions to define metrics, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html">Defining Objective Metrics</a>.'
    description: Specifies a metric that the training algorithm writes to <code>stderr</code> or <code>stdout</code>. Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job.
  ModelPackageContainerDefinition:
    type: object
    required:
      - Image
    properties:
      ContainerHostname:
        $ref: '#/definitions/ContainerHostname'
        description: The DNS host name for the Docker container.
      Image:
        $ref: '#/definitions/Image'
        description: '<p>The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.</p> <p>If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>.</p>'
      ImageDigest:
        $ref: '#/definitions/ImageDigest'
        description: An MD5 hash of the training algorithm that identifies the Docker image used for training.
      ModelDataUrl:
        $ref: '#/definitions/Url'
        description: 'The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single <code>gzip</code> compressed tar archive (<code>.tar.gz</code> suffix).'
      ProductId:
        $ref: '#/definitions/ProductId'
        description: The AWS Marketplace product ID of the model package.
    description: Describes the Docker container for the model package.
  ModelPackageStatusItemList:
    type: array
    items:
      $ref: '#/definitions/ModelPackageStatusItem'
  ModelPackageStatusItem:
    type: object
    required:
      - Name
      - Status
    properties:
      Name:
        $ref: '#/definitions/EntityName'
        description: The name of the model package for which the overall status is being reported.
      Status:
        $ref: '#/definitions/DetailedModelPackageStatus'
        description: The current status.
      FailureReason:
        $ref: '#/definitions/String'
        description: 'if the overall status is <code>Failed</code>, the reason for the failure.'
    description: Represents the overall status of a model package.
  ModelPackageSummary:
    type: object
    required:
      - ModelPackageName
      - ModelPackageArn
      - CreationTime
      - ModelPackageStatus
    properties:
      ModelPackageName:
        $ref: '#/definitions/EntityName'
        description: The name of the model package.
      ModelPackageArn:
        $ref: '#/definitions/ModelPackageArn'
        description: The Amazon Resource Name (ARN) of the model package.
      ModelPackageDescription:
        $ref: '#/definitions/EntityDescription'
        description: A brief description of the model package.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp that shows when the model package was created.
      ModelPackageStatus:
        $ref: '#/definitions/ModelPackageStatus'
        description: The overall status of the model package.
    description: Provides summary information about a model package.
  ModelPackageValidationProfile:
    type: object
    required:
      - ProfileName
      - TransformJobDefinition
    properties:
      ProfileName:
        $ref: '#/definitions/EntityName'
        description: The name of the profile for the model package.
      TransformJobDefinition:
        $ref: '#/definitions/TransformJobDefinition'
        description: The <code>TransformJobDefinition</code> object that describes the transform job used for the validation of the model package.
    description: '<p>Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.</p> <p>The data provided in the validation profile is made available to your buyers on AWS Marketplace.</p>'
  ModelPackageValidationProfiles:
    type: array
    items:
      $ref: '#/definitions/ModelPackageValidationProfile'
    minItems: 1
    maxItems: 1
  ModelSummary:
    type: object
    required:
      - ModelName
      - ModelArn
      - CreationTime
    properties:
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model that you want a summary for.
      ModelArn:
        $ref: '#/definitions/ModelArn'
        description: The Amazon Resource Name (ARN) of the model.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when the model was created.
    description: Provides summary information about a model.
  NestedFilters:
    type: object
    required:
      - NestedPropertyName
      - Filters
    properties:
      NestedPropertyName:
        $ref: '#/definitions/ResourcePropertyName'
        description: 'The name of the property to use in the nested filters. The value must match a listed property name, such as <code>InputDataConfig</code>.'
      Filters:
        $ref: '#/definitions/FilterList'
        description: 'A list of filters. Each filter acts on a property. Filters must contain at least one <code>Filters</code> value. For example, a <code>NestedFilters</code> call might include a filter on the <code>PropertyName</code> parameter of the <code>InputDataConfig</code> property: <code>InputDataConfig.DataSource.S3DataSource.S3Uri</code>.'
    description: '<p>Defines a list of <code>NestedFilters</code> objects. To satisfy the conditions specified in the <code>NestedFilters</code> call, a resource must satisfy the conditions of all of the filters.</p> <p>For example, you could define a <code>NestedFilters</code> using the training job''s <code>InputDataConfig</code> property to filter on <code>Channel</code> objects. </p> <p>A <code>NestedFilters</code> object contains multiple filters. For example, to find all training jobs whose name contains <code>train</code> and that have <code>cat/data</code> in their <code>S3Uri</code> (specified in <code>InputDataConfig</code>), you need to create a <code>NestedFilters</code> object that specifies the <code>InputDataConfig</code> property with the following <code>Filter</code> objects:</p> <ul> <li> <p> <code>''{Name:"InputDataConfig.ChannelName", "Operator":"EQUALS", "Value":"train"}'',</code> </p> </li> <li> <p> <code>''{Name:"InputDataConfig.DataSource.S3DataSource.S3Uri", "Operator":"CONTAINS", "Value":"cat/data"}''</code> </p> </li> </ul>'
  NestedFiltersList:
    type: array
    items:
      $ref: '#/definitions/NestedFilters'
    minItems: 1
    maxItems: 20
  NotebookInstanceAcceleratorType:
    type: string
    enum:
      - ml.eia1.medium
      - ml.eia1.large
      - ml.eia1.xlarge
  NotebookInstanceLifecycleConfigContent:
    type: string
    minLength: 1
    maxLength: 16384
  NotebookInstanceLifecycleHook:
    type: object
    properties:
      Content:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigContent'
        description: A base64-encoded string that contains a shell script for a notebook instance lifecycle configuration.
    description: '<p>Contains the notebook instance lifecycle configuration script.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
  NotebookInstanceLifecycleConfigSummary:
    type: object
    required:
      - NotebookInstanceLifecycleConfigName
      - NotebookInstanceLifecycleConfigArn
    properties:
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: The name of the lifecycle configuration.
      NotebookInstanceLifecycleConfigArn:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigArn'
        description: The Amazon Resource Name (ARN) of the lifecycle configuration.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp that tells when the lifecycle configuration was created.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: A timestamp that tells when the lifecycle configuration was last modified.
    description: Provides a summary of a notebook instance lifecycle configuration.
  NotebookInstanceSummary:
    type: object
    required:
      - NotebookInstanceName
      - NotebookInstanceArn
    properties:
      NotebookInstanceName:
        $ref: '#/definitions/NotebookInstanceName'
        description: The name of the notebook instance that you want a summary for.
      NotebookInstanceArn:
        $ref: '#/definitions/NotebookInstanceArn'
        description: The Amazon Resource Name (ARN) of the notebook instance.
      NotebookInstanceStatus:
        $ref: '#/definitions/NotebookInstanceStatus'
        description: The status of the notebook instance.
      Url:
        $ref: '#/definitions/NotebookInstanceUrl'
        description: 'The URL that you use to connect to the Jupyter instance running in your notebook instance. '
      InstanceType:
        $ref: '#/definitions/InstanceType'
        description: The type of ML compute instance that the notebook instance is running on.
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: A timestamp that shows when the notebook instance was created.
      LastModifiedTime:
        $ref: '#/definitions/LastModifiedTime'
        description: A timestamp that shows when the notebook instance was last modified.
      NotebookInstanceLifecycleConfigName:
        $ref: '#/definitions/NotebookInstanceLifecycleConfigName'
        description: '<p>The name of a notebook instance lifecycle configuration associated with this notebook instance.</p> <p>For information about notebook instance lifestyle configurations, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      DefaultCodeRepository:
        $ref: '#/definitions/CodeRepositoryNameOrUrl'
        description: 'The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
      AdditionalCodeRepositories:
        $ref: '#/definitions/AdditionalCodeRepositoryNamesOrUrls'
        description: 'An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
    description: Provides summary information for an Amazon SageMaker notebook instance.
  ObjectiveStatusCounter:
    type: integer
    minimum: 0
  ParentHyperParameterTuningJob:
    type: object
    properties:
      HyperParameterTuningJobName:
        $ref: '#/definitions/HyperParameterTuningJobName'
        description: The name of the hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.
    description: A previously completed or stopped hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.
  ProductListings:
    type: array
    items:
      $ref: '#/definitions/String'
  ProductionVariantInstanceType:
    type: string
    enum:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.m5.large
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.c4.large
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
      - ml.c5.large
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
  ProductionVariantAcceleratorType:
    type: string
    enum:
      - ml.eia1.medium
      - ml.eia1.large
      - ml.eia1.xlarge
  ProductionVariant:
    type: object
    required:
      - VariantName
      - ModelName
      - InitialInstanceCount
      - InstanceType
    properties:
      VariantName:
        $ref: '#/definitions/VariantName'
        description: The name of the production variant.
      ModelName:
        $ref: '#/definitions/ModelName'
        description: The name of the model that you want to host. This is the name that you specified when creating the model.
      InitialInstanceCount:
        $ref: '#/definitions/TaskCount'
        description: Number of instances to launch initially.
      InstanceType:
        $ref: '#/definitions/ProductionVariantInstanceType'
        description: The ML compute instance type.
      InitialVariantWeight:
        $ref: '#/definitions/VariantWeight'
        description: 'Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. The traffic to a production variant is determined by the ratio of the <code>VariantWeight</code> to the sum of all <code>VariantWeight</code> values across all ProductionVariants. If unspecified, it defaults to 1.0. '
      AcceleratorType:
        $ref: '#/definitions/ProductionVariantAcceleratorType'
        description: 'The size of the Elastic Inference (EI) instance to use for the production variant. EI instances provide on-demand GPU computing for inference. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
    description: 'Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. '
  ProductionVariantSummary:
    type: object
    required:
      - VariantName
    properties:
      VariantName:
        $ref: '#/definitions/VariantName'
        description: The name of the variant.
      DeployedImages:
        $ref: '#/definitions/DeployedImages'
        description: An array of <code>DeployedImage</code> objects that specify the Amazon EC2 Container Registry paths of the inference images deployed on instances of this <code>ProductionVariant</code>.
      CurrentWeight:
        $ref: '#/definitions/VariantWeight'
        description: The weight associated with the variant.
      DesiredWeight:
        $ref: '#/definitions/VariantWeight'
        description: 'The requested weight, as specified in the <code>UpdateEndpointWeightsAndCapacities</code> request. '
      CurrentInstanceCount:
        $ref: '#/definitions/TaskCount'
        description: The number of instances associated with the variant.
      DesiredInstanceCount:
        $ref: '#/definitions/TaskCount'
        description: 'The number of instances requested in the <code>UpdateEndpointWeightsAndCapacities</code> request. '
    description: 'Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateEndpointWeightsAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values. '
  PropertyNameHint:
    type: string
    minLength: 0
    maxLength: 100
  PropertyNameQuery:
    type: object
    required:
      - PropertyNameHint
    properties:
      PropertyNameHint:
        $ref: '#/definitions/PropertyNameHint'
        description: 'Text that is part of a property''s name. The property names of hyperparameter, metric, and tag key names that begin with the specified text in the <code>PropertyNameHint</code>.'
    description: A type of <code>SuggestionQuery</code>. A suggestion query for retrieving property names that match the specified hint.
  PropertyNameSuggestion:
    type: object
    properties:
      PropertyName:
        $ref: '#/definitions/ResourcePropertyName'
        description: A suggested property name based on what you entered in the search textbox in the Amazon SageMaker console.
    description: A property name returned from a <code>GetSearchSuggestions</code> call that specifies a value in the <code>PropertyNameQuery</code> field.
  USD:
    type: object
    properties:
      Dollars:
        $ref: '#/definitions/Dollars'
        description: The whole number of dollars in the amount.
      Cents:
        $ref: '#/definitions/Cents'
        description: 'The fractional portion, in cents, of the amount. '
      TenthFractionsOfACent:
        $ref: '#/definitions/TenthFractionsOfACent'
        description: 'Fractions of a cent, in tenths.'
    description: Represents an amount of money in United States dollars/
  UiTemplate:
    type: object
    required:
      - Content
    properties:
      Content:
        $ref: '#/definitions/TemplateContent'
        description: The content of the Liquid template for the worker user interface.
    description: The Liquid template for the worker user interface.
  RenderableTask:
    type: object
    required:
      - Input
    properties:
      Input:
        $ref: '#/definitions/TaskInput'
        description: 'A JSON object that contains values for the variables defined in the template. It is made available to the template under the substitution variable <code>task.input</code>. For example, if you define a variable <code>task.input.text</code> in your template, you can supply the variable in the JSON object as <code>"text": "sample text"</code>.'
    description: Contains input values for a task.
  RenderingErrorList:
    type: array
    items:
      $ref: '#/definitions/RenderingError'
  TaskInput:
    type: string
    minLength: 2
    maxLength: 128000
  RenderingError:
    type: object
    required:
      - Code
      - Message
    properties:
      Code:
        $ref: '#/definitions/String'
        description: A unique identifier for a specific class of errors.
      Message:
        $ref: '#/definitions/String'
        description: A human-readable message describing the error.
    description: A description of an error that occurred while rendering the template.
  TrainingInstanceType:
    type: string
    enum:
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.m5.large
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
  TrainingInstanceCount:
    type: integer
    minimum: 1
  VolumeSizeInGB:
    type: integer
    minimum: 1
  ResponseMIMEType:
    type: string
    maxLength: 1024
  S3DataDistribution:
    type: string
    enum:
      - FullyReplicated
      - ShardedByS3Key
  S3DataType:
    type: string
    enum:
      - ManifestFile
      - S3Prefix
      - AugmentedManifestFile
  SearchExpressionList:
    type: array
    items:
      $ref: '#/definitions/SearchExpression'
    minItems: 1
    maxItems: 20
  SearchExpression:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/FilterList'
        description: A list of filter objects.
      NestedFilters:
        $ref: '#/definitions/NestedFiltersList'
        description: A list of nested filter objects.
      SubExpressions:
        $ref: '#/definitions/SearchExpressionList'
        description: A list of search expression objects.
      Operator:
        $ref: '#/definitions/BooleanOperator'
        description: 'A Boolean operator used to evaluate the search expression. If you want every conditional statement in all lists to be satisfied for the entire search expression to be true, specify <code>And</code>. If only a single conditional statement needs to be true for the entire search expression to be true, specify <code>Or</code>. The default value is <code>And</code>.'
    description: '<p>A multi-expression that searches for the specified resource or resources in a search. All resource objects that satisfy the expression''s condition are included in the search results. You must specify at least one subexpression, filter, or nested filter. A <code>SearchExpression</code> can contain up to twenty elements.</p> <p>A <code>SearchExpression</code> contains the following components:</p> <ul> <li> <p>A list of <code>Filter</code> objects. Each filter defines a simple Boolean expression comprised of a resource property name, Boolean operator, and value.</p> </li> <li> <p>A list of <code>NestedFilter</code> objects. Each nested filter defines a list of Boolean expressions using a list of resource properties. A nested filter is satisfied if a single object in the list satisfies all Boolean expressions.</p> </li> <li> <p>A list of <code>SearchExpression</code> objects. A search expression object can be nested in a list of search expression objects.</p> </li> <li> <p>A Boolean operator: <code>And</code> or <code>Or</code>.</p> </li> </ul>'
  TrainingJob:
    type: object
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: The name of the training job.
      TrainingJobArn:
        $ref: '#/definitions/TrainingJobArn'
        description: The Amazon Resource Name (ARN) of the training job.
      TuningJobArn:
        $ref: '#/definitions/HyperParameterTuningJobArn'
        description: The Amazon Resource Name (ARN) of the associated hyperparameter tuning job if the training job was launched by a hyperparameter tuning job.
      LabelingJobArn:
        $ref: '#/definitions/LabelingJobArn'
        description: The Amazon Resource Name (ARN) of the labeling job.
      ModelArtifacts:
        $ref: '#/definitions/ModelArtifacts'
        description: Information about the Amazon S3 location that is configured for storing model artifacts.
      TrainingJobStatus:
        $ref: '#/definitions/TrainingJobStatus'
        description: '<p>The status of the training job.</p> <p>Training job statuses are:</p> <ul> <li> <p> <code>InProgress</code> - The training is in progress.</p> </li> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> <li> <p> <code>Failed</code> - The training job has failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeTrainingJobResponse</code> call.</p> </li> <li> <p> <code>Stopping</code> - The training job is stopping.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> <p>For more detailed information, see <code>SecondaryStatus</code>. </p>'
      SecondaryStatus:
        $ref: '#/definitions/SecondaryStatus'
        description: '<p> Provides detailed information about the state of the training job. For detailed information about the secondary status of the training job, see <code>StatusMessage</code> under <a>SecondaryStatusTransition</a>.</p> <p>Amazon SageMaker provides primary statuses and secondary statuses that apply to each of them:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <important> <p>Valid values for <code>SecondaryStatus</code> are subject to change. </p> </important> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the training job failed, the reason it failed.'
      HyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: Algorithm-specific parameters.
      AlgorithmSpecification:
        $ref: '#/definitions/AlgorithmSpecification'
        description: 'Information about the algorithm used for training, and algorithm metadata.'
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The AWS Identity and Access Management (IAM) role configured for the training job.
      InputDataConfig:
        $ref: '#/definitions/InputDataConfig'
        description: An array of <code>Channel</code> objects that describes each data input channel.
      OutputDataConfig:
        $ref: '#/definitions/OutputDataConfig'
        description: The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts.
      ResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: 'Resources, including ML compute instances and ML storage volumes, that are configured for model training.'
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: 'A <a>VpcConfig</a> object that specifies the VPC that this training job has access to. For more information, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
      StoppingCondition:
        $ref: '#/definitions/StoppingCondition'
        description: The condition under which to stop the training job.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when the training job was created.
      TrainingStartTime:
        $ref: '#/definitions/Timestamp'
        description: Indicates the time when the training job starts on training instances. You are billed for the time interval between this time and the value of <code>TrainingEndTime</code>. The start time in CloudWatch Logs might be later than this time. The difference is due to the time it takes to download the training data and to the size of the training container.
      TrainingEndTime:
        $ref: '#/definitions/Timestamp'
        description: 'Indicates the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that indicates when the status of the training job was last modified.
      SecondaryStatusTransitions:
        $ref: '#/definitions/SecondaryStatusTransitions'
        description: A history of all of the secondary statuses that the training job has transitioned through.
      FinalMetricDataList:
        $ref: '#/definitions/FinalMetricDataList'
        description: A list of final metric values that are set when the training job completes. Used only if the training job was configured to use metrics.
      EnableNetworkIsolation:
        $ref: '#/definitions/Boolean'
        description: 'If the <code>TrainingJob</code> was created with network isolation, the value is set to <code>true</code>. If network isolation is enabled, nodes can''t communicate beyond the VPC they run in.'
      Tags:
        $ref: '#/definitions/TagList'
        description: 'An array of key-value pairs. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
    description: Contains information about a training job.
  SearchRecord:
    type: object
    properties:
      TrainingJob:
        $ref: '#/definitions/TrainingJob'
        description: A <code>TrainingJob</code> object that is returned as part of a <code>Search</code> request.
    description: An individual search result record that contains a single resource object.
  SearchSortOrder:
    type: string
    enum:
      - Ascending
      - Descending
  SearchResultsList:
    type: array
    items:
      $ref: '#/definitions/SearchRecord'
  StatusMessage:
    type: string
  SecondaryStatusTransition:
    type: object
    required:
      - Status
      - StartTime
    properties:
      Status:
        $ref: '#/definitions/SecondaryStatus'
        description: '<p>Contains a secondary status information from a training job.</p> <p>Status might be one of the following secondary statuses:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the training job transitioned to the current secondary status state.
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the training job transitioned out of this secondary status state into another secondary status state or when the training job has ended.
      StatusMessage:
        $ref: '#/definitions/StatusMessage'
        description: '<p>A detailed description of the progress within a secondary status. </p> <p>Amazon SageMaker provides secondary statuses and status messages that apply to each of them:</p> <dl> <dt>Starting</dt> <dd> <ul> <li> <p>Starting the training job.</p> </li> <li> <p>Launching requested ML instances.</p> </li> <li> <p>Insufficient capacity error from EC2 while launching instances, retrying!</p> </li> <li> <p>Launched instance was unhealthy, replacing it!</p> </li> <li> <p>Preparing the instances for training.</p> </li> </ul> </dd> <dt>Training</dt> <dd> <ul> <li> <p>Downloading the training image.</p> </li> <li> <p>Training image download completed. Training in progress.</p> </li> </ul> </dd> </dl> <important> <p>Status messages are subject to change. Therefore, we recommend not including them in code that programmatically initiates actions. For examples, don''t use status messages in if statements.</p> </important> <p>To have an overview of your training job''s progress, view <code>TrainingJobStatus</code> and <code>SecondaryStatus</code> in <a>DescribeTrainingJobResponse</a>, and <code>StatusMessage</code> together. For example, at the start of a training job, you might see the following:</p> <ul> <li> <p> <code>TrainingJobStatus</code> - InProgress</p> </li> <li> <p> <code>SecondaryStatus</code> - Training</p> </li> <li> <p> <code>StatusMessage</code> - Downloading the training image</p> </li> </ul>'
    description: '<p>An array element of <a>DescribeTrainingJobResponse$SecondaryStatusTransitions</a>. It provides additional details about a status that the training job has transitioned through. A training job can be in one of several states, for example, starting, downloading, training, or uploading. Within each state, there are a number of intermediate states. For example, within the starting state, Amazon SageMaker could be starting the training job or launching the ML instances. These transitional states are referred to as the job''s secondary status. </p> <p/>'
  SecurityGroupId:
    type: string
    maxLength: 32
  Seed:
    type: integer
  SourceAlgorithm:
    type: object
    required:
      - AlgorithmName
    properties:
      ModelDataUrl:
        $ref: '#/definitions/Url'
        description: 'The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single <code>gzip</code> compressed tar archive (<code>.tar.gz</code> suffix).'
      AlgorithmName:
        $ref: '#/definitions/ArnOrName'
        description: The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
    description: Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
  SourceAlgorithmList:
    type: array
    items:
      $ref: '#/definitions/SourceAlgorithm'
    minItems: 1
    maxItems: 1
  SplitType:
    type: string
    enum:
      - None
      - Line
      - RecordIO
      - TFRecord
  Subnets:
    type: array
    items:
      $ref: '#/definitions/SubnetId'
    minItems: 1
    maxItems: 16
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The tag key.
      Value:
        $ref: '#/definitions/TagValue'
        description: The tag value.
    description: 'Describes a tag. '
  TaskKeyword:
    type: string
    pattern: '^[A-Za-z0-9]+( [A-Za-z0-9]+)*$'
    minLength: 1
    maxLength: 30
  TemplateContent:
    type: string
    minLength: 1
    maxLength: 128000
  TenthFractionsOfACent:
    type: integer
    minimum: 0
    maximum: 9
  TrainingInstanceTypes:
    type: array
    items:
      $ref: '#/definitions/TrainingInstanceType'
  TrainingJobStatusCounter:
    type: integer
    minimum: 0
  TrainingJobSummary:
    type: object
    required:
      - TrainingJobName
      - TrainingJobArn
      - CreationTime
      - TrainingJobStatus
    properties:
      TrainingJobName:
        $ref: '#/definitions/TrainingJobName'
        description: The name of the training job that you want a summary for.
      TrainingJobArn:
        $ref: '#/definitions/TrainingJobArn'
        description: The Amazon Resource Name (ARN) of the training job.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the training job was created.
      TrainingEndTime:
        $ref: '#/definitions/Timestamp'
        description: 'A timestamp that shows when the training job ended. This field is set only if the training job has one of the terminal statuses (<code>Completed</code>, <code>Failed</code>, or <code>Stopped</code>). '
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: ' Timestamp when the training job was last modified. '
      TrainingJobStatus:
        $ref: '#/definitions/TrainingJobStatus'
        description: The status of the training job.
    description: Provides summary information about a training job.
  TransformS3DataSource:
    type: object
    required:
      - S3DataType
      - S3Uri
    properties:
      S3DataType:
        $ref: '#/definitions/S3DataType'
        description: '<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for batch transform. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for batch transform. </p>'
      S3Uri:
        $ref: '#/definitions/S3Uri'
        description: '<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example:</p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {"prefix": "s3://customer_bucket/some/prefix/"},</code> </p> <p> <code> "relative/path/to/custdata-1",</code> </p> <p> <code> "relative/path/custdata-2",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>S3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-1</code> </p> <p> <code>...</code> </p> <p> The complete set of <code>S3Uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>S3Uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf.</p> </li> </ul>'
    description: Describes the S3 data source.
  TransformDataSource:
    type: object
    required:
      - S3DataSource
    properties:
      S3DataSource:
        $ref: '#/definitions/TransformS3DataSource'
        description: The S3 location of the data source that is associated with a channel.
    description: Describes the location of the channel data.
  TransformEnvironmentKey:
    type: string
    pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
    maxLength: 1024
  TransformEnvironmentValue:
    type: string
    maxLength: 10240
  TransformInstanceCount:
    type: integer
    minimum: 1
  TransformInstanceType:
    type: string
    enum:
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
      - ml.m5.large
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
  TransformJobSummary:
    type: object
    required:
      - TransformJobName
      - TransformJobArn
      - CreationTime
      - TransformJobStatus
    properties:
      TransformJobName:
        $ref: '#/definitions/TransformJobName'
        description: The name of the transform job.
      TransformJobArn:
        $ref: '#/definitions/TransformJobArn'
        description: The Amazon Resource Name (ARN) of the transform job.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A timestamp that shows when the transform Job was created.
      TransformEndTime:
        $ref: '#/definitions/Timestamp'
        description: 'Indicates when the transform job ends on compute instances. For successful jobs and stopped jobs, this is the exact time recorded after the results are uploaded. For failed jobs, this is when Amazon SageMaker detected that the job failed.'
      LastModifiedTime:
        $ref: '#/definitions/Timestamp'
        description: Indicates when the transform job was last modified.
      TransformJobStatus:
        $ref: '#/definitions/TransformJobStatus'
        description: The status of the transform job.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the transform job failed, the reason it failed.'
    description: Provides a summary of a transform job. Multiple <code>TransformJobSummary</code> objects are returned as a list after in response to a <a>ListTransformJobs</a> call.
  VpcSecurityGroupIds:
    type: array
    items:
      $ref: '#/definitions/SecurityGroupId'
    minItems: 1
    maxItems: 5
