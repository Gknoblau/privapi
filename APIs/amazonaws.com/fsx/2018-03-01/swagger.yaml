swagger: '2.0'
info:
  version: '2018-03-01'
  x-release: v4
  title: Amazon FSx
  description: Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: fsx
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/fsx-2018-03-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/fsx/'
host: fsx.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: query
    type: string
    required: true
  Version:
    name: Version
    in: query
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateBackup
      description: '<p>Creates a backup of an existing Amazon FSx for Windows File Server file system. Creating regular backups for your file system is a best practice that complements the replication that Amazon FSx for Windows File Server performs for your file system. It also enables you to restore from user modification of data.</p> <p>If a backup with the specified client request token exists, and the parameters match, this operation returns the description of the existing backup. If a backup specified client request token exists, and the parameters don''t match, this operation returns <code>IncompatibleParameterError</code>. If a backup with the specified client request token doesn''t exist, <code>CreateBackup</code> does the following: </p> <ul> <li> <p>Creates a new Amazon FSx backup with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the backup.</p> </li> </ul> <p>By using the idempotent operation, you can retry a <code>CreateBackup</code> operation without the risk of creating an extra backup. This approach can be useful when an initial call fails in a way that makes it unclear whether a backup was created. If you use the same client request token and the initial call created a backup, the operation returns a successful result because all the parameters are the same.</p> <p>The <code>CreateFileSystem</code> operation returns while the backup''s lifecycle state is still <code>CREATING</code>. You can check the file system creation status by calling the <a>DescribeBackups</a> operation, which returns the backup state along with other information.</p> <note> <p/> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: BackupInProgress
          schema:
            $ref: '#/definitions/BackupInProgress'
        '483':
          description: IncompatibleParameterError
          schema:
            $ref: '#/definitions/IncompatibleParameterError'
        '484':
          description: ServiceLimitExceeded
          schema:
            $ref: '#/definitions/ServiceLimitExceeded'
        '485':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateBackupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateFileSystem':
    post:
      operationId: CreateFileSystem
      description: '<p>Creates a new, empty Amazon FSx file system.</p> <p>If a file system with the specified client request token exists and the parameters match, <code>CreateFileSystem</code> returns the description of the existing file system. If a file system specified client request token exists and the parameters don''t match, this call returns <code>IncompatibleParameterError</code>. If a file system with the specified client request token doesn''t exist, <code>CreateFileSystem</code> does the following: </p> <ul> <li> <p>Creates a new, empty Amazon FSx file system with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the file system.</p> </li> </ul> <p>This operation requires a client request token in the request that Amazon FSx uses to ensure idempotent creation. This means that calling the operation multiple times with the same client request token has no effect. By using the idempotent operation, you can retry a <code>CreateFileSystem</code> operation without the risk of creating an extra file system. This approach can be useful when an initial call fails in a way that makes it unclear whether a file system was created. Examples are if a transport level timeout occurred, or your connection was reset. If you use the same client request token and the initial call created a file system, the client receives success as long as the parameters are the same.</p> <note> <p>The <code>CreateFileSystem</code> call returns while the file system''s lifecycle state is still <code>CREATING</code>. You can check the file-system creation status by calling the <a>DescribeFileSystems</a> operation, which returns the file system state along with other information.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFileSystemResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: ActiveDirectoryError
          schema:
            $ref: '#/definitions/ActiveDirectoryError'
        '482':
          description: IncompatibleParameterError
          schema:
            $ref: '#/definitions/IncompatibleParameterError'
        '483':
          description: InvalidImportPath
          schema:
            $ref: '#/definitions/InvalidImportPath'
        '484':
          description: InvalidExportPath
          schema:
            $ref: '#/definitions/InvalidExportPath'
        '485':
          description: InvalidNetworkSettings
          schema:
            $ref: '#/definitions/InvalidNetworkSettings'
        '486':
          description: ServiceLimitExceeded
          schema:
            $ref: '#/definitions/ServiceLimitExceeded'
        '487':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '488':
          description: MissingFileSystemConfiguration
          schema:
            $ref: '#/definitions/MissingFileSystemConfiguration'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFileSystemRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateFileSystemFromBackup':
    post:
      operationId: CreateFileSystemFromBackup
      description: '<p>Creates a new Amazon FSx file system from an existing Amazon FSx for Windows File Server backup.</p> <p>If a file system with the specified client request token exists and the parameters match, this call returns the description of the existing file system. If a client request token specified by the file system exists and the parameters don''t match, this call returns <code>IncompatibleParameterError</code>. If a file system with the specified client request token doesn''t exist, this operation does the following:</p> <ul> <li> <p>Creates a new Amazon FSx file system from backup with an assigned ID, and an initial lifecycle state of <code>CREATING</code>.</p> </li> <li> <p>Returns the description of the file system.</p> </li> </ul> <p>Parameters like Active Directory, default share name, automatic backup, and backup settings default to the parameters of the file system that was backed up, unless overridden. You can explicitly supply other settings.</p> <p>By using the idempotent operation, you can retry a <code>CreateFileSystemFromBackup</code> call without the risk of creating an extra file system. This approach can be useful when an initial call fails in a way that makes it unclear whether a file system was created. Examples are if a transport level timeout occurred, or your connection was reset. If you use the same client request token and the initial call created a file system, the client receives success as long as the parameters are the same.</p> <note> <p>The <code>CreateFileSystemFromBackup</code> call returns while the file system''s lifecycle state is still <code>CREATING</code>. You can check the file-system creation status by calling the <a>DescribeFileSystems</a> operation, which returns the file system state along with other information.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFileSystemFromBackupResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: ActiveDirectoryError
          schema:
            $ref: '#/definitions/ActiveDirectoryError'
        '482':
          description: IncompatibleParameterError
          schema:
            $ref: '#/definitions/IncompatibleParameterError'
        '483':
          description: InvalidNetworkSettings
          schema:
            $ref: '#/definitions/InvalidNetworkSettings'
        '484':
          description: ServiceLimitExceeded
          schema:
            $ref: '#/definitions/ServiceLimitExceeded'
        '485':
          description: BackupNotFound
          schema:
            $ref: '#/definitions/BackupNotFound'
        '486':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '487':
          description: MissingFileSystemConfiguration
          schema:
            $ref: '#/definitions/MissingFileSystemConfiguration'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFileSystemFromBackupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteBackup':
    post:
      operationId: DeleteBackup
      description: '<p>Deletes an Amazon FSx for Windows File Server backup, deleting its contents. After deletion, the backup no longer exists, and its data is gone.</p> <p>The <code>DeleteBackup</code> call returns instantly. The backup will not show up in later <code>DescribeBackups</code> calls.</p> <important> <p>The data in a deleted backup is also deleted and can''t be recovered by any means.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBackupResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: BackupInProgress
          schema:
            $ref: '#/definitions/BackupInProgress'
        '482':
          description: BackupNotFound
          schema:
            $ref: '#/definitions/BackupNotFound'
        '483':
          description: BackupRestoring
          schema:
            $ref: '#/definitions/BackupRestoring'
        '484':
          description: IncompatibleParameterError
          schema:
            $ref: '#/definitions/IncompatibleParameterError'
        '485':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBackupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteFileSystem':
    post:
      operationId: DeleteFileSystem
      description: '<p>Deletes a file system, deleting its contents. After deletion, the file system no longer exists, and its data is gone. Any existing automatic backups will also be deleted.</p> <p>By default, when you delete an Amazon FSx for Windows File Server file system, a final backup is created upon deletion. This final backup is not subject to the file system''s retention policy, and must be manually deleted.</p> <p>The <code>DeleteFileSystem</code> action returns while the file system has the <code>DELETING</code> status. You can check the file system deletion status by calling the <a>DescribeFileSystems</a> action, which returns a list of file systems in your account. If you pass the file system ID for a deleted file system, the <a>DescribeFileSystems</a> returns a <code>FileSystemNotFound</code> error.</p> <important> <p>The data in a deleted file system is also deleted and can''t be recovered by any means.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFileSystemResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: IncompatibleParameterError
          schema:
            $ref: '#/definitions/IncompatibleParameterError'
        '482':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '483':
          description: ServiceLimitExceeded
          schema:
            $ref: '#/definitions/ServiceLimitExceeded'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFileSystemRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeBackups':
    post:
      operationId: DescribeBackups
      description: '<p>Returns the description of specific Amazon FSx for Windows File Server backups, if a <code>BackupIds</code> value is provided for that backup. Otherwise, it returns all backups owned by your AWS account in the AWS Region of the endpoint that you''re calling.</p> <p>When retrieving all backups, you can optionally specify the <code>MaxResults</code> parameter to limit the number of backups in a response. If more backups remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your backups. <code>DescribeBackups</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> file system descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of backups returned in the response of one <code>DescribeBackups</code> call and the order of backups returned across the responses of a multi-call iteration is unspecified.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBackupsResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: BackupNotFound
          schema:
            $ref: '#/definitions/BackupNotFound'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBackupsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeFileSystems':
    post:
      operationId: DescribeFileSystems
      description: '<p>Returns the description of specific Amazon FSx file systems, if a <code>FileSystemIds</code> value is provided for that file system. Otherwise, it returns descriptions of all file systems owned by your AWS account in the AWS Region of the endpoint that you''re calling.</p> <p>When retrieving all file system descriptions, you can optionally specify the <code>MaxResults</code> parameter to limit the number of descriptions in a response. If more file system descriptions remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your file system descriptions. <code>DescribeFileSystems</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> file system descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of file systems returned in the response of one <code>DescribeFileSystems</code> call and the order of file systems returned across the responses of a multicall iteration is unspecified.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFileSystemsResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFileSystemsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: '<p>Lists tags for an Amazon FSx file systems and backups in the case of Amazon FSx for Windows File Server.</p> <p>When retrieving all tags, you can optionally specify the <code>MaxResults</code> parameter to limit the number of tags in a response. If more tags remain, Amazon FSx returns a <code>NextToken</code> value in the response. In this case, send a later request with the <code>NextToken</code> request parameter set to the value of <code>NextToken</code> from the last response.</p> <p>This action is used in an iterative process to retrieve a list of your tags. <code>ListTagsForResource</code> is called first without a <code>NextToken</code>value. Then the action continues to be called with the <code>NextToken</code> parameter set to the value of the last <code>NextToken</code> value until a response has no <code>NextToken</code>.</p> <p>When using this action, keep the following in mind:</p> <ul> <li> <p>The implementation might return fewer than <code>MaxResults</code> file system descriptions while still including a <code>NextToken</code> value.</p> </li> <li> <p>The order of tags returned in the response of one <code>ListTagsForResource</code> call and the order of tags returned across the responses of a multi-call iteration is unspecified.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
        '483':
          description: NotServiceResourceError
          schema:
            $ref: '#/definitions/NotServiceResourceError'
        '484':
          description: ResourceDoesNotSupportTagging
          schema:
            $ref: '#/definitions/ResourceDoesNotSupportTagging'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TagResource':
    post:
      operationId: TagResource
      description: Tags an Amazon FSx resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
        '483':
          description: NotServiceResourceError
          schema:
            $ref: '#/definitions/NotServiceResourceError'
        '484':
          description: ResourceDoesNotSupportTagging
          schema:
            $ref: '#/definitions/ResourceDoesNotSupportTagging'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UntagResource':
    post:
      operationId: UntagResource
      description: This action removes a tag from an Amazon FSx resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
        '483':
          description: NotServiceResourceError
          schema:
            $ref: '#/definitions/NotServiceResourceError'
        '484':
          description: ResourceDoesNotSupportTagging
          schema:
            $ref: '#/definitions/ResourceDoesNotSupportTagging'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateFileSystem':
    post:
      operationId: UpdateFileSystem
      description: Updates a file system configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFileSystemResponse'
        '480':
          description: BadRequest
          schema:
            $ref: '#/definitions/BadRequest'
        '481':
          description: IncompatibleParameterError
          schema:
            $ref: '#/definitions/IncompatibleParameterError'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: FileSystemNotFound
          schema:
            $ref: '#/definitions/FileSystemNotFound'
        '484':
          description: MissingFileSystemConfiguration
          schema:
            $ref: '#/definitions/MissingFileSystemConfiguration'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFileSystemRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateBackupResponse:
    type: object
    example:
      Backup:
        BackupId: backup-03e3c82e0183b7b6b
        CreationTime: '1481841524.0'
        FileSystem:
          FileSystemId: fs-0498eed5fe91001ec
          OwnerId: 012345678912
          StorageCapacity: 300
          WindowsConfiguration:
            ActiveDirectoryId: d-1234abcd12
            AutomaticBackupRetentionDays: 30
            DailyAutomaticBackupStartTime: '05:00'
            WeeklyMaintenanceStartTime: '1:05:00'
        Lifecycle: CREATING
        ProgressPercent: 0
        ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:backup/backup-03e3c82e0183b7b6b'
        Tags:
          - Key: Name
            Value: MyBackup
        Type: USER_INITIATED
    properties:
      Backup:
        $ref: '#/definitions/Backup'
        description: A description of the backup.
    description: The response object for the <code>CreateBackup</code> operation.
  CreateBackupRequest:
    type: object
    required:
      - FileSystemId
    example:
      FileSystemId: fs-0498eed5fe91001ec
      Tags:
        - Key: Name
          Value: MyBackup
    properties:
      FileSystemId:
        $ref: '#/definitions/FileSystemId'
        description: The ID of the file system to back up.
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: (Optional) A string of up to 64 ASCII characters that Amazon FSx uses to ensure idempotent creation. This string is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags to apply to the backup at backup creation. The key value of the <code>Name</code> tag appears in the console as the backup name.
    description: The request object for the <code>CreateBackup</code> operation.
  BadRequest: {}
  FileSystemNotFound: {}
  BackupInProgress: {}
  IncompatibleParameterError: {}
  ServiceLimitExceeded: {}
  InternalServerError: {}
  CreateFileSystemResponse:
    type: object
    example:
      FileSystem:
        CreationTime: '1481841524.0'
        DNSName: fs-0498eed5fe91001ec.fsx.com
        FileSystemId: fs-0498eed5fe91001ec
        KmsKeyId: 'arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6'
        Lifecycle: CREATING
        OwnerId: 012345678912
        ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec'
        StorageCapacity: 300
        SubnetIds:
          - subnet-1234abcd
        Tags:
          - Key: Name
            Value: MyFileSystem
        VpcId: vpc-ab1234cd
        WindowsConfiguration:
          ActiveDirectoryId: d-1234abcd12
          AutomaticBackupRetentionDays: 30
          DailyAutomaticBackupStartTime: '05:00'
          ThroughputCapacity: 8
          WeeklyMaintenanceStartTime: '1:05:00'
    properties:
      FileSystem:
        $ref: '#/definitions/FileSystem'
        description: A description of the file system.
    description: The response object for the <code>CreateFileSystem</code> operation.
  CreateFileSystemRequest:
    type: object
    required:
      - FileSystemType
      - StorageCapacity
      - SubnetIds
    example:
      ClientRequestToken: a8ca07e4-61ec-4399-99f4-19853801bcd5
      FileSystemType: WINDOWS
      KmsKeyId: 'arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6'
      SecurityGroupIds:
        - sg-edcd9784
      StorageCapacity: 300
      SubnetIds:
        - subnet-1234abcd
      Tags:
        - Key: Name
          Value: MyFileSystem
      WindowsConfiguration:
        ActiveDirectoryId: d-1234abcd12
        AutomaticBackupRetentionDays: 30
        DailyAutomaticBackupStartTime: '05:00'
        ThroughputCapacity: 8
        WeeklyMaintenanceStartTime: '1:05:00'
    properties:
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: (Optional) A string of up to 64 ASCII characters that Amazon FSx uses to ensure idempotent creation. This string is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
      FileSystemType:
        $ref: '#/definitions/FileSystemType'
        description: The type of file system.
      StorageCapacity:
        $ref: '#/definitions/StorageCapacity'
        description: '<p>The storage capacity of the file system.</p> <p>For Windows file systems, the storage capacity has a minimum of 300 GiB, and a maximum of 65,536 GiB.</p> <p>For Lustre file systems, the storage capacity has a minimum of 3,600 GiB. Storage capacity is provisioned in increments of 3,600 GiB.</p>'
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of IDs for the subnets that the file system will be accessible from. File systems support only one subnet. The file server is also launched in that subnet's Availability Zone.
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces. This list isn't returned in later describe requests.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags to be applied to the file system at file system creation. The key value of the <code>Name</code> tag appears in the console as the file system name.
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
      WindowsConfiguration:
        $ref: '#/definitions/CreateFileSystemWindowsConfiguration'
        description: The configuration for this Microsoft Windows file system.
      LustreConfiguration:
        $ref: '#/definitions/CreateFileSystemLustreConfiguration'
    description: The request object for the <code>CreateFileSystem</code> operation.
  ActiveDirectoryError: {}
  InvalidImportPath: {}
  InvalidExportPath: {}
  InvalidNetworkSettings: {}
  MissingFileSystemConfiguration: {}
  CreateFileSystemFromBackupResponse:
    type: object
    example:
      FileSystem:
        CreationTime: '1481841524.0'
        DNSName: fs-0498eed5fe91001ec.fsx.com
        FileSystemId: fs-0498eed5fe91001ec
        KmsKeyId: 'arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6'
        Lifecycle: CREATING
        OwnerId: 012345678912
        ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec'
        StorageCapacity: 300
        SubnetIds:
          - subnet-1234abcd
        Tags:
          - Key: Name
            Value: MyFileSystem
        VpcId: vpc-ab1234cd
        WindowsConfiguration:
          ActiveDirectoryId: d-1234abcd12
          AutomaticBackupRetentionDays: 30
          DailyAutomaticBackupStartTime: '05:00'
          ThroughputCapacity: 8
          WeeklyMaintenanceStartTime: '1:05:00'
    properties:
      FileSystem:
        $ref: '#/definitions/FileSystem'
        description: A description of the file system.
    description: The response object for the <code>CreateFileSystemFromBackup</code> operation.
  CreateFileSystemFromBackupRequest:
    type: object
    required:
      - BackupId
      - SubnetIds
    example:
      BackupId: backup-03e3c82e0183b7b6b
      ClientRequestToken: f4c94ed7-238d-4c46-93db-48cd62ec33b7
      SecurityGroupIds:
        - sg-edcd9784
      SubnetIds:
        - subnet-1234abcd
      Tags:
        - Key: Name
          Value: MyFileSystem
      WindowsConfiguration:
        ThroughputCapacity: 8
    properties:
      BackupId:
        $ref: '#/definitions/BackupId'
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: (Optional) A string of up to 64 ASCII characters that Amazon FSx uses to ensure idempotent creation. This string is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: 'A list of IDs for the subnets that the file system will be accessible from. Currently, you can specify only one subnet. The file server is also launched in that subnet''s Availability Zone.'
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups apply to all network interfaces. This value isn't returned in later describe requests.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags to be applied to the file system at file system creation. The key value of the <code>Name</code> tag appears in the console as the file system name.
      WindowsConfiguration:
        $ref: '#/definitions/CreateFileSystemWindowsConfiguration'
        description: The configuration for this Microsoft Windows file system.
    description: The request object for the <code>CreateFileSystemFromBackup</code> operation.
  BackupNotFound: {}
  DeleteBackupResponse:
    type: object
    example:
      BackupId: backup-03e3c82e0183b7b6b
      Lifecycle: DELETED
    properties:
      BackupId:
        $ref: '#/definitions/BackupId'
        description: The ID of the backup deleted.
      Lifecycle:
        $ref: '#/definitions/BackupLifecycle'
        description: The lifecycle of the backup. Should be <code>DELETED</code>.
    description: The response object for <code>DeleteBackup</code> operation.
  DeleteBackupRequest:
    type: object
    required:
      - BackupId
    example:
      BackupId: backup-03e3c82e0183b7b6b
    properties:
      BackupId:
        $ref: '#/definitions/BackupId'
        description: The ID of the backup you want to delete.
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: (Optional) A string of up to 64 ASCII characters that Amazon FSx uses to ensure idempotent deletion. This is automatically filled on your behalf when using the AWS CLI or SDK.
    description: The request object for <code>DeleteBackup</code> operation.
  BackupRestoring: {}
  DeleteFileSystemResponse:
    type: object
    example:
      FileSystemId: fs-0498eed5fe91001ec
      Lifecycle: DELETING
    properties:
      FileSystemId:
        $ref: '#/definitions/FileSystemId'
        description: The ID of the file system being deleted.
      Lifecycle:
        $ref: '#/definitions/FileSystemLifecycle'
        description: The file system lifecycle for the deletion request. Should be <code>DELETING</code>.
      WindowsResponse:
        $ref: '#/definitions/DeleteFileSystemWindowsResponse'
    description: The response object for the <code>DeleteFileSystem</code> operation.
  DeleteFileSystemRequest:
    type: object
    required:
      - FileSystemId
    example:
      FileSystemId: fs-0498eed5fe91001ec
    properties:
      FileSystemId:
        $ref: '#/definitions/FileSystemId'
        description: The ID of the file system you want to delete.
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: (Optional) A string of up to 64 ASCII characters that Amazon FSx uses to ensure idempotent deletion. This is automatically filled on your behalf when using the AWS CLI or SDK.
      WindowsConfiguration:
        $ref: '#/definitions/DeleteFileSystemWindowsConfiguration'
    description: The request object for <code>DeleteFileSystem</code> operation.
  DescribeBackupsResponse:
    type: object
    example:
      Backups:
        - BackupId: backup-03e3c82e0183b7b6b
          CreationTime: '1481841524.0'
          FileSystem:
            FileSystemId: fs-0498eed5fe91001ec
            OwnerId: 012345678912
            StorageCapacity: 300
            WindowsConfiguration:
              ActiveDirectoryId: d-1234abcd12
              AutomaticBackupRetentionDays: 30
              DailyAutomaticBackupStartTime: '05:00'
              WeeklyMaintenanceStartTime: '1:05:00'
          Lifecycle: AVAILABLE
          ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:backup/backup-03e3c82e0183b7b6b'
          Tags:
            - Key: Name
              Value: MyBackup
          Type: USER_INITIATED
    properties:
      Backups:
        $ref: '#/definitions/Backups'
        description: Any array of backups.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'This is present if there are more backups than returned in the response (String). You can use the <code>NextToken</code> value in the later request to fetch the backups. '
    description: Response object for <code>DescribeBackups</code> operation.
  DescribeBackupsRequest:
    type: object
    example: {}
    properties:
      BackupIds:
        $ref: '#/definitions/BackupIds'
        description: '(Optional) IDs of the backups you want to retrieve (String). This overrides any filters. If any IDs are not found, BackupNotFound will be thrown.'
      Filters:
        $ref: '#/definitions/Filters'
        description: (Optional) Filters structure. Supported names are file-system-id and backup-type.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: (Optional) Maximum number of backups to return in the response (integer). This parameter value must be greater than 0. The number of items that Amazon FSx returns is the minimum of the <code>MaxResults</code> parameter specified in the request and the service's internal maximum number of items per page.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: '(Optional) Opaque pagination token returned from a previous <code>DescribeBackups</code> operation (String). If a token present, the action continues the list from where the returning call left off.'
    description: The request object for <code>DescribeBackups</code> operation.
  DescribeFileSystemsResponse:
    type: object
    example:
      FileSystems:
        - CreationTime: '1481841524.0'
          DNSName: fs-0498eed5fe91001ec.fsx.com
          FileSystemId: fs-0498eed5fe91001ec
          KmsKeyId: 'arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6'
          Lifecycle: AVAILABLE
          NetworkInterfaceIds:
            - eni-abcd1234
          OwnerId: 012345678912
          ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec'
          StorageCapacity: 300
          SubnetIds:
            - subnet-1234abcd
          Tags:
            - Key: Name
              Value: MyFileSystem
          VpcId: vpc-ab1234cd
          WindowsConfiguration:
            ActiveDirectoryId: d-1234abcd12
            AutomaticBackupRetentionDays: 30
            DailyAutomaticBackupStartTime: '05:00'
            ThroughputCapacity: 8
            WeeklyMaintenanceStartTime: '1:05:00'
    properties:
      FileSystems:
        $ref: '#/definitions/FileSystems'
        description: An array of file system descriptions.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Present if there are more file systems than returned in the response (String). You can use the <code>NextToken</code> value in the later request to fetch the descriptions. '
    description: The response object for <code>DescribeFileSystems</code> operation.
  DescribeFileSystemsRequest:
    type: object
    example: {}
    properties:
      FileSystemIds:
        $ref: '#/definitions/FileSystemIds'
        description: (Optional) IDs of the file systems whose descriptions you want to retrieve (String).
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: (Optional) Maximum number of file systems to return in the response (integer). This parameter value must be greater than 0. The number of items that Amazon FSx returns is the minimum of the <code>MaxResults</code> parameter specified in the request and the service's internal maximum number of items per page.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: '(Optional) Opaque pagination token returned from a previous <code>DescribeFileSystems</code> operation (String). If a token present, the action continues the list from where the returning call left off.'
    description: The request object for <code>DescribeFileSystems</code> operation.
  ListTagsForResourceResponse:
    type: object
    example:
      Tags:
        - Key: Name
          Value: MyFileSystem
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: A list of tags on the resource.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'This is present if there are more tags than returned in the response (String). You can use the <code>NextToken</code> value in the later request to fetch the tags. '
    description: The response object for <code>ListTagsForResource</code> operation.
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceARN
    example:
      ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec'
    properties:
      ResourceARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the Amazon FSx resource that will have its tags listed.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: (Optional) Maximum number of tags to return in the response (integer). This parameter value must be greater than 0. The number of items that Amazon FSx returns is the minimum of the <code>MaxResults</code> parameter specified in the request and the service's internal maximum number of items per page.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: '(Optional) Opaque pagination token returned from a previous <code>ListTagsForResource</code> operation (String). If a token present, the action continues the list from where the returning call left off.'
    description: The request object for <code>ListTagsForResource</code> operation.
  ResourceNotFound: {}
  NotServiceResourceError: {}
  ResourceDoesNotSupportTagging: {}
  TagResourceResponse:
    type: object
    properties: {}
    description: The response object for the <code>TagResource</code> operation.
  TagResourceRequest:
    type: object
    required:
      - ResourceARN
      - Tags
    example:
      ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec'
      Tags:
        - Key: Name
          Value: MyFileSystem
    properties:
      ResourceARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the Amazon FSx resource that you want to tag.
      Tags:
        $ref: '#/definitions/Tags'
        description: 'A list of tags for the resource. If a tag with a given key already exists, the value is replaced by the one specified in this parameter.'
    description: The request object for the <code>TagResource</code> operation.
  UntagResourceResponse:
    type: object
    properties: {}
    description: The response object for <code>UntagResource</code> action.
  UntagResourceRequest:
    type: object
    required:
      - ResourceARN
      - TagKeys
    example:
      ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec'
      TagKeys:
        - Name
    properties:
      ResourceARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the Amazon FSx resource to untag.
      TagKeys:
        $ref: '#/definitions/TagKeys'
        description: 'A list of keys of tags on the resource to untag. In case the tag key doesn''t exist, the call will still succeed to be idempotent.'
    description: The request object for <code>UntagResource</code> action.
  UpdateFileSystemResponse:
    type: object
    example:
      FileSystem:
        CreationTime: '1481841524.0'
        DNSName: fs-0498eed5fe91001ec.fsx.com
        FileSystemId: fs-0498eed5fe91001ec
        KmsKeyId: 'arn:aws:kms:us-east-1:012345678912:key/0ff3ea8d-130e-4133-877f-93908b6fdbd6'
        Lifecycle: AVAILABLE
        OwnerId: 012345678912
        ResourceARN: 'arn:aws:fsx:us-east-1:012345678912:file-system/fs-0498eed5fe91001ec'
        StorageCapacity: 300
        SubnetIds:
          - subnet-1234abcd
        Tags:
          - Key: Name
            Value: MyFileSystem
        VpcId: vpc-ab1234cd
        WindowsConfiguration:
          AutomaticBackupRetentionDays: 10
          DailyAutomaticBackupStartTime: '06:00'
          ThroughputCapacity: 8
          WeeklyMaintenanceStartTime: '3:06:00'
    properties:
      FileSystem:
        $ref: '#/definitions/FileSystem'
        description: A description of the file system.
    description: The response object for the <code>UpdateFileSystem</code> operation.
  UpdateFileSystemRequest:
    type: object
    required:
      - FileSystemId
    example:
      FileSystemId: fs-0498eed5fe91001ec
      WindowsConfiguration:
        AutomaticBackupRetentionDays: 10
        DailyAutomaticBackupStartTime: '06:00'
        WeeklyMaintenanceStartTime: '3:06:00'
    properties:
      FileSystemId:
        $ref: '#/definitions/FileSystemId'
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: (Optional) A string of up to 64 ASCII characters that Amazon FSx uses to ensure idempotent updates. This string is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.
      WindowsConfiguration:
        $ref: '#/definitions/UpdateFileSystemWindowsConfiguration'
        description: The configuration for this Microsoft Windows file system. The only supported options are for backup and maintenance.
      LustreConfiguration:
        $ref: '#/definitions/UpdateFileSystemLustreConfiguration'
    description: The request object for the <code>UpdateFileSystem</code> operation.
  AWSAccountId:
    type: string
    pattern: '^\d{12}$'
    description: An AWS account ID. This ID is a 12-digit number that you use to construct Amazon Resource Names (ARNs) for resources.
    minLength: 12
    maxLength: 12
  ArchivePath:
    type: string
    minLength: 3
    maxLength: 900
  AutomaticBackupRetentionDays:
    type: integer
    description: The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 35 days.
    minimum: 0
    maximum: 35
  BackupId:
    type: string
    pattern: '^(backup-[0-9a-f]{8,})$'
    description: The ID of the backup.
    minLength: 12
    maxLength: 128
  BackupLifecycle:
    type: string
    enum:
      - AVAILABLE
      - CREATING
      - DELETED
      - FAILED
    description: The lifecycle status of the backup.
  BackupFailureDetails:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
        description: A message describing the backup creation failure.
    description: 'If backup creation fails, this structure contains the details of that failure.'
  BackupType:
    type: string
    enum:
      - AUTOMATIC
      - USER_INITIATED
    description: The type of the backup.
  ProgressPercent:
    type: integer
    description: The current percent of progress of an asynchronous task.
    minimum: 0
    maximum: 100
  CreationTime:
    type: string
    description: 'The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.'
    format: date-time
  KmsKeyId:
    type: string
    pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[89aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}|arn:aws[a-z-]{0,7}:kms:[a-z]{2}-[a-z-]{4,}-\d+:\d{12}:(key|alias)\/([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[89aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}|[a-zA-Z0-9:\/_-]+)|alias\/[a-zA-Z0-9:\/_-]+$'
    description: 'The ID of your AWS Key Management Service (AWS KMS) key. This ID is used to encrypt the data in your file system at rest. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">Encrypt</a> in the <i>AWS Key Management Service API Reference</i>.'
    minLength: 1
    maxLength: 2048
  ResourceARN:
    type: string
    pattern: '^arn:aws[a-z-]{0,7}:[A-Za-z0-9][A-za-z0-9_/.-]{0,62}:[A-za-z0-9_/.-]{0,63}:[A-za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.-]{0,127}$'
    description: 'The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify AWS resources. We require an ARN when you need to specify a resource unambiguously across all of AWS. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.'
    minLength: 8
    maxLength: 512
  Tags:
    type: array
    description: 'A list of <code>Tag</code> values, with a maximum of 50 elements.'
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    maxItems: 50
  FileSystem:
    type: object
    properties:
      OwnerId:
        $ref: '#/definitions/AWSAccountId'
        description: 'The AWS account that created the file system. If the file system was created by an IAM user, the AWS account to which the IAM user belongs is the owner.'
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: 'The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.'
      FileSystemId:
        $ref: '#/definitions/FileSystemId'
        description: The eight-digit ID of the file system that was automatically assigned by Amazon FSx.
      FileSystemType:
        $ref: '#/definitions/FileSystemType'
        description: Type of file system. Currently the only supported type is WINDOWS.
      Lifecycle:
        $ref: '#/definitions/FileSystemLifecycle'
        description: The lifecycle status of the file system.
      FailureDetails:
        $ref: '#/definitions/FileSystemFailureDetails'
      StorageCapacity:
        $ref: '#/definitions/StorageCapacity'
        description: The storage capacity of the file system in gigabytes.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the primary VPC for the file system.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: The IDs of the subnets to contain the endpoint for the file system. One and only one is supported. The file system is launched in the Availability Zone associated with this subnet.
      NetworkInterfaceIds:
        $ref: '#/definitions/NetworkInterfaceIds'
        description: '<p>The IDs of the elastic network interface from which a specific file system is accessible. The elastic network interface is automatically created in the same VPC that the Amazon FSx file system was created in. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic Network Interfaces</a> in the <i>Amazon EC2 User Guide.</i> </p> <p>For an Amazon FSx for Windows File Server file system, you can have one network interface Id. For an Amazon FSx for Lustre file system, you can have more than one.</p>'
      DNSName:
        $ref: '#/definitions/DNSName'
        description: The DNS name for the file system.
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the file system's data for an Amazon FSx for Windows File Server file system.
      ResourceARN:
        $ref: '#/definitions/ResourceARN'
        description: The resource ARN of the file system.
      Tags:
        $ref: '#/definitions/Tags'
        description: 'The tags to associate with the file system. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a> in the <i>Amazon EC2 User Guide</i>.'
      WindowsConfiguration:
        $ref: '#/definitions/WindowsFileSystemConfiguration'
        description: The configuration for this Microsoft Windows file system.
      LustreConfiguration:
        $ref: '#/definitions/LustreFileSystemConfiguration'
    description: A description of a specific Amazon FSx file system.
  Backup:
    type: object
    required:
      - BackupId
      - Lifecycle
      - Type
      - CreationTime
      - FileSystem
    properties:
      BackupId:
        $ref: '#/definitions/BackupId'
        description: The ID of the backup.
      Lifecycle:
        $ref: '#/definitions/BackupLifecycle'
        description: The lifecycle status of the backup.
      FailureDetails:
        $ref: '#/definitions/BackupFailureDetails'
        description: Details explaining any failures that occur when creating a backup.
      Type:
        $ref: '#/definitions/BackupType'
        description: The type of the backup.
      ProgressPercent:
        $ref: '#/definitions/ProgressPercent'
      CreationTime:
        $ref: '#/definitions/CreationTime'
        description: The time when a particular backup was created.
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: The ID of the AWS Key Management Service (AWS KMS) key used to encrypt this backup's data.
      ResourceARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) for the backup resource.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with a particular file system.
      FileSystem:
        $ref: '#/definitions/FileSystem'
        description: Metadata of the file system associated with the backup. This metadata is persisted even if the file system is deleted.
    description: A backup of an Amazon FSx for Windows File Server file system. You can create a new file system from a backup to protect against data loss.
  ErrorMessage:
    type: string
    description: A detailed error message.
    minLength: 1
    maxLength: 256
  BackupIds:
    type: array
    description: A list of backup IDs.
    items:
      $ref: '#/definitions/BackupId'
    maxItems: 50
  Backups:
    type: array
    description: A list of backups.
    items:
      $ref: '#/definitions/Backup'
    maxItems: 50
  ClientRequestToken:
    type: string
    pattern: '[A-za-z0-9_/.-]{0,255}$'
    description: '(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the AWS Command Line Interface (AWS CLI) or an AWS SDK.'
    minLength: 1
    maxLength: 255
  FileSystemId:
    type: string
    pattern: '^(fs-[0-9a-f]{8,})$'
    description: 'The globally unique ID of the file system, assigned by Amazon FSx.'
    minLength: 11
    maxLength: 21
  SubnetIds:
    type: array
    description: 'A list of subnet IDs. Currently, you can specify only one subnet ID in a call to the <code>CreateFileSystem</code> operation.'
    items:
      $ref: '#/definitions/SubnetId'
    maxItems: 50
  SecurityGroupIds:
    type: array
    description: A list of security group IDs.
    items:
      $ref: '#/definitions/SecurityGroupId'
    maxItems: 50
  CreateFileSystemWindowsConfiguration:
    type: object
    required:
      - ThroughputCapacity
    properties:
      ActiveDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The ID for an existing Microsoft Active Directory instance that the file system should join when it's created.
      ThroughputCapacity:
        $ref: '#/definitions/MegabytesPerSecond'
        description: 'The throughput of an Amazon FSx file system, measured in megabytes per second.'
      WeeklyMaintenanceStartTime:
        $ref: '#/definitions/WeeklyTime'
        description: 'The preferred start time to perform weekly maintenance, in the UTC time zone.'
      DailyAutomaticBackupStartTime:
        $ref: '#/definitions/DailyTime'
        description: 'The preferred time to take daily automatic backups, in the UTC time zone.'
      AutomaticBackupRetentionDays:
        $ref: '#/definitions/AutomaticBackupRetentionDays'
        description: The number of days to retain automatic backups. The default is to retain backups for 7 days. Setting this value to 0 disables the creation of automatic backups. The maximum retention period for backups is 35 days.
      CopyTagsToBackups:
        $ref: '#/definitions/Flag'
        description: 'A boolean flag indicating whether tags on the file system should be copied to backups. This value defaults to false. If it''s set to true, all tags on the file system are copied to all automatic backups and any user-initiated backups where the user doesn''t specify any tags. If this value is true, and you specify one or more tags, only the specified tags are copied to backups.'
    description: The configuration object for the Microsoft Windows file system used in <code>CreateFileSystem</code> and <code>CreateFileSystemFromBackup</code> operations.
  WeeklyTime:
    type: string
    pattern: '^[1-7]:([01]\d|2[0-3]):?([0-5]\d)$'
    description: '<p>A recurring weekly time, in the format <code>D:HH:MM</code>. </p> <p> <code>D</code> is the day of the week, for which 1 represents Monday and 7 represents Sunday. For further details, see <a href="https://en.wikipedia.org/wiki/ISO_week_date">the ISO-8601 spec as described on Wikipedia</a>.</p> <p> <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. </p> <p>For example, <code>1:05:00</code> specifies maintenance at 5 AM Monday.</p>'
    minLength: 7
    maxLength: 7
  Megabytes:
    type: integer
    minimum: 1
    maximum: 512000
  CreateFileSystemLustreConfiguration:
    type: object
    properties:
      WeeklyMaintenanceStartTime:
        $ref: '#/definitions/WeeklyTime'
        description: 'The preferred time to perform weekly maintenance, in the UTC time zone.'
      ImportPath:
        $ref: '#/definitions/ArchivePath'
        description: '(Optional) The path to the Amazon S3 bucket (including the optional prefix) that you''re using as the data repository for your Amazon FSx for Lustre file system. The root of your FSx for Lustre file system will be mapped to the root of the Amazon S3 bucket you select. An example is <code>s3://import-bucket/optional-prefix</code>. If you specify a prefix after the Amazon S3 bucket name, only object keys with that prefix are loaded into the file system.'
      ExportPath:
        $ref: '#/definitions/ArchivePath'
        description: '<p>(Optional) The path in Amazon S3 where the root of your Amazon FSx file system is exported. The path must use the same Amazon S3 bucket as specified in ImportPath. You can provide an optional prefix to which new and changed data is to be exported from your Amazon FSx for Lustre file system. If an <code>ExportPath</code> value is not provided, Amazon FSx sets a default export path, <code>s3://import-bucket/FSxLustre[creation-timestamp]</code>. The timestamp is in UTC format, for example <code>s3://import-bucket/FSxLustre20181105T222312Z</code>.</p> <p>The Amazon S3 export bucket must be the same as the import bucket specified by <code>ImportPath</code>. If you only specify a bucket name, such as <code>s3://import-bucket</code>, you get a 1:1 mapping of file system objects to S3 bucket objects. This mapping means that the input data in S3 is overwritten on export. If you provide a custom prefix in the export path, such as <code>s3://import-bucket/[custom-optional-prefix]</code>, Amazon FSx exports the contents of your file system to that export prefix in the Amazon S3 bucket.</p>'
      ImportedFileChunkSize:
        $ref: '#/definitions/Megabytes'
        description: '<p>(Optional) For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. The maximum number of disks that a single file can be striped across is limited by the total number of disks that make up the file system.</p> <p>The chunk size default is 1,024 MiB (1 GiB) and can go as high as 512,000 MiB (500 GiB). Amazon S3 objects have a maximum size of 5 TB.</p>'
    description: The configuration object for Lustre file systems used in the <code>CreateFileSystem</code> operation.
  FileSystemType:
    type: string
    enum:
      - WINDOWS
      - LUSTRE
    description: The type of file system.
  StorageCapacity:
    type: integer
    description: 'The storage capacity for your Amazon FSx file system, in gibibytes.'
    minimum: 1
  DirectoryId:
    type: string
    pattern: '^d-[0-9a-f]{10}$'
    minLength: 12
    maxLength: 12
  MegabytesPerSecond:
    type: integer
    description: MBps sustained throughput of an Amazon FSx file system.
    minimum: 8
    maximum: 2048
  DailyTime:
    type: string
    pattern: '^([01]\d|2[0-3]):?([0-5]\d)$'
    description: 'A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the hour. For example, <code>05:00</code> specifies 5 AM daily. '
    minLength: 5
    maxLength: 5
  Flag:
    type: boolean
  DNSName:
    type: string
    pattern: '^(fsi?-[0-9a-f]{8,}\..{4,253})$'
    description: The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
    minLength: 16
    maxLength: 275
  DataRepositoryConfiguration:
    type: object
    properties:
      ImportPath:
        $ref: '#/definitions/ArchivePath'
        description: 'The import path to the Amazon S3 bucket (and optional prefix) that you''re using as the data repository for your FSx for Lustre file system, for example <code>s3://import-bucket/optional-prefix</code>. If a prefix is specified after the Amazon S3 bucket name, only object keys with that prefix are loaded into the file system.'
      ExportPath:
        $ref: '#/definitions/ArchivePath'
        description: The export path to the Amazon S3 bucket (and prefix) that you are using to store new and changed Lustre file system files in S3.
      ImportedFileChunkSize:
        $ref: '#/definitions/Megabytes'
        description: '<p>For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. The maximum number of disks that a single file can be striped across is limited by the total number of disks that make up the file system.</p> <p>The default chunk size is 1,024 MiB (1 GiB) and can go as high as 512,000 MiB (500 GiB). Amazon S3 objects have a maximum size of 5 TB.</p>'
    description: The data repository configuration object for Lustre file systems returned in the response of the <code>CreateFileSystem</code> operation.
  DeleteFileSystemWindowsConfiguration:
    type: object
    properties:
      SkipFinalBackup:
        $ref: '#/definitions/Flag'
        description: 'By default, Amazon FSx for Windows takes a final backup on your behalf when the <code>DeleteFileSystem</code> operation is invoked. Doing this helps protect you from data loss, and we highly recommend taking the final backup. If you want to skip this backup, use this flag to do so.'
      FinalBackupTags:
        $ref: '#/definitions/Tags'
        description: A set of tags for your final backup.
    description: The configuration object for the Microsoft Windows file system used in the <code>DeleteFileSystem</code> operation.
  FileSystemLifecycle:
    type: string
    enum:
      - AVAILABLE
      - CREATING
      - FAILED
      - DELETING
    description: The lifecycle status of the file system.
  DeleteFileSystemWindowsResponse:
    type: object
    properties:
      FinalBackupId:
        $ref: '#/definitions/BackupId'
        description: The ID of the final backup for this file system.
      FinalBackupTags:
        $ref: '#/definitions/Tags'
        description: The set of tags applied to the final backup.
    description: The response object for the Microsoft Windows file system used in the <code>DeleteFileSystem</code> operation.
  Filters:
    type: array
    description: A list of <code>Filter</code> elements.
    items:
      $ref: '#/definitions/Filter'
    maxItems: 10
  MaxResults:
    type: integer
    description: The maximum number of resources to return in the response. This value must be an integer greater than zero.
    minimum: 1
  NextToken:
    type: string
    pattern: '^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$'
    description: '(Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.'
    minLength: 1
    maxLength: 255
  FileSystemIds:
    type: array
    description: A list of <code>FileSystemId</code>s.
    items:
      $ref: '#/definitions/FileSystemId'
    maxItems: 50
  FileSystems:
    type: array
    description: A list of file systems.
    items:
      $ref: '#/definitions/FileSystem'
    maxItems: 50
  FileSystemFailureDetails:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
        description: Message describing the failures that occurred during file system creation.
    description: Structure providing details of any failures that occur when creating the file system has failed.
  VpcId:
    type: string
    pattern: '^(vpc-[0-9a-f]{8,})$'
    description: 'The ID of your virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">VPC and Subnets</a> in the <i>Amazon VPC User Guide</i>.'
    minLength: 12
    maxLength: 21
  NetworkInterfaceIds:
    type: array
    description: A list of network interface IDs.
    items:
      $ref: '#/definitions/NetworkInterfaceId'
    maxItems: 50
  WindowsFileSystemConfiguration:
    type: object
    properties:
      ActiveDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The ID for an existing Microsoft Active Directory instance that the file system should join when it's created.
      ThroughputCapacity:
        $ref: '#/definitions/MegabytesPerSecond'
        description: 'The throughput of an Amazon FSx file system, measured in megabytes per second.'
      MaintenanceOperationsInProgress:
        $ref: '#/definitions/FileSystemMaintenanceOperations'
        description: The list of maintenance operations in progress for this file system.
      WeeklyMaintenanceStartTime:
        $ref: '#/definitions/WeeklyTime'
        description: 'The preferred time to perform weekly maintenance, in the UTC time zone.'
      DailyAutomaticBackupStartTime:
        $ref: '#/definitions/DailyTime'
        description: 'The preferred time to take daily automatic backups, in the UTC time zone.'
      AutomaticBackupRetentionDays:
        $ref: '#/definitions/AutomaticBackupRetentionDays'
        description: The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 35 days.
      CopyTagsToBackups:
        $ref: '#/definitions/Flag'
        description: 'A boolean flag indicating whether tags on the file system should be copied to backups. This value defaults to false. If it''s set to true, all tags on the file system are copied to all automatic backups and any user-initiated backups where the user doesn''t specify any tags. If this value is true, and you specify one or more tags, only the specified tags are copied to backups.'
    description: The configuration for this Microsoft Windows file system.
  LustreFileSystemConfiguration:
    type: object
    properties:
      WeeklyMaintenanceStartTime:
        $ref: '#/definitions/WeeklyTime'
        description: The UTC time that you want to begin your weekly maintenance window.
      DataRepositoryConfiguration:
        $ref: '#/definitions/DataRepositoryConfiguration'
    description: The configuration for the Amazon FSx for Lustre file system.
  FileSystemMaintenanceOperation:
    type: string
    enum:
      - PATCHING
      - BACKING_UP
    description: An enumeration specifying the currently ongoing maintenance operation.
  FileSystemMaintenanceOperations:
    type: array
    description: A list of maintenance operations.
    items:
      $ref: '#/definitions/FileSystemMaintenanceOperation'
    maxItems: 20
  FilterName:
    type: string
    enum:
      - file-system-id
      - backup-type
    description: The name for a filter.
  FilterValues:
    type: array
    description: A list of filter values.
    items:
      $ref: '#/definitions/FilterValue'
    maxItems: 20
  Filter:
    type: object
    properties:
      Name:
        $ref: '#/definitions/FilterName'
        description: The name for this filter.
      Values:
        $ref: '#/definitions/FilterValues'
        description: The values of the filter. These are all the values for any of the applied filters.
    description: A filter used to restrict the results of describe calls. You can use multiple filters to return results that meet all applied filter requirements.
  FilterValue:
    type: string
    pattern: '^[0-9a-zA-Z\*\.\\/\?\-\_]*$'
    description: The value for a filter.
    minLength: 1
    maxLength: 128
  NetworkInterfaceId:
    type: string
    pattern: '^(eni-[0-9a-f]{8,})$'
    description: 'An elastic network interface ID. An elastic network interface is a logical networking component in a virtual private cloud (VPC) that represents a virtual network card. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic Network Interfaces</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
    minLength: 12
    maxLength: 21
  SecurityGroupId:
    type: string
    pattern: '^(sg-[0-9a-f]{8,})$'
    description: 'The ID of your Amazon EC2 security group. This ID is used to control network access to the endpoint that Amazon FSx creates on your behalf in each subnet. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html">Amazon EC2 Security Groups for Linux Instances</a> in the <i>Amazon EC2 User Guide</i>.'
    minLength: 11
    maxLength: 20
  SubnetId:
    type: string
    pattern: '^(subnet-[0-9a-f]{8,})$'
    description: 'The ID for a subnet. A <i>subnet</i> is a range of IP addresses in your virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html">VPC and Subnets</a> in the <i>Amazon VPC User Guide.</i> '
    minLength: 15
    maxLength: 24
  TagKey:
    type: string
    description: A string of 1 to 128 characters that specifies the key for a tag. Tag keys must be unique for the resource to which they are attached.
    minLength: 1
    maxLength: 128
  TagValue:
    type: string
    description: A string of 0 to 256 characters that specifies the value for a tag. Tag values can be null and don't have to be unique in a tag set.
    minLength: 0
    maxLength: 256
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: 'A value that specifies the <code>TagKey</code>, the name of the tag. Tag keys must be unique for the resource to which they are attached.'
      Value:
        $ref: '#/definitions/TagValue'
        description: 'A value that specifies the <code>TagValue</code>, the value assigned to the corresponding tag key. Tag values can be null and don''t have to be unique in a tag set. For example, you can have a key-value pair in a tag set of <code>finances : April</code> and also of <code>payroll : April</code>.'
    description: Specifies a key-value pair for a resource tag.
  TagKeys:
    type: array
    description: 'A list of <code>TagKey</code> values, with a maximum of 50 elements.'
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 50
  UpdateFileSystemLustreConfiguration:
    type: object
    properties:
      WeeklyMaintenanceStartTime:
        $ref: '#/definitions/WeeklyTime'
        description: 'The preferred time to perform weekly maintenance, in the UTC time zone.'
    description: The configuration object for Amazon FSx for Lustre file systems used in the <code>UpdateFileSystem</code> operation.
  UpdateFileSystemWindowsConfiguration:
    type: object
    properties:
      WeeklyMaintenanceStartTime:
        $ref: '#/definitions/WeeklyTime'
        description: 'The preferred time to perform weekly maintenance, in the UTC time zone.'
      DailyAutomaticBackupStartTime:
        $ref: '#/definitions/DailyTime'
        description: 'The preferred time to take daily automatic backups, in the UTC time zone.'
      AutomaticBackupRetentionDays:
        $ref: '#/definitions/AutomaticBackupRetentionDays'
        description: The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 35 days.
    description: The configuration object for the Microsoft Windows file system used in the <code>UpdateFileSystem</code> operation.
