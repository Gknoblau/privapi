swagger: '2.0'
schemes:
  - https
host: firebasehosting.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: The Firebase Hosting REST API enables programmatic and customizable deployments to your Firebase-hosted sites. Use this REST API to deploy new or updated hosting configurations and content files.
  title: Firebase Hosting
  version: v1beta1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.18
      format: google
      url: 'https://firebasehosting.googleapis.com/$discovery/rest?version=v1beta1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: firebasehosting
externalDocs:
  url: 'https://firebase.google.com/docs/hosting/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/cloud-platform.read-only': View your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/firebase': View and administer all your Firebase data and settings
      'https://www.googleapis.com/auth/firebase.readonly': View all your Firebase data and settings
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: sites
paths:
  '/v1beta1/{name}':
    delete:
      description: Deletes the existing domain mapping on the specified site.
      operationId: firebasehosting.sites.domains.delete
      parameters:
        - description: Required. The name of the domain association to delete.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - sites
    get:
      description: Gets a domain mapping on the specified site.
      operationId: firebasehosting.sites.domains.get
      parameters:
        - description: Required. The name of the domain configuration to get.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Domain'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase.readonly'
      tags:
        - sites
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: |-
        Updates the specified metadata for a version. Note that this method will
        fail with `FAILED_PRECONDITION` in the event of an invalid state
        transition. The only valid transition for a version is currently from a
        `CREATED` status to a `FINALIZED` status.
        Use [`DeleteVersion`](../sites.versions/delete) to set the status of a
        version to `DELETED`.
      operationId: firebasehosting.sites.versions.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Version'
        - description: |-
            The unique identifier for a version, in the format:
            <code>sites/<var>site-name</var>/versions/<var>versionID</var></code>
            This name is provided in the response body when you call the
            [`CreateVersion`](../sites.versions/create) endpoint.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            A set of field names from your [version](../sites.versions) that you want
            to update.
            <br>A field will be overwritten if, and only if, it's in the mask.
            <br>If a mask is not provided then a default mask of only
            [`status`](../sites.versions#Version.FIELDS.status) will be used.
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Version'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - sites
    put:
      description: |-
        Updates the specified domain mapping, creating the mapping as if it does
        not exist.
      operationId: firebasehosting.sites.domains.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Domain'
        - description: |-
            Required. The name of the domain association to update or create, if an
            association doesn't already exist.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Domain'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - sites
  '/v1beta1/{parent}/domains':
    get:
      description: Lists the domains for the specified site.
      operationId: firebasehosting.sites.domains.list
      parameters:
        - description: The page size to return. Defaults to 50.
          in: query
          name: pageSize
          type: integer
        - description: 'The next_page_token from a previous request, if provided.'
          in: query
          name: pageToken
          type: string
        - description: |-
            Required. The parent for which to list domains, in the format:
            <code>sites/<var>site-name</var></code>
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListDomainsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase.readonly'
      tags:
        - sites
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a domain mapping on the specified site.
      operationId: firebasehosting.sites.domains.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Domain'
        - description: |-
            Required. The parent to create the domain association for, in the format:
            <code>sites/<var>site-name</var></code>
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Domain'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - sites
  '/v1beta1/{parent}/files':
    get:
      description: Lists the remaining files to be uploaded for the specified version.
      operationId: firebasehosting.sites.versions.files.list
      parameters:
        - description: The page size to return. Defaults to 1000.
          in: query
          name: pageSize
          type: integer
        - description: |-
            The next_page_token from a previous request, if provided. This will be the
            encoded version of a firebase.hosting.proto.metadata.ListFilesPageToken.
          in: query
          name: pageToken
          type: string
        - description: |-
            Required. The parent to list files for, in the format:
            <code>sites/<var>site-name</var>/versions/<var>versionID</var></code>
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: The type of files in the version that should be listed.
          enum:
            - STATUS_UNSPECIFIED
            - EXPECTED
            - ACTIVE
          in: query
          name: status
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListVersionFilesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase.readonly'
      tags:
        - sites
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1beta1/{parent}/releases':
    get:
      description: Lists the releases that have been created on the specified site.
      operationId: firebasehosting.sites.releases.list
      parameters:
        - description: The page size to return. Defaults to 100.
          in: query
          name: pageSize
          type: integer
        - description: 'The next_page_token from a previous request, if provided.'
          in: query
          name: pageToken
          type: string
        - description: |-
            Required. The parent for which to list files, in the format:
            <code>sites/<var>site-name</var></code>
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListReleasesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform.read-only'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase.readonly'
      tags:
        - sites
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a new release which makes the content of the specified version
        actively display on the site.
      operationId: firebasehosting.sites.releases.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Release'
        - description: |-
            The site that the release belongs to, in the format:
            <code>sites/<var>site-name</var></code>
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The unique identifier for a version, in the format:
            <code>/sites/<var>site-name</var>/versions/<var>versionID</var></code>
            The <var>site-name</var> in this version identifier must match the
            <var>site-name</var> in the `parent` parameter.
            <br>
            <br>This query parameter must be empty if the `type` field in the
            request body is `SITE_DISABLE`.
          in: query
          name: versionName
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Release'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - sites
  '/v1beta1/{parent}/versions':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a new version for a site.
      operationId: firebasehosting.sites.versions.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Version'
        - description: |-
            Required. The parent to create the version for, in the format:
            <code>sites/<var>site-name</var></code>
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The self-reported size of the version. This value is used for a pre-emptive
            quota check for legacy version uploads.
          in: query
          name: sizeBytes
          type: string
        - description: |-
            A unique id for the new version. This is only specified for legacy version
            creations.
          in: query
          name: versionId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Version'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - sites
  '/v1beta1/{parent}:populateFiles':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Adds content files to a version.
      operationId: firebasehosting.sites.versions.populateFiles
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PopulateVersionFilesRequest'
        - description: |-
            Required. The version to add files to, in the format:
            <code>sites/<var>site-name</var>/versions/<var>versionID</var></code>
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PopulateVersionFilesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/firebase'
      tags:
        - sites
definitions:
  ActingUser:
    description: |-
      Contains metadata about the user who performed an action, such as creating
      a release or finalizing a version.
    properties:
      email:
        description: The email address of the user when the user performed the action.
        type: string
      imageUrl:
        description: |-
          A profile image URL for the user. May not be present if the user has
          changed their email address or deleted their account.
        type: string
    type: object
  CertDnsChallenge:
    description: Represents a DNS certificate challenge.
    properties:
      domainName:
        description: The domain name upon which the DNS challenge must be satisfied.
        type: string
      token:
        description: |-
          The value that must be present as a TXT record on the domain name to
          satisfy the challenge.
        type: string
    type: object
  CertHttpChallenge:
    description: Represents an HTTP certificate challenge.
    properties:
      path:
        description: |-
          The URL path on which to serve the specified token to satisfy the
          certificate challenge.
        type: string
      token:
        description: |-
          The token to serve at the specified URL path to satisfy the certificate
          challenge.
        type: string
    type: object
  CloudRunRewrite:
    description: |-
      A configured rewrite that will direct any requests to a Cloud Run service. If
      the Cloud Run service does not exist when setting or updating your Firebase
      Hosting configuration then the request will fail. Any errors from the Cloud
      Run service (including when the service has been deleted) will be passed back
      down to the end user.
    properties:
      region:
        description: |-
          Optional. The region where the Cloud Run service is hosted.  Defaults to
          `us-central1` if not supplied.
        type: string
      serviceId:
        description: Required. User supplied ID of the Cloud Run service.
        type: string
    type: object
  Domain:
    description: The intended behavior and status information of a domain.
    properties:
      domainName:
        description: Required. The domain name of the association.
        type: string
      domainRedirect:
        $ref: '#/definitions/DomainRedirect'
        description: 'If set, the domain should redirect with the provided parameters.'
      provisioning:
        $ref: '#/definitions/DomainProvisioning'
        description: |-
          Output only. Information about the provisioning of certificates and the
          health of the DNS resolution for the domain.
      site:
        description: Required. The site name of the association.
        type: string
      status:
        description: Output only. Additional status of the domain association.
        enum:
          - DOMAIN_STATUS_UNSPECIFIED
          - DOMAIN_CHANGE_PENDING
          - DOMAIN_ACTIVE
          - DOMAIN_VERIFICATION_REQUIRED
          - DOMAIN_VERIFICATION_LOST
        type: string
      updateTime:
        description: Output only. The time at which the domain was last updated.
        format: google-datetime
        type: string
    type: object
  DomainProvisioning:
    description: The current certificate provisioning status information for a domain.
    properties:
      certChallengeDiscoveredTxt:
        description: |-
          The TXT records (for the certificate challenge) that were found at the last
          DNS fetch.
        items:
          type: string
        type: array
      certChallengeDns:
        $ref: '#/definitions/CertDnsChallenge'
        description: The DNS challenge for generating a certificate.
      certChallengeHttp:
        $ref: '#/definitions/CertHttpChallenge'
        description: The HTTP challenge for generating a certificate.
      certStatus:
        description: |-
          The certificate provisioning status; updated when Firebase Hosting
          provisions an SSL certificate for the domain.
        enum:
          - CERT_STATUS_UNSPECIFIED
          - CERT_PENDING
          - CERT_MISSING
          - CERT_PROCESSING
          - CERT_PROPAGATING
          - CERT_ACTIVE
          - CERT_ERROR
        type: string
      discoveredIps:
        description: The IPs found at the last DNS fetch.
        items:
          type: string
        type: array
      dnsFetchTime:
        description: The time at which the last DNS fetch occurred.
        format: google-datetime
        type: string
      dnsStatus:
        description: The DNS record match status as of the last DNS fetch.
        enum:
          - DNS_STATUS_UNSPECIFIED
          - DNS_PENDING
          - DNS_MISSING
          - DNS_PARTIAL_MATCH
          - DNS_MATCH
          - DNS_EXTRANEOUS_MATCH
        type: string
      expectedIps:
        description: The list of IPs to which the domain is expected to resolve.
        items:
          type: string
        type: array
    type: object
  DomainRedirect:
    description: |-
      Defines the behavior of a domain-level redirect. Domain redirects preserve
      the path of the redirect but replace the requested domain with the one
      specified in the redirect configuration.
    properties:
      domainName:
        description: Required. The domain name to redirect to.
        type: string
      type:
        description: Required. The redirect status code.
        enum:
          - REDIRECT_TYPE_UNSPECIFIED
          - MOVED_PERMANENTLY
        type: string
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  Header:
    description: |-
      A [`header`](/docs/hosting/full-config#headers) defines custom headers to
      add to a response should the request URL path match the pattern.
    properties:
      glob:
        description: |-
          Required. The user-supplied
          [glob pattern](/docs/hosting/full-config#glob_pattern_matching) to match
          against the request URL path.
        type: string
      headers:
        additionalProperties:
          type: string
        description: Required. The additional headers to add to the response.
        type: object
    type: object
  ListDomainsResponse:
    properties:
      domains:
        description: 'The list of domains, if any exist.'
        items:
          $ref: '#/definitions/Domain'
        type: array
      nextPageToken:
        description: 'The pagination token, if more results exist.'
        type: string
    type: object
  ListReleasesResponse:
    properties:
      nextPageToken:
        description: |-
          If there are additional releases remaining beyond the ones in this
          response, then supply this token in the next
          [`list`](../sites.versions.files/list) call to continue with the next set
          of releases.
        type: string
      releases:
        description: 'The list of hashes of files that still need to be uploaded, if any exist.'
        items:
          $ref: '#/definitions/Release'
        type: array
    type: object
  ListVersionFilesResponse:
    properties:
      files:
        description: The list path/hashes in the specified version.
        items:
          $ref: '#/definitions/VersionFile'
        type: array
      nextPageToken:
        description: 'The pagination token, if more results exist.'
        type: string
    type: object
  PopulateVersionFilesRequest:
    properties:
      files:
        additionalProperties:
          type: string
        description: |-
          A set of file paths to the hashes corresponding to assets that should be
          added to the version. Note that a file path to an empty hash will remove
          the path from the version. Calculate a hash by Gzipping the file then
          taking the SHA256 hash of the newly compressed file.
        type: object
    type: object
  PopulateVersionFilesResponse:
    properties:
      uploadRequiredHashes:
        description: |-
          The content hashes of the specified files that need to be uploaded to the
          specified endpoint.
        items:
          type: string
        type: array
      uploadUrl:
        description: |-
          The URL to which the files should be uploaded, in the format:
          <br>"https://upload-firebasehosting.googleapis.com/upload/sites/<var>site-name</var>/versions/<var>versionID</var>/files".
          <br>Perform a multipart `POST` of the Gzipped file contents to the URL
          using a forward slash and the hash of the file appended to the end.
        type: string
    type: object
  Redirect:
    description: |-
      A [`redirect`](/docs/hosting/full-config#redirects) represents the
      configuration for returning an HTTP redirect response given a matching
      request URL path.
    properties:
      glob:
        description: |-
          Required. The user-supplied
          [glob pattern](/docs/hosting/full-config#glob_pattern_matching) to match
          against the request URL path.
        type: string
      location:
        description: |-
          Required. The value to put in the HTTP location header of the response.
          <br>The location can contain capture group values from the pattern using
          a `:` prefix to identify the segment and an optional `*` to capture the
          rest of the URL.
          For example:
          <code>"glob": "/:capture*",
          <br>"statusCode": 301,
          <br>"location": "https://example.com/foo/:capture"</code>
        type: string
      statusCode:
        description: |-
          Required. The status HTTP code to return in the response. It must be a
          valid 3xx status code.
        format: int32
        type: integer
    type: object
  Release:
    description: |-
      A `Release` is a particular
      [collection of configurations and files](sites.versions)
      that is set to be public at a particular time.
    properties:
      message:
        description: |-
          The deploy description when the release was created. The value can be up to
          512&nbsp;characters.
        type: string
      name:
        description: |-
          Output only. The unique identifier for the release, in the format:
          <code>sites/<var>site-name</var>/releases/<var>releaseID</var></code>
          This name is provided in the response body when you call the
          [`CreateRelease`](sites.releases/create) endpoint.
        type: string
      releaseTime:
        description: Output only. The time at which the version is set to be public.
        format: google-datetime
        type: string
      releaseUser:
        $ref: '#/definitions/ActingUser'
        description: Output only. Identifies the user who created the release.
      type:
        description: |-
          Explains the reason for the release.
          <br>Specify a value for this field only when creating a `SITE_DISABLE`
          type release.
        enum:
          - TYPE_UNSPECIFIED
          - DEPLOY
          - ROLLBACK
          - SITE_DISABLE
        type: string
      version:
        $ref: '#/definitions/Version'
        description: Output only.  The configuration and content that was released.
    type: object
  Rewrite:
    description: |-
      A [`rewrite`](/docs/hosting/full-config#rewrites) represents an internal
      content rewrite on the version. If the pattern matches, the request will be
      handled as if it were to the destination path specified in the
      configuration.
    properties:
      dynamicLinks:
        description: The request will be forwarded to Firebase Dynamic Links.
        type: boolean
      function:
        description: |-
          The function to proxy requests to. Must match the exported function
          name exactly.
        type: string
      glob:
        description: |-
          Required. The user-supplied
          [glob pattern](/docs/hosting/full-config#glob_pattern_matching) to match
          against the request URL path.
        type: string
      path:
        description: The URL path to rewrite the request to.
        type: string
      run:
        $ref: '#/definitions/CloudRunRewrite'
        description: The request will be forwarded to Cloud Run.
    type: object
  ServingConfig:
    description: |-
      The configuration for how incoming requests to a site should be routed and
      processed before serving content. The patterns are matched and applied
      according to a specific
      [priority order](/docs/hosting/full-config#hosting_priority_order).
    properties:
      appAssociation:
        description: How to handle well known App Association files.
        enum:
          - AUTO
          - NONE
        type: string
      cleanUrls:
        description: Defines whether to drop the file extension from uploaded files.
        type: boolean
      headers:
        description: |-
          A list of custom response headers that are added to the content if the
          request URL path matches the glob.
        items:
          $ref: '#/definitions/Header'
        type: array
      redirects:
        description: |-
          A list of globs that will cause the response to redirect to another
          location.
        items:
          $ref: '#/definitions/Redirect'
        type: array
      rewrites:
        description: |-
          A list of rewrites that will act as if the service were given the
          destination URL.
        items:
          $ref: '#/definitions/Rewrite'
        type: array
      trailingSlashBehavior:
        description: Defines how to handle a trailing slash in the URL path.
        enum:
          - TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
          - ADD
          - REMOVE
        type: string
    type: object
  SiteConfig:
    description: |-
      A `SiteConfig` contains metadata associated with a specific site that
      controls Firebase Hosting serving behavior
    properties:
      maxVersions:
        description: |-
          The number of FINALIZED versions that will be held for a site before
          automatic deletion. When a new version is deployed, content for versions
          in storage in excess of this number will be deleted, and will no longer be
          billed for storage usage. Oldest versions will be deleted first; sites are
          created with an unlimited number of max_versions by default.
        format: int64
        type: string
    type: object
  Version:
    description: |-
      A `Version` is the collection of configuration and
      [static files](sites.versions.files) that determine how a site is displayed.
    properties:
      config:
        $ref: '#/definitions/ServingConfig'
        description: |-
          The configuration for the behavior of the site. This configuration exists
          in the [`firebase.json`](/docs/cli/#the_firebasejson_file) file.
      createTime:
        description: Output only. The time at which the version was created.
        format: google-datetime
        type: string
      createUser:
        $ref: '#/definitions/ActingUser'
        description: Output only. Identifies the user who created the version.
      deleteTime:
        description: Output only. The time at which the version was `DELETED`.
        format: google-datetime
        type: string
      deleteUser:
        $ref: '#/definitions/ActingUser'
        description: Output only. Identifies the user who `DELETED` the version.
      fileCount:
        description: |-
          Output only. The total number of files associated with the version.
          <br>This value is calculated after a version is `FINALIZED`.
        format: int64
        type: string
      finalizeTime:
        description: Output only. The time at which the version was `FINALIZED`.
        format: google-datetime
        type: string
      finalizeUser:
        $ref: '#/definitions/ActingUser'
        description: Output only. Identifies the user who `FINALIZED` the version.
      labels:
        additionalProperties:
          type: string
        description: The labels used for extra metadata and/or filtering.
        type: object
      name:
        description: |-
          The unique identifier for a version, in the format:
          <code>sites/<var>site-name</var>/versions/<var>versionID</var></code>
          This name is provided in the response body when you call the
          [`CreateVersion`](../sites.versions/create) endpoint.
        type: string
      status:
        description: |-
          The deploy status of a version.
          <br>
          <br>For a successful deploy, call the
          [`CreateVersion`](sites.versions/create) endpoint to make a new version
          (`CREATED` status),
          [upload all desired files](sites.versions/populateFiles) to the version,
          then [update](sites.versions/patch) the version to the `FINALIZED` status.
          <br>
          <br>Note that if you leave the version in the `CREATED` state for more
          than 12&nbsp;hours, the system will automatically mark the version as
          `ABANDONED`.
          <br>
          <br>You can also change the status of a version to `DELETED` by calling the
          [`DeleteVersion`](sites.versions/delete) endpoint.
        enum:
          - VERSION_STATUS_UNSPECIFIED
          - CREATED
          - FINALIZED
          - DELETED
          - ABANDONED
          - EXPIRED
        type: string
      versionBytes:
        description: |-
          Output only. The total stored bytesize of the version.
          <br>This value is calculated after a version is `FINALIZED`.
        format: int64
        type: string
    type: object
  VersionFile:
    description: A static content file that is part of a version.
    properties:
      hash:
        description: The SHA256 content hash of the file.
        type: string
      path:
        description: The URI at which the file's content should display.
        type: string
      status:
        description: |-
          Output only. The current status of a particular file in the specified
          version.
          <br>The value will be either `pending upload` or `uploaded`.
        enum:
          - STATUS_UNSPECIFIED
          - EXPECTED
          - ACTIVE
        type: string
    type: object
