swagger: '2.0'
schemes:
  - https
host: firestore.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: |
    Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development.
  title: Cloud Firestore
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - backend
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.11
      format: google
      url: 'https://firestore.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: firestore
externalDocs:
  url: 'https://cloud.google.com/firestore'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/datastore': View and manage your Google Cloud Datastore data
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
paths:
  '/v1/{name}':
    delete:
      description: |-
        Deletes a long-running operation. This method indicates that the client is
        no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: firestore.projects.databases.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
    get:
      description: Gets information about a location.
      operationId: firestore.projects.locations.get
      parameters:
        - description: Resource name for the location.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Location'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: |-
        Updates a field configuration. Currently, field updates apply only to
        single field index configuration. However, calls to
        FirestoreAdmin.UpdateField should provide a field mask to avoid
        changing any configuration that the caller isn't aware of. The field mask
        should be specified as: `{ paths: "index_config" }`.

        This call returns a google.longrunning.Operation which may be used to
        track the status of the field update. The metadata for
        the operation will be the type FieldOperationMetadata.

        To configure the default field settings for the database, use
        the special `Field` with resource name:
        `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
      operationId: firestore.projects.databases.collectionGroups.fields.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleFirestoreAdminV1Field'
        - description: |-
            A field name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`

            A field path may be a simple field name, e.g. `address` or a path to fields
            within map_value , e.g. `address.city`,
            or a special field path. The only valid special field is `*`, which
            represents any field.

            Field paths may be quoted using ` (backtick). The only character that needs
            to be escaped within a quoted field path is the backtick character itself,
            escaped using a backslash. Special characters in field paths that
            must be quoted include: `*`, `.`,
            ``` (backtick), `[`, `]`, as well as any ascii symbolic characters.

            Examples:
            (Note: Comments here are written in markdown syntax, so there is an
             additional layer of backticks to represent a code block)
            `\`address.city\`` represents a field named `address.city`, not the map key
            `city` in the field `address`.
            `\`*\`` represents a field named `*`, not any field.

            A special `Field` contains the default indexing settings for all fields.
            This field's resource name is:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`
            Indexes defined on this `Field` will be applied to all fields which do not
            have their own `Field` index configuration.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            A mask, relative to the field. If specified, only configuration specified
            by this field_mask will be updated in the field.
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleLongrunningOperation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
  '/v1/{name}/locations':
    get:
      description: Lists information about the supported locations for this service.
      operationId: firestore.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: 'The resource that owns the locations collection, if applicable.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListLocationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{name}/operations':
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: firestore.projects.databases.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleLongrunningListOperationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{name}:cancel':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Starts asynchronous cancellation on a long-running operation.  The server
        makes a best effort to cancel the operation, but success is not
        guaranteed.  If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
        Operations.GetOperation or
        other methods to check whether the cancellation succeeded or whether the
        operation completed despite cancellation. On successful cancellation,
        the operation is not deleted; instead, it becomes an operation with
        an Operation.error value with a google.rpc.Status.code of 1,
        corresponding to `Code.CANCELLED`.
      operationId: firestore.projects.databases.operations.cancel
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleLongrunningCancelOperationRequest'
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
  '/v1/{name}:exportDocuments':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Exports a copy of all or a subset of documents from Google Cloud Firestore
        to another storage system, such as Google Cloud Storage. Recent updates to
        documents may not be reflected in the export. The export occurs in the
        background and its progress can be monitored and managed via the
        Operation resource that is created. The output of an export may only be
        used once the associated operation is done. If an export operation is
        cancelled before completion it may leave partial data behind in Google
        Cloud Storage.
      operationId: firestore.projects.databases.exportDocuments
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleFirestoreAdminV1ExportDocumentsRequest'
        - description: |-
            Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleLongrunningOperation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
  '/v1/{name}:importDocuments':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Imports documents into Google Cloud Firestore. Existing documents with the
        same name are overwritten. The import occurs in the background and its
        progress can be monitored and managed via the Operation resource that is
        created. If an ImportDocuments operation is cancelled, it is possible
        that a subset of the data has already been imported to Cloud Firestore.
      operationId: firestore.projects.databases.importDocuments
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleFirestoreAdminV1ImportDocumentsRequest'
        - description: |-
            Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleLongrunningOperation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
  '/v1/{parent}/fields':
    get:
      description: |-
        Lists the field configuration and metadata for this database.

        Currently, FirestoreAdmin.ListFields only supports listing fields
        that have been explicitly overridden. To issue this query, call
        FirestoreAdmin.ListFields with the filter set to
        `indexConfig.usesAncestorConfig:false`.
      operationId: firestore.projects.databases.collectionGroups.fields.list
      parameters:
        - description: |-
            The filter to apply to list results. Currently,
            FirestoreAdmin.ListFields only supports listing fields
            that have been explicitly overridden. To issue this query, call
            FirestoreAdmin.ListFields with the filter set to
            `indexConfig.usesAncestorConfig:false`.
          in: query
          name: filter
          type: string
        - description: The number of results to return.
          in: query
          name: pageSize
          type: integer
        - description: |-
            A page token, returned from a previous call to
            FirestoreAdmin.ListFields, that may be used to get the next
            page of results.
          in: query
          name: pageToken
          type: string
        - description: |-
            A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleFirestoreAdminV1ListFieldsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{parent}/indexes':
    get:
      description: Lists composite indexes.
      operationId: firestore.projects.databases.collectionGroups.indexes.list
      parameters:
        - description: The filter to apply to list results.
          in: query
          name: filter
          type: string
        - description: The number of results to return.
          in: query
          name: pageSize
          type: integer
        - description: |-
            A page token, returned from a previous call to
            FirestoreAdmin.ListIndexes, that may be used to get the next
            page of results.
          in: query
          name: pageToken
          type: string
        - description: |-
            A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleFirestoreAdminV1ListIndexesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a composite index. This returns a google.longrunning.Operation
        which may be used to track the status of the creation. The metadata for
        the operation will be the type IndexOperationMetadata.
      operationId: firestore.projects.databases.collectionGroups.indexes.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleFirestoreAdminV1Index'
        - description: |-
            A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/GoogleLongrunningOperation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/datastore'
      tags:
        - projects
definitions:
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  GoogleFirestoreAdminV1ExportDocumentsMetadata:
    description: |-
      Metadata for google.longrunning.Operation results from
      FirestoreAdmin.ExportDocuments.
    properties:
      collectionIds:
        description: Which collection ids are being exported.
        items:
          type: string
        type: array
      endTime:
        description: |-
          The time this operation completed. Will be unset if operation still in
          progress.
        format: google-datetime
        type: string
      operationState:
        description: The state of the export operation.
        enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
        type: string
      outputUriPrefix:
        description: Where the entities are being exported to.
        type: string
      progressBytes:
        $ref: '#/definitions/GoogleFirestoreAdminV1Progress'
        description: 'The progress, in bytes, of this operation.'
      progressDocuments:
        $ref: '#/definitions/GoogleFirestoreAdminV1Progress'
        description: 'The progress, in documents, of this operation.'
      startTime:
        description: The time this operation started.
        format: google-datetime
        type: string
    type: object
  GoogleFirestoreAdminV1ExportDocumentsRequest:
    description: The request for FirestoreAdmin.ExportDocuments.
    properties:
      collectionIds:
        description: Which collection ids to export. Unspecified means all collections.
        items:
          type: string
        type: array
      outputUriPrefix:
        description: |-
          The output URI. Currently only supports Google Cloud Storage URIs of the
          form: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name
          of the Google Cloud Storage bucket and `NAMESPACE_PATH` is an optional
          Google Cloud Storage namespace path. When
          choosing a name, be sure to consider Google Cloud Storage naming
          guidelines: https://cloud.google.com/storage/docs/naming.
          If the URI is a bucket (without a namespace path), a prefix will be
          generated based on the start time.
        type: string
    type: object
  GoogleFirestoreAdminV1ExportDocumentsResponse:
    description: Returned in the google.longrunning.Operation response field.
    properties:
      outputUriPrefix:
        description: |-
          Location of the output files. This can be used to begin an import
          into Cloud Firestore (this project or another project) after the operation
          completes successfully.
        type: string
    type: object
  GoogleFirestoreAdminV1Field:
    description: |-
      Represents a single field in the database.

      Fields are grouped by their "Collection Group", which represent all
      collections in the database with the same id.
    properties:
      indexConfig:
        $ref: '#/definitions/GoogleFirestoreAdminV1IndexConfig'
        description: |-
          The index configuration for this field. If unset, field indexing will
          revert to the configuration defined by the `ancestor_field`. To
          explicitly remove all indexes for this field, specify an index config
          with an empty list of indexes.
      name:
        description: |-
          A field name of the form
          `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`

          A field path may be a simple field name, e.g. `address` or a path to fields
          within map_value , e.g. `address.city`,
          or a special field path. The only valid special field is `*`, which
          represents any field.

          Field paths may be quoted using ` (backtick). The only character that needs
          to be escaped within a quoted field path is the backtick character itself,
          escaped using a backslash. Special characters in field paths that
          must be quoted include: `*`, `.`,
          ``` (backtick), `[`, `]`, as well as any ascii symbolic characters.

          Examples:
          (Note: Comments here are written in markdown syntax, so there is an
           additional layer of backticks to represent a code block)
          `\`address.city\`` represents a field named `address.city`, not the map key
          `city` in the field `address`.
          `\`*\`` represents a field named `*`, not any field.

          A special `Field` contains the default indexing settings for all fields.
          This field's resource name is:
          `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`
          Indexes defined on this `Field` will be applied to all fields which do not
          have their own `Field` index configuration.
        type: string
    type: object
  GoogleFirestoreAdminV1FieldOperationMetadata:
    description: |-
      Metadata for google.longrunning.Operation results from
      FirestoreAdmin.UpdateField.
    properties:
      endTime:
        description: |-
          The time this operation completed. Will be unset if operation still in
          progress.
        format: google-datetime
        type: string
      field:
        description: |-
          The field resource that this operation is acting on. For example:
          `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
        type: string
      indexConfigDeltas:
        description: |-
          A list of IndexConfigDelta, which describe the intent of this
          operation.
        items:
          $ref: '#/definitions/GoogleFirestoreAdminV1IndexConfigDelta'
        type: array
      progressBytes:
        $ref: '#/definitions/GoogleFirestoreAdminV1Progress'
        description: 'The progress, in bytes, of this operation.'
      progressDocuments:
        $ref: '#/definitions/GoogleFirestoreAdminV1Progress'
        description: 'The progress, in documents, of this operation.'
      startTime:
        description: The time this operation started.
        format: google-datetime
        type: string
      state:
        description: The state of the operation.
        enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
        type: string
    type: object
  GoogleFirestoreAdminV1ImportDocumentsMetadata:
    description: |-
      Metadata for google.longrunning.Operation results from
      FirestoreAdmin.ImportDocuments.
    properties:
      collectionIds:
        description: Which collection ids are being imported.
        items:
          type: string
        type: array
      endTime:
        description: |-
          The time this operation completed. Will be unset if operation still in
          progress.
        format: google-datetime
        type: string
      inputUriPrefix:
        description: The location of the documents being imported.
        type: string
      operationState:
        description: The state of the import operation.
        enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
        type: string
      progressBytes:
        $ref: '#/definitions/GoogleFirestoreAdminV1Progress'
        description: 'The progress, in bytes, of this operation.'
      progressDocuments:
        $ref: '#/definitions/GoogleFirestoreAdminV1Progress'
        description: 'The progress, in documents, of this operation.'
      startTime:
        description: The time this operation started.
        format: google-datetime
        type: string
    type: object
  GoogleFirestoreAdminV1ImportDocumentsRequest:
    description: The request for FirestoreAdmin.ImportDocuments.
    properties:
      collectionIds:
        description: |-
          Which collection ids to import. Unspecified means all collections included
          in the import.
        items:
          type: string
        type: array
      inputUriPrefix:
        description: |-
          Location of the exported files.
          This must match the output_uri_prefix of an ExportDocumentsResponse from
          an export that has completed successfully.
          See:
          google.firestore.admin.v1.ExportDocumentsResponse.output_uri_prefix.
        type: string
    type: object
  GoogleFirestoreAdminV1Index:
    description: |-
      Cloud Firestore indexes enable simple and complex queries against
      documents in a database.
    properties:
      fields:
        description: |-
          The fields supported by this index.

          For composite indexes, this is always 2 or more fields.
          The last field entry is always for the field path `__name__`. If, on
          creation, `__name__` was not specified as the last field, it will be added
          automatically with the same direction as that of the last field defined. If
          the final field in a composite index is not directional, the `__name__`
          will be ordered ASCENDING (unless explicitly specified).

          For single field indexes, this will always be exactly one entry with a
          field path equal to the field path of the associated field.
        items:
          $ref: '#/definitions/GoogleFirestoreAdminV1IndexField'
        type: array
      name:
        description: |-
          Output only.
          A server defined name for this index.
          The form of this name for composite indexes will be:
          `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}`
          For single field indexes, this field will be empty.
        type: string
      queryScope:
        description: |-
          Indexes with a collection query scope specified allow queries
          against a collection that is the child of a specific document, specified at
          query time, and that has the same collection id.

          Indexes with a collection group query scope specified allow queries against
          all collections descended from a specific document, specified at query
          time, and that have the same collection id as this index.
        enum:
          - QUERY_SCOPE_UNSPECIFIED
          - COLLECTION
        type: string
      state:
        description: |-
          Output only.
          The serving state of the index.
        enum:
          - STATE_UNSPECIFIED
          - CREATING
          - READY
          - NEEDS_REPAIR
        type: string
    type: object
  GoogleFirestoreAdminV1IndexConfig:
    description: The index configuration for this field.
    properties:
      ancestorField:
        description: |-
          Output only.
          Specifies the resource name of the `Field` from which this field's
          index configuration is set (when `uses_ancestor_config` is true),
          or from which it *would* be set if this field had no index configuration
          (when `uses_ancestor_config` is false).
        type: string
      indexes:
        description: The indexes supported for this field.
        items:
          $ref: '#/definitions/GoogleFirestoreAdminV1Index'
        type: array
      reverting:
        description: |-
          Output only
          When true, the `Field`'s index configuration is in the process of being
          reverted. Once complete, the index config will transition to the same
          state as the field specified by `ancestor_field`, at which point
          `uses_ancestor_config` will be `true` and `reverting` will be `false`.
        type: boolean
      usesAncestorConfig:
        description: |-
          Output only.
          When true, the `Field`'s index configuration is set from the
          configuration specified by the `ancestor_field`.
          When false, the `Field`'s index configuration is defined explicitly.
        type: boolean
    type: object
  GoogleFirestoreAdminV1IndexConfigDelta:
    description: Information about an index configuration change.
    properties:
      changeType:
        description: Specifies how the index is changing.
        enum:
          - CHANGE_TYPE_UNSPECIFIED
          - ADD
          - REMOVE
        type: string
      index:
        $ref: '#/definitions/GoogleFirestoreAdminV1Index'
        description: The index being changed.
    type: object
  GoogleFirestoreAdminV1IndexField:
    description: |-
      A field in an index.
      The field_path describes which field is indexed, the value_mode describes
      how the field value is indexed.
    properties:
      arrayConfig:
        description: Indicates that this field supports operations on `array_value`s.
        enum:
          - ARRAY_CONFIG_UNSPECIFIED
          - CONTAINS
        type: string
      fieldPath:
        description: |-
          Can be __name__.
          For single field indexes, this must match the name of the field or may
          be omitted.
        type: string
      order:
        description: |-
          Indicates that this field supports ordering by the specified order or
          comparing using =, <, <=, >, >=.
        enum:
          - ORDER_UNSPECIFIED
          - ASCENDING
          - DESCENDING
        type: string
    type: object
  GoogleFirestoreAdminV1IndexOperationMetadata:
    description: |-
      Metadata for google.longrunning.Operation results from
      FirestoreAdmin.CreateIndex.
    properties:
      endTime:
        description: |-
          The time this operation completed. Will be unset if operation still in
          progress.
        format: google-datetime
        type: string
      index:
        description: |-
          The index resource that this operation is acting on. For example:
          `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
        type: string
      progressBytes:
        $ref: '#/definitions/GoogleFirestoreAdminV1Progress'
        description: 'The progress, in bytes, of this operation.'
      progressDocuments:
        $ref: '#/definitions/GoogleFirestoreAdminV1Progress'
        description: 'The progress, in documents, of this operation.'
      startTime:
        description: The time this operation started.
        format: google-datetime
        type: string
      state:
        description: The state of the operation.
        enum:
          - OPERATION_STATE_UNSPECIFIED
          - INITIALIZING
          - PROCESSING
          - CANCELLING
          - FINALIZING
          - SUCCESSFUL
          - FAILED
          - CANCELLED
        type: string
    type: object
  GoogleFirestoreAdminV1ListFieldsResponse:
    description: The response for FirestoreAdmin.ListFields.
    properties:
      fields:
        description: The requested fields.
        items:
          $ref: '#/definitions/GoogleFirestoreAdminV1Field'
        type: array
      nextPageToken:
        description: |-
          A page token that may be used to request another page of results. If blank,
          this is the last page.
        type: string
    type: object
  GoogleFirestoreAdminV1ListIndexesResponse:
    description: The response for FirestoreAdmin.ListIndexes.
    properties:
      indexes:
        description: The requested indexes.
        items:
          $ref: '#/definitions/GoogleFirestoreAdminV1Index'
        type: array
      nextPageToken:
        description: |-
          A page token that may be used to request another page of results. If blank,
          this is the last page.
        type: string
    type: object
  GoogleFirestoreAdminV1LocationMetadata:
    description: The metadata message for google.cloud.location.Location.metadata.
    properties: {}
    type: object
  GoogleFirestoreAdminV1Progress:
    description: |-
      Describes the progress of the operation.
      Unit of work is generic and must be interpreted based on where Progress
      is used.
    properties:
      completedWork:
        description: The amount of work completed.
        format: int64
        type: string
      estimatedWork:
        description: The amount of work estimated.
        format: int64
        type: string
    type: object
  GoogleLongrunningCancelOperationRequest:
    description: The request message for Operations.CancelOperation.
    properties: {}
    type: object
  GoogleLongrunningListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/GoogleLongrunningOperation'
        type: array
    type: object
  GoogleLongrunningOperation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
        type: object
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  ListLocationsResponse:
    description: The response message for Locations.ListLocations.
    properties:
      locations:
        description: A list of locations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Location'
        type: array
      nextPageToken:
        description: The standard List next-page token.
        type: string
    type: object
  Location:
    description: A resource that represents Google Cloud Platform location.
    properties:
      displayName:
        description: |-
          The friendly name for this location, typically a nearby city name.
          For example, "Tokyo".
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Cross-service attributes for the location. For example

              {"cloud.googleapis.com/region": "us-east1"}
        type: object
      locationId:
        description: 'The canonical id for this location. For example: `"us-east1"`.'
        type: string
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          Service-specific metadata. For example the available capacity at the given
          location.
        type: object
      name:
        description: |-
          Resource name for the location, which may vary between implementations.
          For example: `"projects/example-project/locations/us-east1"`
        type: string
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
