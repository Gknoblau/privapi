swagger: '2.0'
schemes:
  - https
host: www.googleapis.com
basePath: /content/v2
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: 'Manages product items, inventory, and Merchant Center accounts for Google Shopping.'
  title: Content API for Shopping
  version: v2
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: 'https://cloud.google.com/_static/images/new-gcp-logo.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.18
      format: google
      url: 'https://www.googleapis.com/discovery/v1/apis/content/v2/rest'
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: content
externalDocs:
  url: 'https://developers.google.com/shopping-content'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/content': Manage your product listings and accounts for Google Shopping
    type: oauth2
parameters:
  alt:
    default: json
    description: Data format for the response.
    enum:
      - json
    in: query
    name: alt
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    in: query
    name: quotaUser
    type: string
  userIp:
    description: Deprecated. Please use quotaUser instead.
    in: query
    name: userIp
    type: string
tags:
  - name: accounts
  - name: accountstatuses
  - name: accounttax
  - name: datafeeds
  - name: datafeedstatuses
  - name: inventory
  - name: liasettings
  - name: orderinvoices
  - name: orderpayments
  - name: orderreports
  - name: orderreturns
  - name: orders
  - name: pos
  - name: products
  - name: productstatuses
  - name: shippingsettings
paths:
  /accounts/authinfo:
    get:
      description: Returns information about the authenticated user.
      operationId: content.accounts.authinfo
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountsAuthInfoResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  /accounts/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.'
      operationId: content.accounts.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AccountsCustomBatchRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
  /accountstatuses/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Retrieves multiple Merchant Center account statuses in a single request.
      operationId: content.accountstatuses.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AccountstatusesCustomBatchRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountstatusesCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accountstatuses
  /accounttax/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Retrieves and updates tax settings of multiple accounts in a single request.
      operationId: content.accounttax.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AccounttaxCustomBatchRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccounttaxCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
  /datafeeds/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      operationId: content.datafeeds.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DatafeedsCustomBatchRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatafeedsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
  /datafeedstatuses/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      operationId: content.datafeedstatuses.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DatafeedstatusesCustomBatchRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatafeedstatusesCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeedstatuses
  /inventory/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Updates price and availability for multiple products or stores in a single request. This operation does not update the expiration date of the products.
      operationId: content.inventory.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InventoryCustomBatchRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InventoryCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - inventory
  /liasettings/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Retrieves and/or updates the LIA settings of multiple accounts in a single request.
      operationId: content.liasettings.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LiasettingsCustomBatchRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiasettingsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
  /liasettings/posdataproviders:
    get:
      description: Retrieves the list of POS data providers that have active settings for the all eiligible countries.
      operationId: content.liasettings.listposdataproviders
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiasettingsListPosDataProvidersResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  /orders/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Retrieves or modifies multiple orders in a single request.
      operationId: content.orders.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersCustomBatchRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  /pos/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Batches multiple POS-related calls in a single request.
      operationId: content.pos.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PosCustomBatchRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PosCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - pos
  /products/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Retrieves, inserts, and deletes multiple products in a single request.'
      operationId: content.products.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProductsCustomBatchRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ProductsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
  /productstatuses/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Gets the statuses of multiple products in a single request.
      operationId: content.productstatuses.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProductstatusesCustomBatchRequest'
        - description: Flag to include full product data in the results of this request. The default value is false.
          in: query
          name: includeAttributes
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ProductstatusesCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - productstatuses
  /shippingsettings/batch:
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Retrieves and updates the shipping settings of multiple accounts in a single request.
      operationId: content.shippingsettings.custombatch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ShippingsettingsCustomBatchRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ShippingsettingsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
  '/{merchantId}/accounts':
    get:
      description: Lists the sub-accounts in your Merchant Center account.
      operationId: content.accounts.list
      parameters:
        - description: 'The maximum number of accounts to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a Merchant Center sub-account.
      operationId: content.accounts.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Account'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Account'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
  '/{merchantId}/accounts/{accountId}':
    delete:
      description: Deletes a Merchant Center sub-account.
      operationId: content.accounts.delete
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - default: false
          description: Flag to delete sub-accounts with products. The default value is false.
          in: query
          name: force
          type: boolean
        - description: 'The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    get:
      description: Retrieves a Merchant Center account.
      operationId: content.accounts.get
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Account'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates a Merchant Center account. This method supports patch semantics.
      operationId: content.accounts.patch
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Account'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Account'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    put:
      description: Updates a Merchant Center account.
      operationId: content.accounts.update
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Account'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Account'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
  '/{merchantId}/accounts/{accountId}/claimwebsite':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Claims the website of a Merchant Center sub-account.
      operationId: content.accounts.claimwebsite
      parameters:
        - description: The ID of the account whose website is claimed.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
        - description: 'Only available to selected merchants. When set to True, this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account.'
          in: query
          name: overwrite
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountsClaimWebsiteResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
  '/{merchantId}/accounts/{accountId}/link':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Performs an action on a link between a Merchant Center account and another account.
      operationId: content.accounts.link
      parameters:
        - description: The ID of the account that should be linked.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AccountsLinkRequest'
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountsLinkResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
  '/{merchantId}/accountstatuses':
    get:
      description: Lists the statuses of the sub-accounts in your Merchant Center account.
      operationId: content.accountstatuses.list
      parameters:
        - collectionFormat: multi
          description: 'If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.'
          in: query
          items:
            type: string
          name: destinations
          type: array
        - description: 'The maximum number of account statuses to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountstatusesListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accountstatuses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/accountstatuses/{accountId}':
    get:
      description: Retrieves the status of a Merchant Center account. Multi-client accounts can only call this method for sub-accounts.
      operationId: content.accountstatuses.get
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          type: string
        - collectionFormat: multi
          description: 'If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.'
          in: query
          items:
            type: string
          name: destinations
          type: array
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountStatus'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accountstatuses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/accounttax':
    get:
      description: Lists the tax settings of the sub-accounts in your Merchant Center account.
      operationId: content.accounttax.list
      parameters:
        - description: 'The maximum number of tax settings to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccounttaxListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/accounttax/{accountId}':
    get:
      description: Retrieves the tax settings of the account.
      operationId: content.accounttax.get
      parameters:
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountTax'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates the tax settings of the account. This method supports patch semantics.
      operationId: content.accounttax.patch
      parameters:
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AccountTax'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountTax'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
    put:
      description: Updates the tax settings of the account.
      operationId: content.accounttax.update
      parameters:
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AccountTax'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountTax'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
  '/{merchantId}/datafeeds':
    get:
      description: Lists the configurations for datafeeds in your Merchant Center account.
      operationId: content.datafeeds.list
      parameters:
        - description: 'The maximum number of products to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatafeedsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Registers a datafeed configuration with your Merchant Center account.
      operationId: content.datafeeds.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Datafeed'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Datafeed'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
  '/{merchantId}/datafeeds/{datafeedId}':
    delete:
      description: Deletes a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.delete
      parameters:
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
    get:
      description: Retrieves a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.get
      parameters:
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          type: string
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Datafeed'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates a datafeed configuration of your Merchant Center account. This method supports patch semantics.
      operationId: content.datafeeds.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Datafeed'
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Datafeed'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
    put:
      description: Updates a datafeed configuration of your Merchant Center account.
      operationId: content.datafeeds.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Datafeed'
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Datafeed'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
  '/{merchantId}/datafeeds/{datafeedId}/fetchNow':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Invokes a fetch for the datafeed in your Merchant Center account.
      operationId: content.datafeeds.fetchnow
      parameters:
        - description: The ID of the datafeed to be fetched.
          in: path
          name: datafeedId
          required: true
          type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatafeedsFetchNowResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
  '/{merchantId}/datafeedstatuses':
    get:
      description: Lists the statuses of the datafeeds in your Merchant Center account.
      operationId: content.datafeedstatuses.list
      parameters:
        - description: 'The maximum number of products to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatafeedstatusesListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeedstatuses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/datafeedstatuses/{datafeedId}':
    get:
      description: Retrieves the status of a datafeed from your Merchant Center account.
      operationId: content.datafeedstatuses.get
      parameters:
        - description: 'The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.'
          in: query
          name: country
          type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          type: string
        - description: 'The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.'
          in: query
          name: language
          type: string
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DatafeedStatus'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeedstatuses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/inventory/{storeCode}/products/{productId}':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Updates price and availability of a product in your Merchant Center account.
      operationId: content.inventory.set
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InventorySetRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The REST id of the product for which to update price and availability.
          in: path
          name: productId
          required: true
          type: string
        - description: The code of the store for which to update price and availability. Use online to update price and availability of an online product.
          in: path
          name: storeCode
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InventorySetResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - inventory
  '/{merchantId}/liasettings':
    get:
      description: Lists the LIA settings of the sub-accounts in your Merchant Center account.
      operationId: content.liasettings.list
      parameters:
        - description: 'The maximum number of LIA settings to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiasettingsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/liasettings/{accountId}':
    get:
      description: Retrieves the LIA settings of the account.
      operationId: content.liasettings.get
      parameters:
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiaSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates the LIA settings of the account. This method supports patch semantics.
      operationId: content.liasettings.patch
      parameters:
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LiaSettings'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiaSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
    put:
      description: Updates the LIA settings of the account.
      operationId: content.liasettings.update
      parameters:
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LiaSettings'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiaSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
  '/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts':
    get:
      description: Retrieves the list of accessible Google My Business accounts.
      operationId: content.liasettings.getaccessiblegmbaccounts
      parameters:
        - description: The ID of the account for which to retrieve accessible Google My Business accounts.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiasettingsGetAccessibleGmbAccountsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/liasettings/{accountId}/requestgmbaccess':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Requests access to a specified Google My Business account.
      operationId: content.liasettings.requestgmbaccess
      parameters:
        - description: The ID of the account for which GMB access is requested.
          in: path
          name: accountId
          required: true
          type: string
        - description: The email of the Google My Business account.
          in: query
          name: gmbEmail
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiasettingsRequestGmbAccessResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
  '/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Requests inventory validation for the specified country.
      operationId: content.liasettings.requestinventoryverification
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: accountId
          required: true
          type: string
        - description: The country for which inventory validation is requested.
          in: path
          name: country
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiasettingsRequestInventoryVerificationResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
  '/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets the inventory verification contract for the specified country.
      operationId: content.liasettings.setinventoryverificationcontact
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: accountId
          required: true
          type: string
        - description: The email of the inventory verification contact.
          in: query
          name: contactEmail
          required: true
          type: string
        - description: The name of the inventory verification contact.
          in: query
          name: contactName
          required: true
          type: string
        - description: The country for which inventory verification is requested.
          in: query
          name: country
          required: true
          type: string
        - description: The language for which inventory verification is requested.
          in: query
          name: language
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiasettingsSetInventoryVerificationContactResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
  '/{merchantId}/liasettings/{accountId}/setposdataprovider':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets the POS data provider for the specified country.
      operationId: content.liasettings.setposdataprovider
      parameters:
        - description: The ID of the account for which to retrieve accessible Google My Business accounts.
          in: path
          name: accountId
          required: true
          type: string
        - description: The country for which the POS data provider is selected.
          in: query
          name: country
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of POS data provider.
          in: query
          name: posDataProviderId
          type: string
        - description: The account ID by which this merchant is known to the POS data provider.
          in: query
          name: posExternalAccountId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LiasettingsSetPosDataProviderResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - liasettings
  '/{merchantId}/orderinvoices/{orderId}/createChargeInvoice':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Creates a charge invoice for a shipment group, and triggers a charge capture for non-facilitated payment orders.'
      operationId: content.orderinvoices.createchargeinvoice
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrderinvoicesCreateChargeInvoiceRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderinvoicesCreateChargeInvoiceResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderinvoices
  '/{merchantId}/orderinvoices/{orderId}/createRefundInvoice':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Creates a refund invoice for one or more shipment groups, and triggers a refund for non-facilitated payment orders. This can only be used for line items that have previously been charged using createChargeInvoice. All amounts (except for the summary) are incremental with respect to the previous invoice.'
      operationId: content.orderinvoices.createrefundinvoice
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrderinvoicesCreateRefundInvoiceRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderinvoicesCreateRefundInvoiceResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderinvoices
  '/{merchantId}/orderpayments/{orderId}/notifyAuthApproved':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Notify about successfully authorizing user's payment method for a given amount.
      operationId: content.orderpayments.notifyauthapproved
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrderpaymentsNotifyAuthApprovedRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order for for which payment authorization is happening.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderpaymentsNotifyAuthApprovedResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderpayments
  '/{merchantId}/orderpayments/{orderId}/notifyAuthDeclined':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Notify about failure to authorize user's payment method.
      operationId: content.orderpayments.notifyauthdeclined
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrderpaymentsNotifyAuthDeclinedRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order for which payment authorization was declined.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderpaymentsNotifyAuthDeclinedResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderpayments
  '/{merchantId}/orderpayments/{orderId}/notifyCharge':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Notify about charge on user's selected payments method.
      operationId: content.orderpayments.notifycharge
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrderpaymentsNotifyChargeRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order for which charge is happening.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderpaymentsNotifyChargeResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderpayments
  '/{merchantId}/orderpayments/{orderId}/notifyRefund':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Notify about refund on user's selected payments method.
      operationId: content.orderpayments.notifyrefund
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrderpaymentsNotifyRefundRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order for which charge is happening.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderpaymentsNotifyRefundResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderpayments
  '/{merchantId}/orderreports/disbursements':
    get:
      description: Retrieves a report for disbursements from your Merchant Center account.
      operationId: content.orderreports.listdisbursements
      parameters:
        - description: 'The last date which disbursements occurred. In ISO 8601 format. Default: current date.'
          in: query
          name: disbursementEndDate
          type: string
        - description: The first date which disbursements occurred. In ISO 8601 format.
          in: query
          name: disbursementStartDate
          required: true
          type: string
        - description: 'The maximum number of disbursements to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderreportsListDisbursementsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderreports
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/orderreports/disbursements/{disbursementId}/transactions':
    get:
      description: Retrieves a list of transactions for a disbursement from your Merchant Center account.
      operationId: content.orderreports.listtransactions
      parameters:
        - description: The Google-provided ID of the disbursement (found in Wallet).
          in: path
          name: disbursementId
          required: true
          type: string
        - description: 'The maximum number of disbursements to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
        - description: 'The last date in which transaction occurred. In ISO 8601 format. Default: current date.'
          in: query
          name: transactionEndDate
          type: string
        - description: The first date in which transaction occurred. In ISO 8601 format.
          in: query
          name: transactionStartDate
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderreportsListTransactionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderreports
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/orderreturns':
    get:
      description: Lists order returns in your Merchant Center account.
      operationId: content.orderreturns.list
      parameters:
        - description: 'Obtains order returns created before this date (inclusively), in ISO 8601 format.'
          in: query
          name: createdEndDate
          type: string
        - description: 'Obtains order returns created after this date (inclusively), in ISO 8601 format.'
          in: query
          name: createdStartDate
          type: string
        - description: 'The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: Return the results in the specified order.
          enum:
            - returnCreationTimeAsc
            - returnCreationTimeDesc
          in: query
          name: orderBy
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrderreturnsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderreturns
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/orderreturns/{returnId}':
    get:
      description: Retrieves an order return from your Merchant Center account.
      operationId: content.orderreturns.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: Merchant order return ID generated by Google.
          in: path
          name: returnId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/MerchantOrderReturn'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orderreturns
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/orders':
    get:
      description: Lists the orders in your Merchant Center account.
      operationId: content.orders.list
      parameters:
        - description: |-
            Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged.
            We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.
          in: query
          name: acknowledged
          type: boolean
        - description: |-
            The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.
            Known issue: All List calls will return all Orders without limit regardless of the value of this field.
          in: query
          name: maxResults
          type: integer
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: 'The ordering of the returned list. The only supported value are placedDate desc and placedDate asc for now, which returns orders sorted by placement date. "placedDate desc" stands for listing orders by placement date, from oldest to most recent. "placedDate asc" stands for listing orders by placement date, from most recent to oldest. In future releases we''ll support other sorting criteria.'
          enum:
            - placedDate asc
            - placedDate desc
          in: query
          name: orderBy
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
        - description: 'Obtains orders placed before this date (exclusively), in ISO 8601 format.'
          in: query
          name: placedDateEnd
          type: string
        - description: 'Obtains orders placed after this date (inclusively), in ISO 8601 format.'
          in: query
          name: placedDateStart
          type: string
        - collectionFormat: multi
          description: 'Obtains orders that match any of the specified statuses. Multiple values can be specified with comma separation. Additionally, please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered, partiallyReturned, returned, and canceled.'
          in: query
          items:
            enum:
              - active
              - canceled
              - completed
              - delivered
              - inProgress
              - partiallyDelivered
              - partiallyReturned
              - partiallyShipped
              - pendingShipment
              - returned
              - shipped
            type: string
          name: statuses
          type: array
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/orders/{orderId}':
    get:
      description: Retrieves an order from your Merchant Center account.
      operationId: content.orders.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Order'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/orders/{orderId}/acknowledge':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Marks an order as acknowledged.
      operationId: content.orders.acknowledge
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersAcknowledgeRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersAcknowledgeResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/cancel':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Cancels all line items in an order, making a full refund.'
      operationId: content.orders.cancel
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersCancelRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order to cancel.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersCancelResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/cancelLineItem':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Cancels a line item, making a full refund.'
      operationId: content.orders.cancellineitem
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersCancelLineItemRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersCancelLineItemResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/inStoreRefundLineItem':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store).
      operationId: content.orders.instorerefundlineitem
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersInStoreRefundLineItemRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersInStoreRefundLineItemResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/refund':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Deprecated, please use returnRefundLineItem instead.'
      operationId: content.orders.refund
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersRefundRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order to refund.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersRefundResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/rejectReturnLineItem':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Rejects return on an line item.
      operationId: content.orders.rejectreturnlineitem
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersRejectReturnLineItemRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersRejectReturnLineItemResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/returnLineItem':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Returns a line item.
      operationId: content.orders.returnlineitem
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersReturnLineItemRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersReturnLineItemResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/returnRefundLineItem':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Returns and refunds a line item. Note that this method can only be called on fully shipped orders.
      operationId: content.orders.returnrefundlineitem
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersReturnRefundLineItemRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersReturnRefundLineItemResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/setLineItemMetadata':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sets (overrides) merchant provided annotations on the line item.
      operationId: content.orders.setlineitemmetadata
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersSetLineItemMetadataRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersSetLineItemMetadataResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/shipLineItems':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Marks line item(s) as shipped.
      operationId: content.orders.shiplineitems
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersShipLineItemsRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersShipLineItemsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/testreturn':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sandbox only. Creates a test return.
      operationId: content.orders.createtestreturn
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersCreateTestReturnRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersCreateTestReturnResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/updateLineItemShippingDetails':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Updates ship by and delivery by dates for a line item.
      operationId: content.orders.updatelineitemshippingdetails
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersUpdateLineItemShippingDetailsRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersUpdateLineItemShippingDetailsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/updateMerchantOrderId':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Updates the merchant order ID for a given order.
      operationId: content.orders.updatemerchantorderid
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersUpdateMerchantOrderIdRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersUpdateMerchantOrderIdResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/orders/{orderId}/updateShipment':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Updates a shipment''s status, carrier, and/or tracking ID.'
      operationId: content.orders.updateshipment
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersUpdateShipmentRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersUpdateShipmentResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/ordersbymerchantid/{merchantOrderId}':
    get:
      description: Retrieves an order using merchant order id.
      operationId: content.orders.getbymerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The merchant order id to be looked for.
          in: path
          name: merchantOrderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersGetByMerchantOrderIdResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/pos/{targetMerchantId}/inventory':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Submit inventory for the given merchant.
      operationId: content.pos.inventory
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PosInventoryRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PosInventoryResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - pos
  '/{merchantId}/pos/{targetMerchantId}/sale':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Submit a sale event for the given merchant.
      operationId: content.pos.sale
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PosSaleRequest'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PosSaleResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - pos
  '/{merchantId}/pos/{targetMerchantId}/store':
    get:
      description: Lists the stores of the target merchant.
      operationId: content.pos.list
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PosListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - pos
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Creates a store for the given merchant.
      operationId: content.pos.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PosStore'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PosStore'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - pos
  '/{merchantId}/pos/{targetMerchantId}/store/{storeCode}':
    delete:
      description: Deletes a store for the given merchant.
      operationId: content.pos.delete
      parameters:
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          type: string
        - description: A store code that is unique per merchant.
          in: path
          name: storeCode
          required: true
          type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - pos
    get:
      description: Retrieves information about the given store.
      operationId: content.pos.get
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          type: string
        - description: A store code that is unique per merchant.
          in: path
          name: storeCode
          required: true
          type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PosStore'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - pos
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/products':
    get:
      description: Lists the products in your Merchant Center account.
      operationId: content.products.list
      parameters:
        - description: Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).
          in: query
          name: includeInvalidInsertedItems
          type: boolean
        - description: 'The maximum number of products to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the account that contains the products. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ProductsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: 'Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.'
      operationId: content.products.insert
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Product'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
  '/{merchantId}/products/{productId}':
    delete:
      description: Deletes a product from your Merchant Center account.
      operationId: content.products.delete
      parameters:
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The REST id of the product.
          in: path
          name: productId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
    get:
      description: Retrieves a product from your Merchant Center account.
      operationId: content.products.get
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The REST id of the product.
          in: path
          name: productId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/productstatuses':
    get:
      description: Lists the statuses of the products in your Merchant Center account.
      operationId: content.productstatuses.list
      parameters:
        - collectionFormat: multi
          description: 'If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.'
          in: query
          items:
            type: string
          name: destinations
          type: array
        - description: Flag to include full product data in the results of the list request. The default value is false.
          in: query
          name: includeAttributes
          type: boolean
        - description: Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).
          in: query
          name: includeInvalidInsertedItems
          type: boolean
        - description: 'The maximum number of product statuses to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the account that contains the products. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ProductstatusesListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - productstatuses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/productstatuses/{productId}':
    get:
      description: Gets the status of a product from your Merchant Center account.
      operationId: content.productstatuses.get
      parameters:
        - collectionFormat: multi
          description: 'If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.'
          in: query
          items:
            type: string
          name: destinations
          type: array
        - description: Flag to include full product data in the result of this get request. The default value is false.
          in: query
          name: includeAttributes
          type: boolean
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The REST id of the product.
          in: path
          name: productId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ProductStatus'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - productstatuses
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/shippingsettings':
    get:
      description: Lists the shipping settings of the sub-accounts in your Merchant Center account.
      operationId: content.shippingsettings.list
      parameters:
        - description: 'The maximum number of shipping settings to return in the response, used for paging.'
          in: query
          name: maxResults
          type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ShippingsettingsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/shippingsettings/{accountId}':
    get:
      description: Retrieves the shipping settings of the account.
      operationId: content.shippingsettings.get
      parameters:
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ShippingSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    patch:
      description: Updates the shipping settings of the account. This method supports patch semantics.
      operationId: content.shippingsettings.patch
      parameters:
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ShippingSettings'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ShippingSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
    put:
      description: Updates the shipping settings of the account.
      operationId: content.shippingsettings.update
      parameters:
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ShippingSettings'
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          type: boolean
        - description: 'The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.'
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ShippingSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
  '/{merchantId}/supportedCarriers':
    get:
      description: Retrieves supported carriers and carrier services for an account.
      operationId: content.shippingsettings.getsupportedcarriers
      parameters:
        - description: The ID of the account for which to retrieve the supported carriers.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ShippingsettingsGetSupportedCarriersResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/supportedHolidays':
    get:
      description: Retrieves supported holidays for an account.
      operationId: content.shippingsettings.getsupportedholidays
      parameters:
        - description: The ID of the account for which to retrieve the supported holidays.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ShippingsettingsGetSupportedHolidaysResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
  '/{merchantId}/testorders':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sandbox only. Creates a test order.
      operationId: content.orders.createtestorder
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersCreateTestOrderRequest'
        - description: The ID of the account that should manage the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersCreateTestOrderResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/testorders/{orderId}/advance':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sandbox only. Moves a test order from state "inProgress" to state "pendingShipment".
      operationId: content.orders.advancetestorder
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the test order to modify.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersAdvanceTestOrderResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/testorders/{orderId}/cancelByCustomer':
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
    post:
      description: Sandbox only. Cancels a test order for customer-initiated cancellation.
      operationId: content.orders.canceltestorderbycustomer
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/OrdersCancelTestOrderByCustomerRequest'
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The ID of the test order to cancel.
          in: path
          name: orderId
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersCancelTestOrderByCustomerResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/testordertemplates/{templateName}':
    get:
      description: Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.
      operationId: content.orders.gettestordertemplate
      parameters:
        - description: The country of the template to retrieve. Defaults to US.
          in: query
          name: country
          type: string
        - description: The ID of the account that should manage the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          type: string
        - description: The name of the template to retrieve.
          enum:
            - template1
            - template1a
            - template1b
            - template2
          in: path
          name: templateName
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OrdersGetTestOrderTemplateResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
    parameters:
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/userIp'
definitions:
  Account:
    description: 'Account data. After the creation of a new account it may take a few minutes before it is fully operational. The methods delete, insert, patch, and update require the admin role.'
    properties:
      adultContent:
        description: Indicates whether the merchant sells adult content.
        type: boolean
      adwordsLinks:
        description: 'List of linked AdWords accounts that are active or pending approval. To create a new link request, add a new link with status active to the list. It will remain in a pending state until approved or rejected either in the AdWords interface or through the  AdWords API. To delete an active link, or to cancel a link request, remove it from the list.'
        items:
          $ref: '#/definitions/AccountAdwordsLink'
        type: array
      businessInformation:
        $ref: '#/definitions/AccountBusinessInformation'
        description: The business information of the account.
      googleMyBusinessLink:
        $ref: '#/definitions/AccountGoogleMyBusinessLink'
        description: The GMB account which is linked or in the process of being linked with the Merchant Center account.
      id:
        description: Merchant Center account ID.
        format: uint64
        type: string
      kind:
        default: 'content#account'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#account".'
        type: string
      name:
        description: Display name for the account.
        type: string
      reviewsUrl:
        description: '[DEPRECATED] This field is never returned and will be ignored if provided.'
        type: string
      sellerId:
        description: 'Client-specific, locally-unique, internal ID for the child account.'
        type: string
      users:
        description: Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
        items:
          $ref: '#/definitions/AccountUser'
        type: array
      websiteUrl:
        description: The merchant's website.
        type: string
      youtubeChannelLinks:
        description: 'List of linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status active to the list. It will remain in a pending state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.'
        items:
          $ref: '#/definitions/AccountYouTubeChannelLink'
        type: array
    type: object
  AccountAddress:
    properties:
      country:
        description: CLDR country code (e.g. "US").
        type: string
      locality:
        description: 'City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).'
        type: string
      postalCode:
        description: Postal code or ZIP (e.g. "94043").
        type: string
      region:
        description: 'Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").'
        type: string
      streetAddress:
        description: Street-level part of the address.
        type: string
    type: object
  AccountAdwordsLink:
    properties:
      adwordsId:
        description: Customer ID of the AdWords account.
        format: uint64
        type: string
      status:
        description: 'Status of the link between this Merchant Center account and the AdWords account. Upon retrieval, it represents the actual status of the link and can be either active if it was approved in Google AdWords or pending if it''s pending approval. Upon insertion, it represents the intended status of the link. Re-uploading a link with status active when it''s still pending or with status pending when it''s already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.'
        type: string
    type: object
  AccountBusinessInformation:
    properties:
      address:
        $ref: '#/definitions/AccountAddress'
        description: The address of the business.
      customerService:
        $ref: '#/definitions/AccountCustomerService'
        description: The customer service information of the business.
      phoneNumber:
        description: The phone number of the business.
        type: string
    type: object
  AccountCustomerService:
    properties:
      email:
        description: Customer service email.
        type: string
      phoneNumber:
        description: Customer service phone number.
        type: string
      url:
        description: Customer service URL.
        type: string
    type: object
  AccountGoogleMyBusinessLink:
    properties:
      gmbEmail:
        description: 'The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account.'
        type: string
      status:
        description: Status of the link between this Merchant Center account and the GMB account.
        type: string
    type: object
  AccountIdentifier:
    properties:
      aggregatorId:
        description: 'The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).'
        format: uint64
        type: string
      merchantId:
        description: 'The merchant account ID, set for individual accounts and subaccounts.'
        format: uint64
        type: string
    type: object
  AccountStatus:
    description: 'The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.'
    properties:
      accountId:
        description: The ID of the account for which the status is reported.
        type: string
      accountLevelIssues:
        description: A list of account level issues.
        items:
          $ref: '#/definitions/AccountStatusAccountLevelIssue'
        type: array
      dataQualityIssues:
        description: A list of data quality issues.
        items:
          $ref: '#/definitions/AccountStatusDataQualityIssue'
        type: array
      kind:
        default: 'content#accountStatus'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountStatus".'
        type: string
      products:
        description: 'List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.'
        items:
          $ref: '#/definitions/AccountStatusProducts'
        type: array
      websiteClaimed:
        description: Whether the account's website is claimed or not.
        type: boolean
    type: object
  AccountStatusAccountLevelIssue:
    properties:
      country:
        description: Country for which this issue is reported.
        type: string
      destination:
        description: The destination the issue applies to.
        type: string
      detail:
        description: Additional details about the issue.
        type: string
      documentation:
        description: The URL of a web page to help resolving this issue.
        type: string
      id:
        description: Issue identifier.
        type: string
      severity:
        description: Severity of the issue.
        type: string
      title:
        description: Short description of the issue.
        type: string
    type: object
  AccountStatusDataQualityIssue:
    properties:
      country:
        description: Country for which this issue is reported.
        type: string
      destination:
        description: The destination the issue applies to.
        type: string
      detail:
        description: A more detailed description of the issue.
        type: string
      displayedValue:
        description: Actual value displayed on the landing page.
        type: string
      exampleItems:
        description: Example items featuring the issue.
        items:
          $ref: '#/definitions/AccountStatusExampleItem'
        type: array
      id:
        description: Issue identifier.
        type: string
      lastChecked:
        description: Last time the account was checked for this issue.
        type: string
      location:
        description: The attribute name that is relevant for the issue.
        type: string
      numItems:
        description: Number of items in the account found to have the said issue.
        format: uint32
        type: integer
      severity:
        description: Severity of the problem.
        type: string
      submittedValue:
        description: Submitted value that causes the issue.
        type: string
    type: object
  AccountStatusExampleItem:
    description: 'An example of an item that has poor data quality. An item value on the landing page differs from what is submitted, or conflicts with a policy.'
    properties:
      itemId:
        description: Unique item ID as specified in the uploaded product data.
        type: string
      link:
        description: Landing page of the item.
        type: string
      submittedValue:
        description: The item value that was submitted.
        type: string
      title:
        description: Title of the item.
        type: string
      valueOnLandingPage:
        description: The actual value on the landing page.
        type: string
    type: object
  AccountStatusItemLevelIssue:
    properties:
      attributeName:
        description: 'The attribute''s name, if the issue is caused by a single attribute.'
        type: string
      code:
        description: The error code of the issue.
        type: string
      description:
        description: A short issue description in English.
        type: string
      detail:
        description: A detailed issue description in English.
        type: string
      documentation:
        description: The URL of a web page to help with resolving this issue.
        type: string
      numItems:
        description: Number of items with this issue.
        format: int64
        type: string
      resolution:
        description: Whether the issue can be resolved by the merchant.
        type: string
      servability:
        description: How this issue affects serving of the offer.
        type: string
    type: object
  AccountStatusProducts:
    properties:
      channel:
        description: The channel the data applies to.
        type: string
      country:
        description: The country the data applies to.
        type: string
      destination:
        description: The destination the data applies to.
        type: string
      itemLevelIssues:
        description: List of item-level issues.
        items:
          $ref: '#/definitions/AccountStatusItemLevelIssue'
        type: array
      statistics:
        $ref: '#/definitions/AccountStatusStatistics'
        description: Aggregated product statistics.
    type: object
  AccountStatusStatistics:
    properties:
      active:
        description: Number of active offers.
        format: int64
        type: string
      disapproved:
        description: Number of disapproved offers.
        format: int64
        type: string
      expiring:
        description: Number of expiring offers.
        format: int64
        type: string
      pending:
        description: Number of pending offers.
        format: int64
        type: string
    type: object
  AccountTax:
    description: The tax settings of a merchant account. All methods require the admin role.
    properties:
      accountId:
        description: The ID of the account to which these account tax settings belong.
        format: uint64
        type: string
      kind:
        default: 'content#accountTax'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountTax".'
        type: string
      rules:
        description: Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.
        items:
          $ref: '#/definitions/AccountTaxTaxRule'
        type: array
    type: object
  AccountTaxTaxRule:
    description: Tax calculation rule to apply in a state or province (USA only).
    properties:
      country:
        description: Country code in which tax is applicable.
        type: string
      locationId:
        description: 'State (or province) is which the tax is applicable, described by its location id (also called criteria id).'
        format: uint64
        type: string
      ratePercent:
        description: 'Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.'
        type: string
      shippingTaxed:
        description: 'If true, shipping charges are also taxed.'
        type: boolean
      useGlobalRate:
        description: Whether the tax rate is taken from a global tax table or specified explicitly.
        type: boolean
    type: object
  AccountUser:
    properties:
      admin:
        description: Whether user is an admin.
        type: boolean
      emailAddress:
        description: User's email address.
        type: string
      orderManager:
        description: Whether user is an order manager.
        type: boolean
      paymentsAnalyst:
        description: Whether user can access payment statements.
        type: boolean
      paymentsManager:
        description: Whether user can manage payment settings.
        type: boolean
    type: object
  AccountYouTubeChannelLink:
    properties:
      channelId:
        description: Channel ID.
        type: string
      status:
        description: 'Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either active if it was approved in YT Creator Studio or pending if it''s pending approval. Upon insertion, it represents the intended status of the link. Re-uploading a link with status active when it''s still pending or with status pending when it''s already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.'
        type: string
    type: object
  AccountsAuthInfoResponse:
    properties:
      accountIdentifiers:
        description: |-
          The account identifiers corresponding to the authenticated user.
          - For an individual account: only the merchant ID is defined
          - For an aggregator: only the aggregator ID is defined
          - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined.
        items:
          $ref: '#/definitions/AccountIdentifier'
        type: array
      kind:
        default: 'content#accountsAuthInfoResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsAuthInfoResponse".'
        type: string
    type: object
  AccountsClaimWebsiteResponse:
    properties:
      kind:
        default: 'content#accountsClaimWebsiteResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsClaimWebsiteResponse".'
        type: string
    type: object
  AccountsCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/AccountsCustomBatchRequestEntry'
        type: array
    type: object
  AccountsCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch accounts request.
    properties:
      account:
        $ref: '#/definitions/Account'
        description: The account to create or update. Only defined if the method is insert or update.
      accountId:
        description: The ID of the targeted account. Only defined if the method is not insert.
        format: uint64
        type: string
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      force:
        description: Whether the account should be deleted if the account has offers. Only applicable if the method is delete.
        type: boolean
      linkRequest:
        $ref: '#/definitions/AccountsCustomBatchRequestEntryLinkRequest'
        description: Details about the link request.
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        description: The method of the batch entry.
        type: string
      overwrite:
        description: Only applicable if the method is claimwebsite. Indicates whether or not to take the claim from another account in case there is a conflict.
        type: boolean
    type: object
  AccountsCustomBatchRequestEntryLinkRequest:
    properties:
      action:
        description: Action to perform for this link. The "request" action is only available to select merchants.
        type: string
      linkType:
        description: Type of the link between the two accounts.
        type: string
      linkedAccountId:
        description: The ID of the linked account.
        type: string
    type: object
  AccountsCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/AccountsCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#accountsCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsCustomBatchResponse".'
        type: string
    type: object
  AccountsCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch accounts response.
    properties:
      account:
        $ref: '#/definitions/Account'
        description: 'The retrieved, created, or updated account. Not defined if the method was delete, claimwebsite or link.'
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: A list of errors defined if and only if the request failed.
      kind:
        default: 'content#accountsCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsCustomBatchResponseEntry".'
        type: string
      linkStatus:
        description: Deprecated. This field is never set.
        type: string
    type: object
  AccountsLinkRequest:
    properties:
      action:
        description: Action to perform for this link. The "request" action is only available to select merchants.
        type: string
      linkType:
        description: Type of the link between the two accounts.
        type: string
      linkedAccountId:
        description: The ID of the linked account.
        type: string
    type: object
  AccountsLinkResponse:
    properties:
      kind:
        default: 'content#accountsLinkResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsLinkResponse".'
        type: string
    type: object
  AccountsListResponse:
    properties:
      kind:
        default: 'content#accountsListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of accounts.
        type: string
      resources:
        items:
          $ref: '#/definitions/Account'
        type: array
    type: object
  AccountstatusesCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/AccountstatusesCustomBatchRequestEntry'
        type: array
    type: object
  AccountstatusesCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch accountstatuses request.
    properties:
      accountId:
        description: The ID of the (sub-)account whose status to get.
        format: uint64
        type: string
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      destinations:
        description: 'If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.'
        items:
          type: string
        type: array
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        description: The method (get).
        type: string
    type: object
  AccountstatusesCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/AccountstatusesCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#accountstatusesCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountstatusesCustomBatchResponse".'
        type: string
    type: object
  AccountstatusesCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch accountstatuses response.
    properties:
      accountStatus:
        $ref: '#/definitions/AccountStatus'
        description: The requested account status. Defined if and only if the request was successful.
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: A list of errors defined if and only if the request failed.
    type: object
  AccountstatusesListResponse:
    properties:
      kind:
        default: 'content#accountstatusesListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountstatusesListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of account statuses.
        type: string
      resources:
        items:
          $ref: '#/definitions/AccountStatus'
        type: array
    type: object
  AccounttaxCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/AccounttaxCustomBatchRequestEntry'
        type: array
    type: object
  AccounttaxCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch accounttax request.
    properties:
      accountId:
        description: The ID of the account for which to get/update account tax settings.
        format: uint64
        type: string
      accountTax:
        $ref: '#/definitions/AccountTax'
        description: The account tax settings to update. Only defined if the method is update.
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        type: string
    type: object
  AccounttaxCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/AccounttaxCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#accounttaxCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accounttaxCustomBatchResponse".'
        type: string
    type: object
  AccounttaxCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch accounttax response.
    properties:
      accountTax:
        $ref: '#/definitions/AccountTax'
        description: The retrieved or updated account tax settings.
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: A list of errors defined if and only if the request failed.
      kind:
        default: 'content#accounttaxCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accounttaxCustomBatchResponseEntry".'
        type: string
    type: object
  AccounttaxListResponse:
    properties:
      kind:
        default: 'content#accounttaxListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#accounttaxListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of account tax settings.
        type: string
      resources:
        items:
          $ref: '#/definitions/AccountTax'
        type: array
    type: object
  Amount:
    properties:
      pretax:
        $ref: '#/definitions/Price'
        description: '[required] Value before taxes.'
      tax:
        $ref: '#/definitions/Price'
        description: '[required] Tax value.'
    type: object
  CarrierRate:
    properties:
      carrierName:
        description: 'Carrier service, such as "UPS" or "Fedex". The list of supported carriers can be retrieved via the getSupportedCarriers method. Required.'
        type: string
      carrierService:
        description: 'Carrier service, such as "ground" or "2 days". The list of supported services for a carrier can be retrieved via the getSupportedCarriers method. Required.'
        type: string
      flatAdjustment:
        $ref: '#/definitions/Price'
        description: 'Additive shipping rate modifier. Can be negative. For example { "value": "1", "currency" : "USD" } adds $1 to the rate, { "value": "-3", "currency" : "USD" } removes $3 from the rate. Optional.'
      name:
        description: Name of the carrier rate. Must be unique per rate group. Required.
        type: string
      originPostalCode:
        description: Shipping origin for this carrier rate. Required.
        type: string
      percentageAdjustment:
        description: 'Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example "5.4" increases the rate by 5.4%, "-3" decreases the rate by 3%. Optional.'
        type: string
    type: object
  CarriersCarrier:
    properties:
      country:
        description: 'The CLDR country code of the carrier (e.g., "US"). Always present.'
        type: string
      name:
        description: 'The name of the carrier (e.g., "UPS"). Always present.'
        type: string
      services:
        description: 'A list of supported services (e.g., "ground") for that carrier. Contains at least one service.'
        items:
          type: string
        type: array
    type: object
  CustomAttribute:
    properties:
      name:
        description: The name of the attribute. Underscores will be replaced by spaces upon insertion.
        type: string
      type:
        description: The type of the attribute.
        type: string
      unit:
        description: 'Free-form unit of the attribute. Unit can only be used for values of type int, float, or price.'
        type: string
      value:
        description: The value of the attribute.
        type: string
    type: object
  CustomGroup:
    properties:
      attributes:
        description: The sub-attributes.
        items:
          $ref: '#/definitions/CustomAttribute'
        type: array
      name:
        description: The name of the group. Underscores will be replaced by spaces upon insertion.
        type: string
    type: object
  CustomerReturnReason:
    properties:
      description:
        type: string
      reasonCode:
        type: string
    type: object
  CutoffTime:
    properties:
      hour:
        description: Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.
        format: uint32
        type: integer
      minute:
        description: Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.
        format: uint32
        type: integer
      timezone:
        description: Timezone identifier for the cutoff time. A list of identifiers can be found in  the AdWords API documentation. E.g. "Europe/Zurich". Required.
        type: string
    type: object
  Datafeed:
    description: Datafeed configuration data.
    properties:
      attributeLanguage:
        description: The two-letter ISO 639-1 language in which the attributes are defined in the data feed.
        type: string
      contentLanguage:
        description: '[DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targetCountry.'
        type: string
      contentType:
        description: 'The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported.'
        type: string
      fetchSchedule:
        $ref: '#/definitions/DatafeedFetchSchedule'
        description: Fetch schedule for the feed file.
      fileName:
        description: The filename of the feed. All feeds must have a unique file name.
        type: string
      format:
        $ref: '#/definitions/DatafeedFormat'
        description: Format of the feed file.
      id:
        description: The ID of the data feed.
        format: int64
        type: string
      intendedDestinations:
        description: '[DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center).'
        items:
          type: string
        type: array
      kind:
        default: 'content#datafeed'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeed".'
        type: string
      name:
        description: A descriptive name of the data feed.
        type: string
      targetCountry:
        description: '[DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code.'
        type: string
      targets:
        description: 'The targets this feed should apply to (country, language, destinations).'
        items:
          $ref: '#/definitions/DatafeedTarget'
        type: array
    type: object
  DatafeedFetchSchedule:
    description: 'The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.'
    properties:
      dayOfMonth:
        description: The day of the month the feed file should be fetched (1-31).
        format: uint32
        type: integer
      fetchUrl:
        description: 'The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.'
        type: string
      hour:
        description: The hour of the day the feed file should be fetched (0-23).
        format: uint32
        type: integer
      minuteOfHour:
        description: The minute of the hour the feed file should be fetched (0-59). Read-only.
        format: uint32
        type: integer
      password:
        description: An optional password for fetch_url.
        type: string
      paused:
        description: Whether the scheduled fetch is paused or not.
        type: boolean
      timeZone:
        description: 'Time zone used for schedule. UTC by default. E.g., "America/Los_Angeles".'
        type: string
      username:
        description: An optional user name for fetch_url.
        type: string
      weekday:
        description: The day of the week the feed file should be fetched.
        type: string
    type: object
  DatafeedFormat:
    properties:
      columnDelimiter:
        description: 'Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds.'
        type: string
      fileEncoding:
        description: 'Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected.'
        type: string
      quotingMode:
        description: 'Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds.'
        type: string
    type: object
  DatafeedStatus:
    description: 'The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.'
    properties:
      country:
        description: 'The country for which the status is reported, represented as a  CLDR territory code.'
        type: string
      datafeedId:
        description: The ID of the feed for which the status is reported.
        format: uint64
        type: string
      errors:
        description: The list of errors occurring in the feed.
        items:
          $ref: '#/definitions/DatafeedStatusError'
        type: array
      itemsTotal:
        description: The number of items in the feed that were processed.
        format: uint64
        type: string
      itemsValid:
        description: The number of items in the feed that were valid.
        format: uint64
        type: string
      kind:
        default: 'content#datafeedStatus'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedStatus".'
        type: string
      language:
        description: The two-letter ISO 639-1 language for which the status is reported.
        type: string
      lastUploadDate:
        description: The last date at which the feed was uploaded.
        type: string
      processingStatus:
        description: The processing status of the feed.
        type: string
      warnings:
        description: The list of errors occurring in the feed.
        items:
          $ref: '#/definitions/DatafeedStatusError'
        type: array
    type: object
  DatafeedStatusError:
    description: 'An error occurring in the feed, like "invalid price".'
    properties:
      code:
        description: 'The code of the error, e.g., "validation/invalid_value".'
        type: string
      count:
        description: The number of occurrences of the error in the feed.
        format: uint64
        type: string
      examples:
        description: 'A list of example occurrences of the error, grouped by product.'
        items:
          $ref: '#/definitions/DatafeedStatusExample'
        type: array
      message:
        description: 'The error message, e.g., "Invalid price".'
        type: string
    type: object
  DatafeedStatusExample:
    description: An example occurrence for a particular error.
    properties:
      itemId:
        description: The ID of the example item.
        type: string
      lineNumber:
        description: Line number in the data feed where the example is found.
        format: uint64
        type: string
      value:
        description: The problematic value.
        type: string
    type: object
  DatafeedTarget:
    properties:
      country:
        description: 'The country where the items in the feed will be included in the search index, represented as a  CLDR territory code.'
        type: string
      excludedDestinations:
        description: The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).
        items:
          type: string
        type: array
      includedDestinations:
        description: The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in the excluded_destination field.
        items:
          type: string
        type: array
      language:
        description: 'The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targets[].country.'
        type: string
    type: object
  DatafeedsCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/DatafeedsCustomBatchRequestEntry'
        type: array
    type: object
  DatafeedsCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch datafeeds request.
    properties:
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      datafeed:
        $ref: '#/definitions/Datafeed'
        description: The data feed to insert.
      datafeedId:
        description: 'The ID of the data feed to get, delete or fetch.'
        format: uint64
        type: string
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        type: string
    type: object
  DatafeedsCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/DatafeedsCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#datafeedsCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedsCustomBatchResponse".'
        type: string
    type: object
  DatafeedsCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch datafeeds response.
    properties:
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      datafeed:
        $ref: '#/definitions/Datafeed'
        description: The requested data feed. Defined if and only if the request was successful.
      errors:
        $ref: '#/definitions/Errors'
        description: A list of errors defined if and only if the request failed.
    type: object
  DatafeedsFetchNowResponse:
    properties:
      kind:
        default: 'content#datafeedsFetchNowResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedsFetchNowResponse".'
        type: string
    type: object
  DatafeedsListResponse:
    properties:
      kind:
        default: 'content#datafeedsListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedsListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of datafeeds.
        type: string
      resources:
        items:
          $ref: '#/definitions/Datafeed'
        type: array
    type: object
  DatafeedstatusesCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/DatafeedstatusesCustomBatchRequestEntry'
        type: array
    type: object
  DatafeedstatusesCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch datafeedstatuses request.
    properties:
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      country:
        description: The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target datafeeds this parameter is required.
        type: string
      datafeedId:
        description: The ID of the data feed to get.
        format: uint64
        type: string
      language:
        description: The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target datafeeds this parameter is required.
        type: string
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        type: string
    type: object
  DatafeedstatusesCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/DatafeedstatusesCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#datafeedstatusesCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedstatusesCustomBatchResponse".'
        type: string
    type: object
  DatafeedstatusesCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch datafeedstatuses response.
    properties:
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      datafeedStatus:
        $ref: '#/definitions/DatafeedStatus'
        description: The requested data feed status. Defined if and only if the request was successful.
      errors:
        $ref: '#/definitions/Errors'
        description: A list of errors defined if and only if the request failed.
    type: object
  DatafeedstatusesListResponse:
    properties:
      kind:
        default: 'content#datafeedstatusesListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedstatusesListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of datafeed statuses.
        type: string
      resources:
        items:
          $ref: '#/definitions/DatafeedStatus'
        type: array
    type: object
  DeliveryTime:
    properties:
      cutoffTime:
        $ref: '#/definitions/CutoffTime'
        description: Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST.
      holidayCutoffs:
        description: 'Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.'
        items:
          $ref: '#/definitions/HolidayCutoff'
        type: array
      maxHandlingTimeInDays:
        description: 'Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to minHandlingTimeInDays.'
        format: uint32
        type: integer
      maxTransitTimeInDays:
        description: 'Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to minTransitTimeInDays. Required.'
        format: uint32
        type: integer
      minHandlingTimeInDays:
        description: 'Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.'
        format: uint32
        type: integer
      minTransitTimeInDays:
        description: 'Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Required.'
        format: uint32
        type: integer
    type: object
  Error:
    description: An error returned by the API.
    properties:
      domain:
        description: The domain of the error.
        type: string
      message:
        description: A description of the error.
        type: string
      reason:
        description: The error code.
        type: string
    type: object
  Errors:
    description: A list of errors returned by a failed batch entry.
    properties:
      code:
        description: The HTTP status of the first error in errors.
        format: uint32
        type: integer
      errors:
        description: A list of errors.
        items:
          $ref: '#/definitions/Error'
        type: array
      message:
        description: The message of the first error in errors.
        type: string
    type: object
  GmbAccounts:
    properties:
      accountId:
        description: The ID of the account.
        format: uint64
        type: string
      gmbAccounts:
        description: A list of GMB accounts which are available to the merchant.
        items:
          $ref: '#/definitions/GmbAccountsGmbAccount'
        type: array
    type: object
  GmbAccountsGmbAccount:
    properties:
      email:
        description: The email which identifies the GMB account.
        type: string
      listingCount:
        description: Number of listings under this account.
        format: uint64
        type: string
      name:
        description: The name of the GMB account.
        type: string
      type:
        description: The type of the GMB account (User or Business).
        type: string
    type: object
  Headers:
    description: 'A non-empty list of row or column headers for a table. Exactly one of prices, weights, numItems, postalCodeGroupNames, or locations must be set.'
    properties:
      locations:
        description: A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.
        items:
          $ref: '#/definitions/LocationIdSet'
        type: array
      numberOfItems:
        description: 'A list of inclusive number of items upper bounds. The last value can be "infinity". For example ["10", "50", "infinity"] represents the headers "<= 10 items", " 50 items". Must be non-empty. Can only be set if all other fields are not set.'
        items:
          type: string
        type: array
      postalCodeGroupNames:
        description: 'A list of postal group names. The last value can be "all other locations". Example: ["zone 1", "zone 2", "all other locations"]. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.'
        items:
          type: string
        type: array
      prices:
        description: 'A list of inclusive order price upper bounds. The last price''s value can be "infinity". For example [{"value": "10", "currency": "USD"}, {"value": "500", "currency": "USD"}, {"value": "infinity", "currency": "USD"}] represents the headers "<= $10", " $500". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.'
        items:
          $ref: '#/definitions/Price'
        type: array
      weights:
        description: 'A list of inclusive order weight upper bounds. The last weight''s value can be "infinity". For example [{"value": "10", "unit": "kg"}, {"value": "50", "unit": "kg"}, {"value": "infinity", "unit": "kg"}] represents the headers "<= 10kg", " 50kg". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set.'
        items:
          $ref: '#/definitions/Weight'
        type: array
    type: object
  HolidayCutoff:
    properties:
      deadlineDate:
        description: 'Date of the order deadline, in ISO 8601 format. E.g. "2016-11-29" for 29th November 2016. Required.'
        type: string
      deadlineHour:
        description: 'Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.'
        format: uint32
        type: integer
      deadlineTimezone:
        description: Timezone identifier for the deadline hour. A list of identifiers can be found in  the AdWords API documentation. E.g. "Europe/Zurich". Required.
        type: string
      holidayId:
        description: Unique identifier for the holiday. Required.
        type: string
      visibleFromDate:
        description: Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. "2016-10-31" for 31st October 2016. Required.
        type: string
    type: object
  HolidaysHoliday:
    properties:
      countryCode:
        description: 'The CLDR territory code of the country in which the holiday is available. E.g. "US", "DE", "GB". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present.'
        type: string
      date:
        description: 'Date of the holiday, in ISO 8601 format. E.g. "2016-12-25" for Christmas 2016. Always present.'
        type: string
      deliveryGuaranteeDate:
        description: 'Date on which the order has to arrive at the customer''s, in ISO 8601 format. E.g. "2016-12-24" for 24th December 2016. Always present.'
        type: string
      deliveryGuaranteeHour:
        description: 'Hour of the day in the delivery location''s timezone on the guaranteed delivery date by which the order has to arrive at the customer''s. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.'
        format: uint64
        type: string
      id:
        description: Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present.
        type: string
      type:
        description: The holiday type. Always present.
        type: string
    type: object
  Installment:
    properties:
      amount:
        $ref: '#/definitions/Price'
        description: The amount the buyer has to pay per month.
      months:
        description: The number of installments the buyer has to pay.
        format: int64
        type: string
    type: object
  Inventory:
    properties:
      availability:
        description: The availability of the product.
        type: string
      customLabel0:
        description: Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      customLabel1:
        description: Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      customLabel2:
        description: Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      customLabel3:
        description: Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      customLabel4:
        description: Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      installment:
        $ref: '#/definitions/Installment'
        description: Number and amount of installments to pay for an item. Brazil only.
      instoreProductLocation:
        description: The instore product location. Supported only for local products.
        type: string
      kind:
        default: 'content#inventory'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventory".'
        type: string
      loyaltyPoints:
        $ref: '#/definitions/LoyaltyPoints'
        description: Loyalty points that users receive after purchasing the item. Japan only.
      pickup:
        $ref: '#/definitions/InventoryPickup'
        description: 'Store pickup information. Only supported for local inventory. Not setting pickup means "don''t update" while setting it to the empty value ({} in JSON) means "delete". Otherwise, pickupMethod and pickupSla must be set together, unless pickupMethod is "not supported".'
      price:
        $ref: '#/definitions/Price'
        description: The price of the product.
      quantity:
        description: The quantity of the product. Must be equal to or greater than zero. Supported only for local products.
        format: uint32
        type: integer
      salePrice:
        $ref: '#/definitions/Price'
        description: The sale price of the product. Mandatory if sale_price_effective_date is defined.
      salePriceEffectiveDate:
        description: 'A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as ''null'' if undecided.'
        type: string
      sellOnGoogleQuantity:
        description: The quantity of the product that is available for selling on Google. Supported only for online products.
        format: uint32
        type: integer
    type: object
  InventoryCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/InventoryCustomBatchRequestEntry'
        type: array
    type: object
  InventoryCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch inventory request.
    properties:
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      inventory:
        $ref: '#/definitions/Inventory'
        description: Price and availability of the product.
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      productId:
        description: The ID of the product for which to update price and availability.
        type: string
      storeCode:
        description: The code of the store for which to update price and availability. Use online to update price and availability of an online product.
        type: string
    type: object
  InventoryCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/InventoryCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#inventoryCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventoryCustomBatchResponse".'
        type: string
    type: object
  InventoryCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch inventory response.
    properties:
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: A list of errors defined if and only if the request failed.
      kind:
        default: 'content#inventoryCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventoryCustomBatchResponseEntry".'
        type: string
    type: object
  InventoryPickup:
    properties:
      pickupMethod:
        description: 'Whether store pickup is available for this offer and whether the pickup option should be shown as buy, reserve, or not supported. Only supported for local inventory. Unless the value is "not supported", must be submitted together with pickupSla.'
        type: string
      pickupSla:
        description: 'The expected date that an order will be ready for pickup, relative to when the order is placed. Only supported for local inventory. Must be submitted together with pickupMethod.'
        type: string
    type: object
  InventorySetRequest:
    properties:
      availability:
        description: The availability of the product.
        type: string
      customLabel0:
        description: Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      customLabel1:
        description: Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      customLabel2:
        description: Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      customLabel3:
        description: Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      customLabel4:
        description: Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.
        type: string
      installment:
        $ref: '#/definitions/Installment'
        description: Number and amount of installments to pay for an item. Brazil only.
      instoreProductLocation:
        description: The instore product location. Supported only for local products.
        type: string
      loyaltyPoints:
        $ref: '#/definitions/LoyaltyPoints'
        description: Loyalty points that users receive after purchasing the item. Japan only.
      pickup:
        $ref: '#/definitions/InventoryPickup'
        description: 'Store pickup information. Only supported for local inventory. Not setting pickup means "don''t update" while setting it to the empty value ({} in JSON) means "delete". Otherwise, pickupMethod and pickupSla must be set together, unless pickupMethod is "not supported".'
      price:
        $ref: '#/definitions/Price'
        description: The price of the product.
      quantity:
        description: The quantity of the product. Must be equal to or greater than zero. Supported only for local products.
        format: uint32
        type: integer
      salePrice:
        $ref: '#/definitions/Price'
        description: The sale price of the product. Mandatory if sale_price_effective_date is defined.
      salePriceEffectiveDate:
        description: 'A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as ''null'' if undecided.'
        type: string
      sellOnGoogleQuantity:
        description: The quantity of the product that is available for selling on Google. Supported only for online products.
        format: uint32
        type: integer
    type: object
  InventorySetResponse:
    properties:
      kind:
        default: 'content#inventorySetResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventorySetResponse".'
        type: string
    type: object
  InvoiceSummary:
    properties:
      additionalChargeSummaries:
        description: Summary of the total amounts of the additional charges.
        items:
          $ref: '#/definitions/InvoiceSummaryAdditionalChargeSummary'
        type: array
      customerBalance:
        $ref: '#/definitions/Amount'
        description: |-
          [required] Customer balance on this invoice. A negative amount means the customer is paying, a positive one means the customer is receiving money. Note: the sum of merchant_balance, customer_balance and google_balance must always be zero.

          Furthermore the absolute value of this amount is expected to be equal to the sum of product amount and additional charges, minus promotions.
      googleBalance:
        $ref: '#/definitions/Amount'
        description: '[required] Google balance on this invoice. A negative amount means Google is paying, a positive one means Google is receiving money. Note: the sum of merchant_balance, customer_balance and google_balance must always be zero.'
      merchantBalance:
        $ref: '#/definitions/Amount'
        description: '[required] Merchant balance on this invoice. A negative amount means the merchant is paying, a positive one means the merchant is receiving money. Note: the sum of merchant_balance, customer_balance and google_balance must always be zero.'
      productTotal:
        $ref: '#/definitions/Amount'
        description: '[required] Total price for the product.'
      promotionSummaries:
        description: Summary for each promotion.
        items:
          $ref: '#/definitions/Promotion'
        type: array
    type: object
  InvoiceSummaryAdditionalChargeSummary:
    properties:
      totalAmount:
        $ref: '#/definitions/Amount'
        description: '[required] Total additional charge for this type.'
      type:
        description: '[required] Type of the additional charge.'
        type: string
    type: object
  LiaAboutPageSettings:
    properties:
      status:
        description: The status of the verification process for the About page.
        type: string
      url:
        description: The URL for the About page.
        type: string
    type: object
  LiaCountrySettings:
    properties:
      about:
        $ref: '#/definitions/LiaAboutPageSettings'
        description: The settings for the About page.
      country:
        description: CLDR country code (e.g. "US").
        type: string
      hostedLocalStorefrontActive:
        description: The status of the "Merchant hosted local storefront" feature.
        type: boolean
      inventory:
        $ref: '#/definitions/LiaInventorySettings'
        description: LIA inventory verification settings.
      onDisplayToOrder:
        $ref: '#/definitions/LiaOnDisplayToOrderSettings'
        description: LIA "On Display To Order" settings.
      posDataProvider:
        $ref: '#/definitions/LiaPosDataProvider'
        description: The POS data provider linked with this country.
      storePickupActive:
        description: The status of the "Store pickup" feature.
        type: boolean
    type: object
  LiaInventorySettings:
    properties:
      inventoryVerificationContactEmail:
        description: The email of the contact for the inventory verification process.
        type: string
      inventoryVerificationContactName:
        description: The name of the contact for the inventory verification process.
        type: string
      inventoryVerificationContactStatus:
        description: The status of the verification contact.
        type: string
      status:
        description: The status of the inventory verification process.
        type: string
    type: object
  LiaOnDisplayToOrderSettings:
    properties:
      shippingCostPolicyUrl:
        description: Shipping cost and policy URL.
        type: string
      status:
        description: The status of the ?On display to order? feature.
        type: string
    type: object
  LiaPosDataProvider:
    properties:
      posDataProviderId:
        description: The ID of the POS data provider.
        format: uint64
        type: string
      posExternalAccountId:
        description: The account ID by which this merchant is known to the POS data provider.
        type: string
    type: object
  LiaSettings:
    description: Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role.
    properties:
      accountId:
        description: 'The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.'
        format: uint64
        type: string
      countrySettings:
        description: The LIA settings for each country.
        items:
          $ref: '#/definitions/LiaCountrySettings'
        type: array
      kind:
        default: 'content#liaSettings'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liaSettings".'
        type: string
    type: object
  LiasettingsCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/LiasettingsCustomBatchRequestEntry'
        type: array
    type: object
  LiasettingsCustomBatchRequestEntry:
    properties:
      accountId:
        description: The ID of the account for which to get/update account shipping settings.
        format: uint64
        type: string
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      contactEmail:
        description: Inventory validation contact email. Required only for SetInventoryValidationContact.
        type: string
      contactName:
        description: Inventory validation contact name. Required only for SetInventoryValidationContact.
        type: string
      country:
        description: The country code. Required only for RequestInventoryVerification.
        type: string
      gmbEmail:
        description: The GMB account. Required only for RequestGmbAccess.
        type: string
      liaSettings:
        $ref: '#/definitions/LiaSettings'
        description: The account Lia settings to update. Only defined if the method is update.
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        type: string
      posDataProviderId:
        description: The ID of POS data provider. Required only for SetPosProvider.
        format: uint64
        type: string
      posExternalAccountId:
        description: The account ID by which this merchant is known to the POS provider.
        type: string
    type: object
  LiasettingsCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/LiasettingsCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#liasettingsCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsCustomBatchResponse".'
        type: string
    type: object
  LiasettingsCustomBatchResponseEntry:
    properties:
      batchId:
        description: The ID of the request entry to which this entry responds.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: 'A list of errors defined if, and only if, the request failed.'
      gmbAccounts:
        $ref: '#/definitions/GmbAccounts'
        description: The the list of accessible GMB accounts.
      kind:
        default: 'content#liasettingsCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsCustomBatchResponseEntry".'
        type: string
      liaSettings:
        $ref: '#/definitions/LiaSettings'
        description: The retrieved or updated Lia settings.
      posDataProviders:
        description: The list of POS data providers.
        items:
          $ref: '#/definitions/PosDataProviders'
        type: array
    type: object
  LiasettingsGetAccessibleGmbAccountsResponse:
    properties:
      accountId:
        description: The ID of the account.
        format: uint64
        type: string
      gmbAccounts:
        description: A list of GMB accounts which are available to the merchant.
        items:
          $ref: '#/definitions/GmbAccountsGmbAccount'
        type: array
      kind:
        default: 'content#liasettingsGetAccessibleGmbAccountsResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsGetAccessibleGmbAccountsResponse".'
        type: string
    type: object
  LiasettingsListPosDataProvidersResponse:
    properties:
      kind:
        default: 'content#liasettingsListPosDataProvidersResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsListPosDataProvidersResponse".'
        type: string
      posDataProviders:
        description: The list of POS data providers for each eligible country
        items:
          $ref: '#/definitions/PosDataProviders'
        type: array
    type: object
  LiasettingsListResponse:
    properties:
      kind:
        default: 'content#liasettingsListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of LIA settings.
        type: string
      resources:
        items:
          $ref: '#/definitions/LiaSettings'
        type: array
    type: object
  LiasettingsRequestGmbAccessResponse:
    properties:
      kind:
        default: 'content#liasettingsRequestGmbAccessResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsRequestGmbAccessResponse".'
        type: string
    type: object
  LiasettingsRequestInventoryVerificationResponse:
    properties:
      kind:
        default: 'content#liasettingsRequestInventoryVerificationResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsRequestInventoryVerificationResponse".'
        type: string
    type: object
  LiasettingsSetInventoryVerificationContactResponse:
    properties:
      kind:
        default: 'content#liasettingsSetInventoryVerificationContactResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsSetInventoryVerificationContactResponse".'
        type: string
    type: object
  LiasettingsSetPosDataProviderResponse:
    properties:
      kind:
        default: 'content#liasettingsSetPosDataProviderResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#liasettingsSetPosDataProviderResponse".'
        type: string
    type: object
  LocationIdSet:
    properties:
      locationIds:
        description: 'A non-empty list of location IDs. They must all be of the same location type (e.g., state).'
        items:
          type: string
        type: array
    type: object
  LoyaltyPoints:
    properties:
      name:
        description: Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.
        type: string
      pointsValue:
        description: The retailer's loyalty points in absolute value.
        format: int64
        type: string
      ratio:
        description: 'The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.'
        format: double
        type: number
    type: object
  MerchantOrderReturn:
    properties:
      creationDate:
        type: string
      merchantOrderId:
        type: string
      orderId:
        type: string
      orderReturnId:
        type: string
      returnItems:
        items:
          $ref: '#/definitions/MerchantOrderReturnItem'
        type: array
      returnShipments:
        items:
          $ref: '#/definitions/ReturnShipment'
        type: array
    type: object
  MerchantOrderReturnItem:
    properties:
      customerReturnReason:
        $ref: '#/definitions/CustomerReturnReason'
      itemId:
        type: string
      merchantReturnReason:
        $ref: '#/definitions/RefundReason'
      product:
        $ref: '#/definitions/OrderLineItemProduct'
      returnShipmentIds:
        items:
          type: string
        type: array
      state:
        type: string
    type: object
  Order:
    description: Order. All methods require the order manager role.
    properties:
      acknowledged:
        description: Whether the order was acknowledged.
        type: boolean
      channelType:
        description: 'The channel type of the order: "purchaseOnGoogle" or "googleExpress".'
        type: string
      customer:
        $ref: '#/definitions/OrderCustomer'
        description: The details of the customer who placed the order.
      deliveryDetails:
        $ref: '#/definitions/OrderDeliveryDetails'
        description: The details for the delivery.
      id:
        description: The REST id of the order. Globally unique.
        type: string
      kind:
        default: 'content#order'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#order".'
        type: string
      lineItems:
        description: Line items that are ordered.
        items:
          $ref: '#/definitions/OrderLineItem'
        type: array
      merchantId:
        format: uint64
        type: string
      merchantOrderId:
        description: Merchant-provided id of the order.
        type: string
      netAmount:
        $ref: '#/definitions/Price'
        description: 'The net amount for the order. For example, if an order was originally for a grand total of $100 and a refund was issued for $20, the net amount will be $80.'
      paymentMethod:
        $ref: '#/definitions/OrderPaymentMethod'
        description: The details of the payment method.
      paymentStatus:
        description: The status of the payment.
        type: string
      placedDate:
        description: 'The date when the order was placed, in ISO 8601 format.'
        type: string
      promotions:
        description: Deprecated. Ignored if provided for createTestOrder. The details of the merchant provided promotions applied to the order. More details about the program are here.
        items:
          $ref: '#/definitions/OrderLegacyPromotion'
        type: array
      refunds:
        description: Refunds for the order.
        items:
          $ref: '#/definitions/OrderRefund'
        type: array
      shipments:
        description: Shipments of the order.
        items:
          $ref: '#/definitions/OrderShipment'
        type: array
      shippingCost:
        $ref: '#/definitions/Price'
        description: The total cost of shipping for all items.
      shippingCostTax:
        $ref: '#/definitions/Price'
        description: The tax for the total shipping cost.
      shippingOption:
        description: The requested shipping option.
        type: string
      status:
        description: The status of the order.
        type: string
      taxCollector:
        description: The party responsible for collecting and remitting taxes.
        type: string
    type: object
  OrderAddress:
    properties:
      country:
        description: CLDR country code (e.g. "US").
        type: string
      fullAddress:
        description: |-
          Strings representing the lines of the printed label for mailing the order, for example:
          John Smith
          1600 Amphitheatre Parkway
          Mountain View, CA, 94043
          United States
        items:
          type: string
        type: array
      isPostOfficeBox:
        description: Whether the address is a post office box.
        type: boolean
      locality:
        description: 'City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).'
        type: string
      postalCode:
        description: Postal Code or ZIP (e.g. "94043").
        type: string
      recipientName:
        description: Name of the recipient.
        type: string
      region:
        description: 'Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").'
        type: string
      streetAddress:
        description: Street-level part of the address.
        items:
          type: string
        type: array
    type: object
  OrderCancellation:
    properties:
      actor:
        description: The actor that created the cancellation.
        type: string
      creationDate:
        description: 'Date on which the cancellation has been created, in ISO 8601 format.'
        type: string
      quantity:
        description: The quantity that was canceled.
        format: uint32
        type: integer
      reason:
        description: The reason for the cancellation. Orders that are cancelled with a noInventory reason will lead to the removal of the product from Shopping Actions until you make an update to that product. This will not affect your Shopping ads.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrderCustomer:
    properties:
      email:
        description: Deprecated.
        type: string
      explicitMarketingPreference:
        description: Deprecated. Please use marketingRightsInfo instead.
        type: boolean
      fullName:
        description: Full name of the customer.
        type: string
      marketingRightsInfo:
        $ref: '#/definitions/OrderCustomerMarketingRightsInfo'
        description: Customer's marketing preferences.
    type: object
  OrderCustomerMarketingRightsInfo:
    properties:
      explicitMarketingPreference:
        description: 'Last known user selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty.'
        type: string
      lastUpdatedTimestamp:
        description: 'Timestamp when last time marketing preference was updated. Could be empty, if user wasn''t offered a selection yet.'
        type: string
      marketingEmailAddress:
        description: Email address that can be used for marketing purposes. This field is only filled when explicitMarketingPreference is equal to 'granted'.
        type: string
    type: object
  OrderDeliveryDetails:
    properties:
      address:
        $ref: '#/definitions/OrderAddress'
        description: The delivery address
      phoneNumber:
        description: The phone number of the person receiving the delivery.
        type: string
    type: object
  OrderLegacyPromotion:
    properties:
      benefits:
        items:
          $ref: '#/definitions/OrderLegacyPromotionBenefit'
        type: array
      effectiveDates:
        description: |-
          The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review.
          Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format.
        type: string
      genericRedemptionCode:
        description: Optional. The text code that corresponds to the promotion when applied on the retailer?s website.
        type: string
      id:
        description: The unique ID of the promotion.
        type: string
      longTitle:
        description: The full title of the promotion.
        type: string
      productApplicability:
        description: Whether the promotion is applicable to all products or only specific products.
        type: string
      redemptionChannel:
        description: Indicates that the promotion is valid online.
        type: string
    type: object
  OrderLegacyPromotionBenefit:
    properties:
      discount:
        $ref: '#/definitions/Price'
        description: The discount in the order price when the promotion is applied.
      offerIds:
        description: The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.
        items:
          type: string
        type: array
      subType:
        description: Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types.
        type: string
      taxImpact:
        $ref: '#/definitions/Price'
        description: The impact on tax when the promotion is applied.
      type:
        description: Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping).
        type: string
    type: object
  OrderLineItem:
    properties:
      annotations:
        description: Annotations that are attached to the line item.
        items:
          $ref: '#/definitions/OrderMerchantProvidedAnnotation'
        type: array
      cancellations:
        description: Cancellations of the line item.
        items:
          $ref: '#/definitions/OrderCancellation'
        type: array
      id:
        description: The id of the line item.
        type: string
      price:
        $ref: '#/definitions/Price'
        description: 'Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20.'
      product:
        $ref: '#/definitions/OrderLineItemProduct'
        description: Product data as seen by customer from the time of the order placement. Note that certain attributes values (e.g. title or gtin) might be reformatted and no longer match values submitted via product feed.
      quantityCanceled:
        description: Number of items canceled.
        format: uint32
        type: integer
      quantityDelivered:
        description: Number of items delivered.
        format: uint32
        type: integer
      quantityOrdered:
        description: Number of items ordered.
        format: uint32
        type: integer
      quantityPending:
        description: Number of items pending.
        format: uint32
        type: integer
      quantityReturned:
        description: Number of items returned.
        format: uint32
        type: integer
      quantityShipped:
        description: Number of items shipped.
        format: uint32
        type: integer
      returnInfo:
        $ref: '#/definitions/OrderLineItemReturnInfo'
        description: Details of the return policy for the line item.
      returns:
        description: Returns of the line item.
        items:
          $ref: '#/definitions/OrderReturn'
        type: array
      shippingDetails:
        $ref: '#/definitions/OrderLineItemShippingDetails'
        description: Details of the requested shipping for the line item.
      tax:
        $ref: '#/definitions/Price'
        description: 'Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4.'
    type: object
  OrderLineItemProduct:
    properties:
      brand:
        description: Brand of the item.
        type: string
      channel:
        description: The item's channel (online or local).
        type: string
      condition:
        description: Condition or state of the item.
        type: string
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      fees:
        description: Associated fees at order creation time.
        items:
          $ref: '#/definitions/OrderLineItemProductFee'
        type: array
      gtin:
        description: Global Trade Item Number (GTIN) of the item.
        type: string
      id:
        description: The REST id of the product.
        type: string
      imageLink:
        description: URL of an image of the item.
        type: string
      itemGroupId:
        description: Shared identifier for all variants of the same product.
        type: string
      mpn:
        description: Manufacturer Part Number (MPN) of the item.
        type: string
      offerId:
        description: An identifier of the item.
        type: string
      price:
        $ref: '#/definitions/Price'
        description: Price of the item.
      shownImage:
        description: URL to the cached image shown to the user when order was placed.
        type: string
      targetCountry:
        description: The CLDR territory code of the target country of the product.
        type: string
      title:
        description: The title of the product.
        type: string
      variantAttributes:
        description: 'Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.'
        items:
          $ref: '#/definitions/OrderLineItemProductVariantAttribute'
        type: array
    type: object
  OrderLineItemProductFee:
    properties:
      amount:
        $ref: '#/definitions/Price'
        description: Amount of the fee.
      name:
        description: Name of the fee.
        type: string
    type: object
  OrderLineItemProductVariantAttribute:
    properties:
      dimension:
        description: The dimension of the variant.
        type: string
      value:
        description: The value for the dimension.
        type: string
    type: object
  OrderLineItemReturnInfo:
    properties:
      daysToReturn:
        description: How many days later the item can be returned.
        format: int32
        type: integer
      isReturnable:
        description: Whether the item is returnable.
        type: boolean
      policyUrl:
        description: URL of the item return policy.
        type: string
    type: object
  OrderLineItemShippingDetails:
    properties:
      deliverByDate:
        description: 'The delivery by date, in ISO 8601 format.'
        type: string
      method:
        $ref: '#/definitions/OrderLineItemShippingDetailsMethod'
        description: Details of the shipping method.
      shipByDate:
        description: 'The ship by date, in ISO 8601 format.'
        type: string
    type: object
  OrderLineItemShippingDetailsMethod:
    properties:
      carrier:
        description: 'The carrier for the shipping. Optional. See shipments[].carrier for a list of acceptable values.'
        type: string
      maxDaysInTransit:
        description: Maximum transit time.
        format: uint32
        type: integer
      methodName:
        description: The name of the shipping method.
        type: string
      minDaysInTransit:
        description: Minimum transit time.
        format: uint32
        type: integer
    type: object
  OrderMerchantProvidedAnnotation:
    properties:
      key:
        description: Key for additional merchant provided (as key-value pairs) annotation about the line item.
        type: string
      value:
        description: Value for additional merchant provided (as key-value pairs) annotation about the line item.
        type: string
    type: object
  OrderPaymentMethod:
    properties:
      billingAddress:
        $ref: '#/definitions/OrderAddress'
        description: The billing address.
      expirationMonth:
        description: 'The card expiration month (January = 1, February = 2 etc.).'
        format: int32
        type: integer
      expirationYear:
        description: 'The card expiration year (4-digit, e.g. 2015).'
        format: int32
        type: integer
      lastFourDigits:
        description: The last four digits of the card number.
        type: string
      phoneNumber:
        description: The billing phone number.
        type: string
      type:
        description: |-
          The type of instrument.

          Acceptable values are:  
          - "AMEX" 
          - "DISCOVER" 
          - "JCB" 
          - "MASTERCARD" 
          - "UNIONPAY" 
          - "VISA" 
          - ""
        type: string
    type: object
  OrderRefund:
    properties:
      actor:
        description: The actor that created the refund.
        type: string
      amount:
        $ref: '#/definitions/Price'
        description: The amount that is refunded.
      creationDate:
        description: 'Date on which the item has been created, in ISO 8601 format.'
        type: string
      reason:
        description: The reason for the refund.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrderReportDisbursement:
    description: Order disbursement. All methods require the payment analyst role.
    properties:
      disbursementAmount:
        $ref: '#/definitions/Price'
        description: The disbursement amount.
      disbursementCreationDate:
        description: 'The disbursement date, in ISO 8601 format.'
        type: string
      disbursementDate:
        description: 'The date the disbursement was initiated, in ISO 8601 format.'
        type: string
      disbursementId:
        description: The ID of the disbursement.
        type: string
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
    type: object
  OrderReportTransaction:
    properties:
      disbursementAmount:
        $ref: '#/definitions/Price'
        description: The disbursement amount.
      disbursementCreationDate:
        description: 'The date the disbursement was created, in ISO 8601 format.'
        type: string
      disbursementDate:
        description: 'The date the disbursement was initiated, in ISO 8601 format.'
        type: string
      disbursementId:
        description: The ID of the disbursement.
        type: string
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      merchantOrderId:
        description: Merchant-provided id of the order.
        type: string
      orderId:
        description: The id of the order.
        type: string
      productAmount:
        $ref: '#/definitions/Amount'
        description: Total amount for the items.
      productAmountWithRemittedTax:
        $ref: '#/definitions/ProductAmount'
        description: Total amount with remitted tax for the items.
      transactionDate:
        description: 'The date of the transaction, in ISO 8601 format.'
        type: string
    type: object
  OrderReturn:
    properties:
      actor:
        description: The actor that created the refund.
        type: string
      creationDate:
        description: 'Date on which the item has been created, in ISO 8601 format.'
        type: string
      quantity:
        description: Quantity that is returned.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrderShipment:
    properties:
      carrier:
        description: |-
          The carrier handling the shipment.

          Acceptable values for US are:  
          - "gsx" 
          - "ups" 
          - "usps" 
          - "fedex" 
          - "dhl" 
          - "ecourier" 
          - "cxt" 
          - "google" 
          - "ontrac" 
          - "emsy" 
          - "ont" 
          - "deliv" 
          - "dynamex" 
          - "lasership" 
          - "mpx" 
          - "uds"  

          Acceptable values for FR are:  
          - "colissimo" 
          - "chronopost"
        type: string
      creationDate:
        description: 'Date on which the shipment has been created, in ISO 8601 format.'
        type: string
      deliveryDate:
        description: 'Date on which the shipment has been delivered, in ISO 8601 format. Present only if status is delivered'
        type: string
      id:
        description: The id of the shipment.
        type: string
      lineItems:
        description: The line items that are shipped.
        items:
          $ref: '#/definitions/OrderShipmentLineItemShipment'
        type: array
      status:
        description: The status of the shipment.
        type: string
      trackingId:
        description: The tracking id for the shipment.
        type: string
    type: object
  OrderShipmentLineItemShipment:
    properties:
      lineItemId:
        description: The id of the line item that is shipped. Either lineItemId or productId is required.
        type: string
      productId:
        description: The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity that is shipped.
        format: uint32
        type: integer
    type: object
  OrderinvoicesCreateChargeInvoiceRequest:
    properties:
      invoiceId:
        description: '[required] The ID of the invoice.'
        type: string
      invoiceSummary:
        $ref: '#/definitions/InvoiceSummary'
        description: '[required] Invoice summary.'
      lineItemInvoices:
        description: '[required] Invoice details per line item.'
        items:
          $ref: '#/definitions/ShipmentInvoiceLineItemInvoice'
        type: array
      operationId:
        description: '[required] The ID of the operation, unique across all operations for a given order.'
        type: string
      shipmentGroupId:
        description: '[required] ID of the shipment group.'
        type: string
    type: object
  OrderinvoicesCreateChargeInvoiceResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#orderinvoicesCreateChargeInvoiceResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderinvoicesCreateChargeInvoiceResponse".'
        type: string
    type: object
  OrderinvoicesCreateRefundInvoiceRequest:
    properties:
      invoiceId:
        description: '[required] The ID of the invoice.'
        type: string
      operationId:
        description: '[required] The ID of the operation, unique across all operations for a given order.'
        type: string
      refundOnlyOption:
        $ref: '#/definitions/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption'
        description: Option to create a refund-only invoice. Exactly one of refundOnlyOption or returnOption must be provided.
      returnOption:
        $ref: '#/definitions/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption'
        description: Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of refundOnlyOption or returnOption must be provided.
      shipmentInvoices:
        description: Invoice details for different shipment groups.
        items:
          $ref: '#/definitions/ShipmentInvoice'
        type: array
    type: object
  OrderinvoicesCreateRefundInvoiceResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#orderinvoicesCreateRefundInvoiceResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderinvoicesCreateRefundInvoiceResponse".'
        type: string
    type: object
  OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption:
    properties:
      description:
        description: Optional description of the refund reason.
        type: string
      reason:
        description: '[required] Reason for the refund.'
        type: string
    type: object
  OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption:
    properties:
      description:
        description: Optional description of the return reason.
        type: string
      reason:
        description: '[required] Reason for the return.'
        type: string
    type: object
  OrderpaymentsNotifyAuthApprovedRequest:
    properties:
      authAmountPretax:
        $ref: '#/definitions/Price'
        description: Authorized amount for pre-tax charge on user's credit card.
      authAmountTax:
        $ref: '#/definitions/Price'
        description: Authorized amount for tax charge on user's credit card.
    type: object
  OrderpaymentsNotifyAuthApprovedResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#orderpaymentsNotifyAuthApprovedResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderpaymentsNotifyAuthApprovedResponse".'
        type: string
    type: object
  OrderpaymentsNotifyAuthDeclinedRequest:
    properties:
      declineReason:
        description: Reason why payment authorization was declined.
        type: string
    type: object
  OrderpaymentsNotifyAuthDeclinedResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#orderpaymentsNotifyAuthDeclinedResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderpaymentsNotifyAuthDeclinedResponse".'
        type: string
    type: object
  OrderpaymentsNotifyChargeRequest:
    properties:
      chargeState:
        description: Whether charge was successful.
        type: string
      invoiceId:
        description: Deprecated. Please use invoiceIds instead.
        type: string
      invoiceIds:
        description: Invoice IDs from the orderinvoices service that correspond to the charge.
        items:
          type: string
        type: array
    type: object
  OrderpaymentsNotifyChargeResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#orderpaymentsNotifyChargeResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderpaymentsNotifyChargeResponse".'
        type: string
    type: object
  OrderpaymentsNotifyRefundRequest:
    properties:
      invoiceId:
        description: Deprecated. Please use invoiceIds instead.
        type: string
      invoiceIds:
        description: Invoice IDs from the orderinvoices service that correspond to the refund.
        items:
          type: string
        type: array
      refundState:
        description: Whether refund was successful.
        type: string
    type: object
  OrderpaymentsNotifyRefundResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#orderpaymentsNotifyRefundResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderpaymentsNotifyRefundResponse".'
        type: string
    type: object
  OrderreportsListDisbursementsResponse:
    properties:
      disbursements:
        description: The list of disbursements.
        items:
          $ref: '#/definitions/OrderReportDisbursement'
        type: array
      kind:
        default: 'content#orderreportsListDisbursementsResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderreportsListDisbursementsResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of disbursements.
        type: string
    type: object
  OrderreportsListTransactionsResponse:
    properties:
      kind:
        default: 'content#orderreportsListTransactionsResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderreportsListTransactionsResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of transactions.
        type: string
      transactions:
        description: The list of transactions.
        items:
          $ref: '#/definitions/OrderReportTransaction'
        type: array
    type: object
  OrderreturnsListResponse:
    properties:
      kind:
        default: 'content#orderreturnsListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#orderreturnsListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of returns.
        type: string
      resources:
        items:
          $ref: '#/definitions/MerchantOrderReturn'
        type: array
    type: object
  OrdersAcknowledgeRequest:
    properties:
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
    type: object
  OrdersAcknowledgeResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersAcknowledgeResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersAcknowledgeResponse".'
        type: string
    type: object
  OrdersAdvanceTestOrderResponse:
    properties:
      kind:
        default: 'content#ordersAdvanceTestOrderResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersAdvanceTestOrderResponse".'
        type: string
    type: object
  OrdersCancelLineItemRequest:
    properties:
      amount:
        $ref: '#/definitions/Price'
        description: Deprecated. Please use amountPretax and amountTax instead.
      amountPretax:
        $ref: '#/definitions/Price'
        description: 'Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.'
      amountTax:
        $ref: '#/definitions/Price'
        description: 'Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.'
      lineItemId:
        description: The ID of the line item to cancel. Either lineItemId or productId is required.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      productId:
        description: The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to cancel.
        format: uint32
        type: integer
      reason:
        description: The reason for the cancellation.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCancelLineItemResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersCancelLineItemResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelLineItemResponse".'
        type: string
    type: object
  OrdersCancelRequest:
    properties:
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      reason:
        description: The reason for the cancellation.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCancelResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersCancelResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelResponse".'
        type: string
    type: object
  OrdersCancelTestOrderByCustomerRequest:
    properties:
      reason:
        description: The reason for the cancellation.
        type: string
    type: object
  OrdersCancelTestOrderByCustomerResponse:
    properties:
      kind:
        default: 'content#ordersCancelTestOrderByCustomerResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelTestOrderByCustomerResponse".'
        type: string
    type: object
  OrdersCreateTestOrderRequest:
    properties:
      country:
        description: |-
          The  CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via template_name, or the addresses of orders created via test_order.

          Acceptable values are:  
          - "US" 
          - "FR"  Defaults to US.
        type: string
      templateName:
        description: The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template.
        type: string
      testOrder:
        $ref: '#/definitions/TestOrder'
        description: The test order to create.
    type: object
  OrdersCreateTestOrderResponse:
    properties:
      kind:
        default: 'content#ordersCreateTestOrderResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCreateTestOrderResponse".'
        type: string
      orderId:
        description: The ID of the newly created test order.
        type: string
    type: object
  OrdersCreateTestReturnRequest:
    properties:
      items:
        description: Returned items.
        items:
          $ref: '#/definitions/OrdersCustomBatchRequestEntryCreateTestReturnReturnItem'
        type: array
    type: object
  OrdersCreateTestReturnResponse:
    properties:
      kind:
        default: 'content#ordersCreateTestReturnResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCreateTestReturnResponse".'
        type: string
      returnId:
        description: The ID of the newly created test order return.
        type: string
    type: object
  OrdersCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/OrdersCustomBatchRequestEntry'
        type: array
    type: object
  OrdersCustomBatchRequestEntry:
    properties:
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      cancel:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryCancel'
        description: Required for cancel method.
      cancelLineItem:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryCancelLineItem'
        description: Required for cancelLineItem method.
      inStoreRefundLineItem:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryInStoreRefundLineItem'
        description: Required for inStoreReturnLineItem method.
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      merchantOrderId:
        description: The merchant order id. Required for updateMerchantOrderId and getByMerchantOrderId methods.
        type: string
      method:
        description: The method to apply.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order. Required for all methods beside get and getByMerchantOrderId.
        type: string
      orderId:
        description: The ID of the order. Required for all methods beside getByMerchantOrderId.
        type: string
      refund:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryRefund'
        description: Required for refund method.
      rejectReturnLineItem:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryRejectReturnLineItem'
        description: Required for rejectReturnLineItem method.
      returnLineItem:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryReturnLineItem'
        description: Required for returnLineItem method.
      returnRefundLineItem:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryReturnRefundLineItem'
        description: Required for returnRefundLineItem method.
      setLineItemMetadata:
        $ref: '#/definitions/OrdersCustomBatchRequestEntrySetLineItemMetadata'
        description: Required for setLineItemMetadata method.
      shipLineItems:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryShipLineItems'
        description: Required for shipLineItems method.
      updateLineItemShippingDetails:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails'
        description: Required for updateLineItemShippingDate method.
      updateShipment:
        $ref: '#/definitions/OrdersCustomBatchRequestEntryUpdateShipment'
        description: Required for updateShipment method.
    type: object
  OrdersCustomBatchRequestEntryCancel:
    properties:
      reason:
        description: The reason for the cancellation.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCustomBatchRequestEntryCancelLineItem:
    properties:
      amount:
        $ref: '#/definitions/Price'
        description: Deprecated. Please use amountPretax and amountTax instead.
      amountPretax:
        $ref: '#/definitions/Price'
        description: 'Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.'
      amountTax:
        $ref: '#/definitions/Price'
        description: 'Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.'
      lineItemId:
        description: The ID of the line item to cancel. Either lineItemId or productId is required.
        type: string
      productId:
        description: The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to cancel.
        format: uint32
        type: integer
      reason:
        description: The reason for the cancellation.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCustomBatchRequestEntryCreateTestReturnReturnItem:
    properties:
      lineItemId:
        description: The ID of the line item to return.
        type: string
      quantity:
        description: Quantity that is returned.
        format: uint32
        type: integer
    type: object
  OrdersCustomBatchRequestEntryInStoreRefundLineItem:
    properties:
      amountPretax:
        $ref: '#/definitions/Price'
        description: The amount that is refunded. Required.
      amountTax:
        $ref: '#/definitions/Price'
        description: Tax amount that correspond to refund amount in amountPretax. Required.
      lineItemId:
        description: The ID of the line item to return. Either lineItemId or productId is required.
        type: string
      productId:
        description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to return and refund.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCustomBatchRequestEntryRefund:
    properties:
      amount:
        $ref: '#/definitions/Price'
        description: Deprecated. Please use amountPretax and amountTax instead.
      amountPretax:
        $ref: '#/definitions/Price'
        description: The amount that is refunded. Either amount or amountPretax should be filled.
      amountTax:
        $ref: '#/definitions/Price'
        description: 'Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided.'
      reason:
        description: The reason for the refund.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCustomBatchRequestEntryRejectReturnLineItem:
    properties:
      lineItemId:
        description: The ID of the line item to return. Either lineItemId or productId is required.
        type: string
      productId:
        description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to return and refund.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCustomBatchRequestEntryReturnLineItem:
    properties:
      lineItemId:
        description: The ID of the line item to return. Either lineItemId or productId is required.
        type: string
      productId:
        description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to return.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCustomBatchRequestEntryReturnRefundLineItem:
    properties:
      amountPretax:
        $ref: '#/definitions/Price'
        description: 'The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method).'
      amountTax:
        $ref: '#/definitions/Price'
        description: 'Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.'
      lineItemId:
        description: The ID of the line item to return. Either lineItemId or productId is required.
        type: string
      productId:
        description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to return and refund.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersCustomBatchRequestEntrySetLineItemMetadata:
    properties:
      annotations:
        items:
          $ref: '#/definitions/OrderMerchantProvidedAnnotation'
        type: array
      lineItemId:
        description: The ID of the line item to set metadata. Either lineItemId or productId is required.
        type: string
      productId:
        description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
    type: object
  OrdersCustomBatchRequestEntryShipLineItems:
    properties:
      carrier:
        description: 'Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See shipments[].carrier in the  Orders resource representation for a list of acceptable values.'
        type: string
      lineItems:
        description: Line items to ship.
        items:
          $ref: '#/definitions/OrderShipmentLineItemShipment'
        type: array
      shipmentGroupId:
        description: ID of the shipment group. Required for orders that use the orderinvoices service.
        type: string
      shipmentId:
        description: Deprecated. Please use shipmentInfo instead. The ID of the shipment.
        type: string
      shipmentInfos:
        description: Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).
        items:
          $ref: '#/definitions/OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo'
        type: array
      trackingId:
        description: Deprecated. Please use shipmentInfo instead. The tracking id for the shipment.
        type: string
    type: object
  OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo:
    properties:
      carrier:
        description: 'The carrier handling the shipment. See shipments[].carrier in the  Orders resource representation for a list of acceptable values.'
        type: string
      shipmentId:
        description: The ID of the shipment.
        type: string
      trackingId:
        description: The tracking id for the shipment.
        type: string
    type: object
  OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails:
    properties:
      deliverByDate:
        description: 'Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated.'
        type: string
      lineItemId:
        description: The ID of the line item to set metadata. Either lineItemId or productId is required.
        type: string
      productId:
        description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      shipByDate:
        description: 'Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated.'
        type: string
    type: object
  OrdersCustomBatchRequestEntryUpdateShipment:
    properties:
      carrier:
        description: 'The carrier handling the shipment. Not updated if missing. See shipments[].carrier in the  Orders resource representation for a list of acceptable values.'
        type: string
      deliveryDate:
        description: 'Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if status is delivered.'
        type: string
      shipmentId:
        description: The ID of the shipment.
        type: string
      status:
        description: New status for the shipment. Not updated if missing.
        type: string
      trackingId:
        description: The tracking id for the shipment. Not updated if missing.
        type: string
    type: object
  OrdersCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/OrdersCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#ordersCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCustomBatchResponse".'
        type: string
    type: object
  OrdersCustomBatchResponseEntry:
    properties:
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: A list of errors defined if and only if the request failed.
      executionStatus:
        description: |-
          The status of the execution. Only defined if  
          - the request was successful; and 
          - the method is not get, getByMerchantOrderId, or one of the test methods.
        type: string
      kind:
        default: 'content#ordersCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCustomBatchResponseEntry".'
        type: string
      order:
        $ref: '#/definitions/Order'
        description: The retrieved order. Only defined if the method is get and if the request was successful.
    type: object
  OrdersGetByMerchantOrderIdResponse:
    properties:
      kind:
        default: 'content#ordersGetByMerchantOrderIdResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersGetByMerchantOrderIdResponse".'
        type: string
      order:
        $ref: '#/definitions/Order'
        description: The requested order.
    type: object
  OrdersGetTestOrderTemplateResponse:
    properties:
      kind:
        default: 'content#ordersGetTestOrderTemplateResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersGetTestOrderTemplateResponse".'
        type: string
      template:
        $ref: '#/definitions/TestOrder'
        description: The requested test order template.
    type: object
  OrdersInStoreRefundLineItemRequest:
    properties:
      amountPretax:
        $ref: '#/definitions/Price'
        description: The amount that is refunded. Required.
      amountTax:
        $ref: '#/definitions/Price'
        description: Tax amount that correspond to refund amount in amountPretax. Required.
      lineItemId:
        description: The ID of the line item to return. Either lineItemId or productId is required.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      productId:
        description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to return and refund.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersInStoreRefundLineItemResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersInStoreRefundLineItemResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersInStoreRefundLineItemResponse".'
        type: string
    type: object
  OrdersListResponse:
    properties:
      kind:
        default: 'content#ordersListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of orders.
        type: string
      resources:
        items:
          $ref: '#/definitions/Order'
        type: array
    type: object
  OrdersRefundRequest:
    properties:
      amount:
        $ref: '#/definitions/Price'
        description: Deprecated. Please use amountPretax and amountTax instead.
      amountPretax:
        $ref: '#/definitions/Price'
        description: The amount that is refunded. Either amount or amountPretax should be filled.
      amountTax:
        $ref: '#/definitions/Price'
        description: 'Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided.'
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      reason:
        description: The reason for the refund.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersRefundResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersRefundResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersRefundResponse".'
        type: string
    type: object
  OrdersRejectReturnLineItemRequest:
    properties:
      lineItemId:
        description: The ID of the line item to return. Either lineItemId or productId is required.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      productId:
        description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to return and refund.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersRejectReturnLineItemResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersRejectReturnLineItemResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersRejectReturnLineItemResponse".'
        type: string
    type: object
  OrdersReturnLineItemRequest:
    properties:
      lineItemId:
        description: The ID of the line item to return. Either lineItemId or productId is required.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      productId:
        description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to return.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersReturnLineItemResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersReturnLineItemResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersReturnLineItemResponse".'
        type: string
    type: object
  OrdersReturnRefundLineItemRequest:
    properties:
      amountPretax:
        $ref: '#/definitions/Price'
        description: 'The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method).'
      amountTax:
        $ref: '#/definitions/Price'
        description: 'Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.'
      lineItemId:
        description: The ID of the line item to return. Either lineItemId or productId is required.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      productId:
        description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      quantity:
        description: The quantity to return and refund.
        format: uint32
        type: integer
      reason:
        description: The reason for the return.
        type: string
      reasonText:
        description: The explanation of the reason.
        type: string
    type: object
  OrdersReturnRefundLineItemResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersReturnRefundLineItemResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersReturnRefundLineItemResponse".'
        type: string
    type: object
  OrdersSetLineItemMetadataRequest:
    properties:
      annotations:
        items:
          $ref: '#/definitions/OrderMerchantProvidedAnnotation'
        type: array
      lineItemId:
        description: The ID of the line item to set metadata. Either lineItemId or productId is required.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      productId:
        description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
    type: object
  OrdersSetLineItemMetadataResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersSetLineItemMetadataResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersSetLineItemMetadataResponse".'
        type: string
    type: object
  OrdersShipLineItemsRequest:
    properties:
      carrier:
        description: 'Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See shipments[].carrier in the  Orders resource representation for a list of acceptable values.'
        type: string
      lineItems:
        description: Line items to ship.
        items:
          $ref: '#/definitions/OrderShipmentLineItemShipment'
        type: array
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      shipmentGroupId:
        description: ID of the shipment group. Required for orders that use the orderinvoices service.
        type: string
      shipmentId:
        description: Deprecated. Please use shipmentInfo instead. The ID of the shipment.
        type: string
      shipmentInfos:
        description: Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).
        items:
          $ref: '#/definitions/OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo'
        type: array
      trackingId:
        description: Deprecated. Please use shipmentInfo instead. The tracking id for the shipment.
        type: string
    type: object
  OrdersShipLineItemsResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersShipLineItemsResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersShipLineItemsResponse".'
        type: string
    type: object
  OrdersUpdateLineItemShippingDetailsRequest:
    properties:
      deliverByDate:
        description: 'Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated.'
        type: string
      lineItemId:
        description: The ID of the line item to set metadata. Either lineItemId or productId is required.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      productId:
        description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
        type: string
      shipByDate:
        description: 'Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated.'
        type: string
    type: object
  OrdersUpdateLineItemShippingDetailsResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersUpdateLineItemShippingDetailsResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateLineItemShippingDetailsResponse".'
        type: string
    type: object
  OrdersUpdateMerchantOrderIdRequest:
    properties:
      merchantOrderId:
        description: The merchant order id to be assigned to the order. Must be unique per merchant.
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
    type: object
  OrdersUpdateMerchantOrderIdResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersUpdateMerchantOrderIdResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateMerchantOrderIdResponse".'
        type: string
    type: object
  OrdersUpdateShipmentRequest:
    properties:
      carrier:
        description: 'The carrier handling the shipment. Not updated if missing. See shipments[].carrier in the  Orders resource representation for a list of acceptable values.'
        type: string
      deliveryDate:
        description: 'Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if status is delivered.'
        type: string
      operationId:
        description: The ID of the operation. Unique across all operations for a given order.
        type: string
      shipmentId:
        description: The ID of the shipment.
        type: string
      status:
        description: New status for the shipment. Not updated if missing.
        type: string
      trackingId:
        description: The tracking id for the shipment. Not updated if missing.
        type: string
    type: object
  OrdersUpdateShipmentResponse:
    properties:
      executionStatus:
        description: The status of the execution.
        type: string
      kind:
        default: 'content#ordersUpdateShipmentResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateShipmentResponse".'
        type: string
    type: object
  PosCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/PosCustomBatchRequestEntry'
        type: array
    type: object
  PosCustomBatchRequestEntry:
    properties:
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      inventory:
        $ref: '#/definitions/PosInventory'
        description: The inventory to submit. Set this only if the method is inventory.
      merchantId:
        description: The ID of the POS data provider.
        format: uint64
        type: string
      method:
        type: string
      sale:
        $ref: '#/definitions/PosSale'
        description: The sale information to submit. Set this only if the method is sale.
      store:
        $ref: '#/definitions/PosStore'
        description: The store information to submit. Set this only if the method is insert.
      storeCode:
        description: The store code. Set this only if the method is delete or get.
        type: string
      targetMerchantId:
        description: The ID of the account for which to get/submit data.
        format: uint64
        type: string
    type: object
  PosCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/PosCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#posCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#posCustomBatchResponse".'
        type: string
    type: object
  PosCustomBatchResponseEntry:
    properties:
      batchId:
        description: The ID of the request entry to which this entry responds.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: 'A list of errors defined if, and only if, the request failed.'
      inventory:
        $ref: '#/definitions/PosInventory'
        description: The updated inventory information.
      kind:
        default: 'content#posCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#posCustomBatchResponseEntry".'
        type: string
      sale:
        $ref: '#/definitions/PosSale'
        description: The updated sale information.
      store:
        $ref: '#/definitions/PosStore'
        description: The retrieved or updated store information.
    type: object
  PosDataProviders:
    properties:
      country:
        description: Country code.
        type: string
      posDataProviders:
        description: A list of POS data providers.
        items:
          $ref: '#/definitions/PosDataProvidersPosDataProvider'
        type: array
    type: object
  PosDataProvidersPosDataProvider:
    properties:
      displayName:
        description: The display name of Pos data Provider.
        type: string
      fullName:
        description: The full name of this POS data Provider.
        type: string
      providerId:
        description: The ID of the account.
        format: uint64
        type: string
    type: object
  PosInventory:
    description: The absolute quantity of an item available at the given store.
    properties:
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      gtin:
        description: Global Trade Item Number.
        type: string
      itemId:
        description: A unique identifier for the item.
        type: string
      kind:
        default: 'content#posInventory'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#posInventory".'
        type: string
      price:
        $ref: '#/definitions/Price'
        description: The current price of the item.
      quantity:
        description: The available quantity of the item.
        format: int64
        type: string
      storeCode:
        description: The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.
        type: string
      targetCountry:
        description: The CLDR territory code for the item.
        type: string
      timestamp:
        description: 'The inventory timestamp, in ISO 8601 format.'
        type: string
    type: object
  PosInventoryRequest:
    properties:
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      gtin:
        description: Global Trade Item Number.
        type: string
      itemId:
        description: A unique identifier for the item.
        type: string
      price:
        $ref: '#/definitions/Price'
        description: The current price of the item.
      quantity:
        description: The available quantity of the item.
        format: int64
        type: string
      storeCode:
        description: The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.
        type: string
      targetCountry:
        description: The CLDR territory code for the item.
        type: string
      timestamp:
        description: 'The inventory timestamp, in ISO 8601 format.'
        type: string
    type: object
  PosInventoryResponse:
    properties:
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      gtin:
        description: Global Trade Item Number.
        type: string
      itemId:
        description: A unique identifier for the item.
        type: string
      kind:
        default: 'content#posInventoryResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#posInventoryResponse".'
        type: string
      price:
        $ref: '#/definitions/Price'
        description: The current price of the item.
      quantity:
        description: The available quantity of the item.
        format: int64
        type: string
      storeCode:
        description: The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.
        type: string
      targetCountry:
        description: The CLDR territory code for the item.
        type: string
      timestamp:
        description: 'The inventory timestamp, in ISO 8601 format.'
        type: string
    type: object
  PosListResponse:
    properties:
      kind:
        default: 'content#posListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#posListResponse".'
        type: string
      resources:
        items:
          $ref: '#/definitions/PosStore'
        type: array
    type: object
  PosSale:
    description: The change of the available quantity of an item at the given store.
    properties:
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      gtin:
        description: Global Trade Item Number.
        type: string
      itemId:
        description: A unique identifier for the item.
        type: string
      kind:
        default: 'content#posSale'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#posSale".'
        type: string
      price:
        $ref: '#/definitions/Price'
        description: The price of the item.
      quantity:
        description: The relative change of the available quantity. Negative for items returned.
        format: int64
        type: string
      saleId:
        description: A unique ID to group items from the same sale event.
        type: string
      storeCode:
        description: The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.
        type: string
      targetCountry:
        description: The CLDR territory code for the item.
        type: string
      timestamp:
        description: 'The inventory timestamp, in ISO 8601 format.'
        type: string
    type: object
  PosSaleRequest:
    properties:
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      gtin:
        description: Global Trade Item Number.
        type: string
      itemId:
        description: A unique identifier for the item.
        type: string
      price:
        $ref: '#/definitions/Price'
        description: The price of the item.
      quantity:
        description: The relative change of the available quantity. Negative for items returned.
        format: int64
        type: string
      saleId:
        description: A unique ID to group items from the same sale event.
        type: string
      storeCode:
        description: The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.
        type: string
      targetCountry:
        description: The CLDR territory code for the item.
        type: string
      timestamp:
        description: 'The inventory timestamp, in ISO 8601 format.'
        type: string
    type: object
  PosSaleResponse:
    properties:
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      gtin:
        description: Global Trade Item Number.
        type: string
      itemId:
        description: A unique identifier for the item.
        type: string
      kind:
        default: 'content#posSaleResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#posSaleResponse".'
        type: string
      price:
        $ref: '#/definitions/Price'
        description: The price of the item.
      quantity:
        description: The relative change of the available quantity. Negative for items returned.
        format: int64
        type: string
      saleId:
        description: A unique ID to group items from the same sale event.
        type: string
      storeCode:
        description: The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.
        type: string
      targetCountry:
        description: The CLDR territory code for the item.
        type: string
      timestamp:
        description: 'The inventory timestamp, in ISO 8601 format.'
        type: string
    type: object
  PosStore:
    description: Store resource.
    properties:
      kind:
        default: 'content#posStore'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#posStore".'
        type: string
      storeAddress:
        description: The street address of the store.
        type: string
      storeCode:
        description: A store identifier that is unique for the given merchant.
        type: string
    type: object
  PostalCodeGroup:
    properties:
      country:
        description: The CLDR territory code of the country the postal code group applies to. Required.
        type: string
      name:
        description: 'The name of the postal code group, referred to in headers. Required.'
        type: string
      postalCodeRanges:
        description: A range of postal codes. Required.
        items:
          $ref: '#/definitions/PostalCodeRange'
        type: array
    type: object
  PostalCodeRange:
    properties:
      postalCodeRangeBegin:
        description: 'A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: "94108", "9410*", "9*". Required.'
        type: string
      postalCodeRangeEnd:
        description: 'A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area. It must have the same length as postalCodeRangeBegin: if postalCodeRangeBegin is a postal code then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin is a pattern then postalCodeRangeEnd must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching postalCodeRangeBegin.'
        type: string
    type: object
  Price:
    properties:
      currency:
        description: The currency of the price.
        type: string
      value:
        description: The price represented as a number.
        type: string
    type: object
  Product:
    description: 'Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.'
    properties:
      additionalImageLinks:
        description: Additional URLs of images of the item.
        items:
          type: string
        type: array
      additionalProductTypes:
        description: Additional categories of the item (formatted as in products feed specification).
        items:
          type: string
        type: array
      adult:
        description: Set to true if the item is targeted towards adults.
        type: boolean
      adwordsGrouping:
        description: 'Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.'
        type: string
      adwordsLabels:
        description: 'Similar to adwords_grouping, but only works on CPC.'
        items:
          type: string
        type: array
      adwordsRedirect:
        description: Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
        type: string
      ageGroup:
        description: Target age group of the item.
        type: string
      aspects:
        description: Deprecated. Do not use.
        items:
          $ref: '#/definitions/ProductAspect'
        type: array
      availability:
        description: Availability status of the item.
        type: string
      availabilityDate:
        description: 'The day a pre-ordered product becomes available for delivery, in ISO 8601 format.'
        type: string
      brand:
        description: Brand of the item.
        type: string
      channel:
        description: The item's channel (online or local).
        type: string
      color:
        description: Color of the item.
        type: string
      condition:
        description: Condition or state of the item.
        type: string
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      costOfGoodsSold:
        $ref: '#/definitions/Price'
        description: Cost of goods sold. Used for gross profit reporting.
      customAttributes:
        description: 'A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., { "name": "size type", "type": "text", "value": "regular" }). This is useful for submitting attributes not explicitly exposed by the API.'
        items:
          $ref: '#/definitions/CustomAttribute'
        type: array
      customGroups:
        description: A list of custom (merchant-provided) custom attribute groups.
        items:
          $ref: '#/definitions/CustomGroup'
        type: array
      customLabel0:
        description: Custom label 0 for custom grouping of items in a Shopping campaign.
        type: string
      customLabel1:
        description: Custom label 1 for custom grouping of items in a Shopping campaign.
        type: string
      customLabel2:
        description: Custom label 2 for custom grouping of items in a Shopping campaign.
        type: string
      customLabel3:
        description: Custom label 3 for custom grouping of items in a Shopping campaign.
        type: string
      customLabel4:
        description: Custom label 4 for custom grouping of items in a Shopping campaign.
        type: string
      description:
        description: Description of the item.
        type: string
      destinations:
        description: Specifies the intended destinations for the product.
        items:
          $ref: '#/definitions/ProductDestination'
        type: array
      displayAdsId:
        description: An identifier for an item for dynamic remarketing campaigns.
        type: string
      displayAdsLink:
        description: URL directly to your item's landing page for dynamic remarketing campaigns.
        type: string
      displayAdsSimilarIds:
        description: Advertiser-specified recommendations.
        items:
          type: string
        type: array
      displayAdsTitle:
        description: Title of an item for dynamic remarketing campaigns.
        type: string
      displayAdsValue:
        description: Offer margin for dynamic remarketing campaigns.
        format: double
        type: number
      energyEfficiencyClass:
        description: The energy efficiency class as defined in EU directive 2010/30/EU.
        type: string
      expirationDate:
        description: 'Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in productstatuses as googleExpirationDate and might be earlier if expirationDate is too far in the future.'
        type: string
      gender:
        description: Target gender of the item.
        type: string
      googleProductCategory:
        description: Google's category of the item (see Google product taxonomy).
        type: string
      gtin:
        description: Global Trade Item Number (GTIN) of the item.
        type: string
      id:
        description: |-
          The REST id of the product. Content API methods that operate on products take this as their productId parameter.
          The REST id for a product is of the form channel:contentLanguage:targetCountry:offerId.
        type: string
      identifierExists:
        description: 'False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.'
        type: boolean
      imageLink:
        description: URL of an image of the item.
        type: string
      installment:
        $ref: '#/definitions/Installment'
        description: Number and amount of installments to pay for an item. Brazil only.
      isBundle:
        description: Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
        type: boolean
      itemGroupId:
        description: Shared identifier for all variants of the same product.
        type: string
      kind:
        default: 'content#product'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#product".'
        type: string
      link:
        description: URL directly linking to your item's page on your website.
        type: string
      loyaltyPoints:
        $ref: '#/definitions/LoyaltyPoints'
        description: Loyalty points that users receive after purchasing the item. Japan only.
      material:
        description: The material of which the item is made.
        type: string
      maxEnergyEfficiencyClass:
        description: The energy efficiency class as defined in EU directive 2010/30/EU.
        type: string
      maxHandlingTime:
        description: Maximal product handling time (in business days).
        format: int64
        type: string
      minEnergyEfficiencyClass:
        description: The energy efficiency class as defined in EU directive 2010/30/EU.
        type: string
      minHandlingTime:
        description: Minimal product handling time (in business days).
        format: int64
        type: string
      mobileLink:
        description: Link to a mobile-optimized version of the landing page.
        type: string
      mpn:
        description: Manufacturer Part Number (MPN) of the item.
        type: string
      multipack:
        description: The number of identical products in a merchant-defined multipack.
        format: int64
        type: string
      offerId:
        description: |-
          A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details.
          Note: Content API methods that operate on products take the REST id of the product, not this identifier.
        type: string
      onlineOnly:
        description: Deprecated. Whether an item is available for purchase only online.
        type: boolean
      pattern:
        description: The item's pattern (e.g. polka dots).
        type: string
      price:
        $ref: '#/definitions/Price'
        description: Price of the item.
      productType:
        description: Your category of the item (formatted as in products feed specification).
        type: string
      promotionIds:
        description: The unique ID of a promotion.
        items:
          type: string
        type: array
      salePrice:
        $ref: '#/definitions/Price'
        description: Advertised sale price of the item.
      salePriceEffectiveDate:
        description: Date range during which the item is on sale (see products feed specification).
        type: string
      sellOnGoogleQuantity:
        description: The quantity of the product that is available for selling on Google. Supported only for online products.
        format: int64
        type: string
      shipping:
        description: Shipping rules.
        items:
          $ref: '#/definitions/ProductShipping'
        type: array
      shippingHeight:
        $ref: '#/definitions/ProductShippingDimension'
        description: Height of the item for shipping.
      shippingLabel:
        description: 'The shipping label of the product, used to group product in account-level shipping rules.'
        type: string
      shippingLength:
        $ref: '#/definitions/ProductShippingDimension'
        description: Length of the item for shipping.
      shippingWeight:
        $ref: '#/definitions/ProductShippingWeight'
        description: Weight of the item for shipping.
      shippingWidth:
        $ref: '#/definitions/ProductShippingDimension'
        description: Width of the item for shipping.
      sizeSystem:
        description: System in which the size is specified. Recommended for apparel items.
        type: string
      sizeType:
        description: The cut of the item. Recommended for apparel items.
        type: string
      sizes:
        description: Size of the item.
        items:
          type: string
        type: array
      source:
        description: 'The source of the offer, i.e., how the offer was created.'
        type: string
      targetCountry:
        description: The CLDR territory code for the item.
        type: string
      taxes:
        description: Tax information.
        items:
          $ref: '#/definitions/ProductTax'
        type: array
      title:
        description: Title of the item.
        type: string
      unitPricingBaseMeasure:
        $ref: '#/definitions/ProductUnitPricingBaseMeasure'
        description: The preference of the denominator of the unit price.
      unitPricingMeasure:
        $ref: '#/definitions/ProductUnitPricingMeasure'
        description: The measure and dimension of an item.
      validatedDestinations:
        description: Deprecated. The read-only list of intended destinations which passed validation.
        items:
          type: string
        type: array
      warnings:
        description: Read-only warnings.
        items:
          $ref: '#/definitions/Error'
        type: array
    type: object
  ProductAmount:
    properties:
      priceAmount:
        $ref: '#/definitions/Price'
        description: The pre-tax or post-tax price depending on the location of the order.
      remittedTaxAmount:
        $ref: '#/definitions/Price'
        description: Remitted tax value.
      taxAmount:
        $ref: '#/definitions/Price'
        description: Tax value.
    type: object
  ProductAspect:
    properties:
      aspectName:
        description: The name of the aspect.
        type: string
      destinationName:
        description: The name of the destination. Leave out to apply to all destinations.
        type: string
      intention:
        description: 'Whether the aspect is required, excluded or should be validated.'
        type: string
    type: object
  ProductDestination:
    properties:
      destinationName:
        description: The name of the destination.
        type: string
      intention:
        description: 'Whether the destination is required, excluded or should be validated.'
        type: string
    type: object
  ProductShipping:
    properties:
      country:
        description: The CLDR territory code of the country to which an item will ship.
        type: string
      locationGroupName:
        description: 'The location where the shipping is applicable, represented by a location group name.'
        type: string
      locationId:
        description: The numeric id of a location that the shipping rate applies to as defined in the AdWords API.
        format: int64
        type: string
      postalCode:
        description: 'The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.'
        type: string
      price:
        $ref: '#/definitions/Price'
        description: 'Fixed shipping price, represented as a number.'
      region:
        description: The geographic region to which a shipping rate applies.
        type: string
      service:
        description: A free-form description of the service class or delivery speed.
        type: string
    type: object
  ProductShippingDimension:
    properties:
      unit:
        description: The unit of value.
        type: string
      value:
        description: The dimension of the product used to calculate the shipping cost of the item.
        format: double
        type: number
    type: object
  ProductShippingWeight:
    properties:
      unit:
        description: The unit of value.
        type: string
      value:
        description: The weight of the product used to calculate the shipping cost of the item.
        format: double
        type: number
    type: object
  ProductStatus:
    description: 'The status of a product, i.e., information about a product computed asynchronously by the data quality analysis.'
    properties:
      creationDate:
        description: 'Date on which the item has been created, in ISO 8601 format.'
        type: string
      dataQualityIssues:
        description: A list of data quality issues associated with the product.
        items:
          $ref: '#/definitions/ProductStatusDataQualityIssue'
        type: array
      destinationStatuses:
        description: The intended destinations for the product.
        items:
          $ref: '#/definitions/ProductStatusDestinationStatus'
        type: array
      googleExpirationDate:
        description: 'Date on which the item expires in Google Shopping, in ISO 8601 format.'
        type: string
      itemLevelIssues:
        description: A list of all issues associated with the product.
        items:
          $ref: '#/definitions/ProductStatusItemLevelIssue'
        type: array
      kind:
        default: 'content#productStatus'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#productStatus".'
        type: string
      lastUpdateDate:
        description: 'Date on which the item has been last updated, in ISO 8601 format.'
        type: string
      link:
        description: The link to the product.
        type: string
      product:
        $ref: '#/definitions/Product'
        description: Product data after applying all the join inputs.
      productId:
        description: The id of the product for which status is reported.
        type: string
      title:
        description: The title of the product.
        type: string
    type: object
  ProductStatusDataQualityIssue:
    properties:
      destination:
        description: The destination the issue applies to.
        type: string
      detail:
        description: A more detailed error string.
        type: string
      fetchStatus:
        description: The fetch status for landing_page_errors.
        type: string
      id:
        description: The id of the data quality issue.
        type: string
      location:
        description: The attribute name that is relevant for the issue.
        type: string
      severity:
        description: The severity of the data quality issue.
        type: string
      timestamp:
        description: The time stamp of the data quality issue.
        type: string
      valueOnLandingPage:
        description: The value of that attribute that was found on the landing page
        type: string
      valueProvided:
        description: The value the attribute had at time of evaluation.
        type: string
    type: object
  ProductStatusDestinationStatus:
    properties:
      approvalPending:
        description: Whether the approval status might change due to further processing.
        type: boolean
      approvalStatus:
        description: The destination's approval status.
        type: string
      destination:
        description: The name of the destination
        type: string
      intention:
        description: Provided for backward compatibility only. Always set to "required".
        type: string
    type: object
  ProductStatusItemLevelIssue:
    properties:
      attributeName:
        description: 'The attribute''s name, if the issue is caused by a single attribute.'
        type: string
      code:
        description: The error code of the issue.
        type: string
      description:
        description: A short issue description in English.
        type: string
      destination:
        description: The destination the issue applies to.
        type: string
      detail:
        description: A detailed issue description in English.
        type: string
      documentation:
        description: The URL of a web page to help with resolving this issue.
        type: string
      resolution:
        description: Whether the issue can be resolved by the merchant.
        type: string
      servability:
        description: How this issue affects serving of the offer.
        type: string
    type: object
  ProductTax:
    properties:
      country:
        description: 'The country within which the item is taxed, specified as a CLDR territory code.'
        type: string
      locationId:
        description: The numeric id of a location that the tax rate applies to as defined in the AdWords API.
        format: int64
        type: string
      postalCode:
        description: 'The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.'
        type: string
      rate:
        description: The percentage of tax rate that applies to the item price.
        format: double
        type: number
      region:
        description: The geographic region to which the tax rate applies.
        type: string
      taxShip:
        description: Set to true if tax is charged on shipping.
        type: boolean
    type: object
  ProductUnitPricingBaseMeasure:
    properties:
      unit:
        description: The unit of the denominator.
        type: string
      value:
        description: The denominator of the unit price.
        format: int64
        type: string
    type: object
  ProductUnitPricingMeasure:
    properties:
      unit:
        description: The unit of the measure.
        type: string
      value:
        description: The measure of an item.
        format: double
        type: number
    type: object
  ProductsCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/ProductsCustomBatchRequestEntry'
        type: array
    type: object
  ProductsCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch products request.
    properties:
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        type: string
      product:
        $ref: '#/definitions/Product'
        description: The product to insert. Only required if the method is insert.
      productId:
        description: The ID of the product to get or delete. Only defined if the method is get or delete.
        type: string
    type: object
  ProductsCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/ProductsCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#productsCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#productsCustomBatchResponse".'
        type: string
    type: object
  ProductsCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch products response.
    properties:
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: A list of errors defined if and only if the request failed.
      kind:
        default: 'content#productsCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#productsCustomBatchResponseEntry".'
        type: string
      product:
        $ref: '#/definitions/Product'
        description: The inserted product. Only defined if the method is insert and if the request was successful.
    type: object
  ProductsListResponse:
    properties:
      kind:
        default: 'content#productsListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#productsListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of products.
        type: string
      resources:
        items:
          $ref: '#/definitions/Product'
        type: array
    type: object
  ProductstatusesCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/ProductstatusesCustomBatchRequestEntry'
        type: array
    type: object
  ProductstatusesCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch productstatuses request.
    properties:
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      destinations:
        description: 'If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.'
        items:
          type: string
        type: array
      includeAttributes:
        type: boolean
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        type: string
      productId:
        description: The ID of the product whose status to get.
        type: string
    type: object
  ProductstatusesCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/ProductstatusesCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#productstatusesCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#productstatusesCustomBatchResponse".'
        type: string
    type: object
  ProductstatusesCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch productstatuses response.
    properties:
      batchId:
        description: The ID of the request entry this entry responds to.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: 'A list of errors, if the request failed.'
      kind:
        default: 'content#productstatusesCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#productstatusesCustomBatchResponseEntry".'
        type: string
      productStatus:
        $ref: '#/definitions/ProductStatus'
        description: The requested product status. Only defined if the request was successful.
    type: object
  ProductstatusesListResponse:
    properties:
      kind:
        default: 'content#productstatusesListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#productstatusesListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of products statuses.
        type: string
      resources:
        items:
          $ref: '#/definitions/ProductStatus'
        type: array
    type: object
  Promotion:
    properties:
      promotionAmount:
        $ref: '#/definitions/Amount'
        description: '[required] Amount of the promotion. The values here are the promotion applied to the unit price pretax and to the total of the tax amounts.'
      promotionId:
        description: '[required] ID of the promotion.'
        type: string
    type: object
  RateGroup:
    properties:
      applicableShippingLabels:
        description: 'A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required.'
        items:
          type: string
        type: array
      carrierRates:
        description: A list of carrier rates that can be referred to by mainTable or singleValue.
        items:
          $ref: '#/definitions/CarrierRate'
        type: array
      mainTable:
        $ref: '#/definitions/Table'
        description: 'A table defining the rate group, when singleValue is not expressive enough. Can only be set if singleValue is not set.'
      name:
        description: Name of the rate group. Optional. If set has to be unique within shipping service.
        type: string
      singleValue:
        $ref: '#/definitions/Value'
        description: The value of the rate group (e.g. flat rate $10). Can only be set if mainTable and subtables are not set.
      subtables:
        description: A list of subtables referred to by mainTable. Can only be set if mainTable is set.
        items:
          $ref: '#/definitions/Table'
        type: array
    type: object
  RefundReason:
    properties:
      description:
        type: string
      reasonCode:
        type: string
    type: object
  ReturnShipment:
    properties:
      creationDate:
        type: string
      returnMethodType:
        type: string
      shipmentId:
        type: string
      shipmentTrackingInfos:
        items:
          $ref: '#/definitions/ShipmentTrackingInfo'
        type: array
    type: object
  Row:
    properties:
      cells:
        description: 'The list of cells that constitute the row. Must have the same length as columnHeaders for two-dimensional tables, a length of 1 for one-dimensional tables. Required.'
        items:
          $ref: '#/definitions/Value'
        type: array
    type: object
  Service:
    properties:
      active:
        description: A boolean exposing the active status of the shipping service. Required.
        type: boolean
      currency:
        description: The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.
        type: string
      deliveryCountry:
        description: The CLDR territory code of the country to which the service applies. Required.
        type: string
      deliveryTime:
        $ref: '#/definitions/DeliveryTime'
        description: Time spent in various aspects from order to the delivery of the product. Required.
      eligibility:
        description: Eligibility for this service.
        type: string
      minimumOrderValue:
        $ref: '#/definitions/Price'
        description: 'Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency.'
      name:
        description: Free-form name of the service. Must be unique within target account. Required.
        type: string
      rateGroups:
        description: 'Shipping rate group definitions. Only the last one is allowed to have an empty applicableShippingLabels, which means "everything else". The other applicableShippingLabels must not overlap.'
        items:
          $ref: '#/definitions/RateGroup'
        type: array
    type: object
  ShipmentInvoice:
    properties:
      invoiceSummary:
        $ref: '#/definitions/InvoiceSummary'
        description: '[required] Invoice summary.'
      lineItemInvoices:
        description: '[required] Invoice details per line item.'
        items:
          $ref: '#/definitions/ShipmentInvoiceLineItemInvoice'
        type: array
      shipmentGroupId:
        description: '[required] ID of the shipment group.'
        type: string
    type: object
  ShipmentInvoiceLineItemInvoice:
    properties:
      lineItemId:
        description: ID of the line item. Either lineItemId or productId must be set.
        type: string
      productId:
        description: ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.
        type: string
      shipmentUnitIds:
        description: '[required] Unit IDs to define specific units within the line item.'
        items:
          type: string
        type: array
      unitInvoice:
        $ref: '#/definitions/UnitInvoice'
        description: '[required] Invoice details for a single unit.'
    type: object
  ShipmentTrackingInfo:
    properties:
      carrier:
        type: string
      trackingNumber:
        type: string
    type: object
  ShippingSettings:
    description: The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.
    properties:
      accountId:
        description: 'The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.'
        format: uint64
        type: string
      postalCodeGroups:
        description: A list of postal code groups that can be referred to in services. Optional.
        items:
          $ref: '#/definitions/PostalCodeGroup'
        type: array
      services:
        description: The target account's list of services. Optional.
        items:
          $ref: '#/definitions/Service'
        type: array
    type: object
  ShippingsettingsCustomBatchRequest:
    properties:
      entries:
        description: The request entries to be processed in the batch.
        items:
          $ref: '#/definitions/ShippingsettingsCustomBatchRequestEntry'
        type: array
    type: object
  ShippingsettingsCustomBatchRequestEntry:
    description: A batch entry encoding a single non-batch shippingsettings request.
    properties:
      accountId:
        description: The ID of the account for which to get/update account shipping settings.
        format: uint64
        type: string
      batchId:
        description: 'An entry ID, unique within the batch request.'
        format: uint32
        type: integer
      merchantId:
        description: The ID of the managing account.
        format: uint64
        type: string
      method:
        type: string
      shippingSettings:
        $ref: '#/definitions/ShippingSettings'
        description: The account shipping settings to update. Only defined if the method is update.
    type: object
  ShippingsettingsCustomBatchResponse:
    properties:
      entries:
        description: The result of the execution of the batch requests.
        items:
          $ref: '#/definitions/ShippingsettingsCustomBatchResponseEntry'
        type: array
      kind:
        default: 'content#shippingsettingsCustomBatchResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsCustomBatchResponse".'
        type: string
    type: object
  ShippingsettingsCustomBatchResponseEntry:
    description: A batch entry encoding a single non-batch shipping settings response.
    properties:
      batchId:
        description: The ID of the request entry to which this entry responds.
        format: uint32
        type: integer
      errors:
        $ref: '#/definitions/Errors'
        description: 'A list of errors defined if, and only if, the request failed.'
      kind:
        default: 'content#shippingsettingsCustomBatchResponseEntry'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsCustomBatchResponseEntry".'
        type: string
      shippingSettings:
        $ref: '#/definitions/ShippingSettings'
        description: The retrieved or updated account shipping settings.
    type: object
  ShippingsettingsGetSupportedCarriersResponse:
    properties:
      carriers:
        description: A list of supported carriers. May be empty.
        items:
          $ref: '#/definitions/CarriersCarrier'
        type: array
      kind:
        default: 'content#shippingsettingsGetSupportedCarriersResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedCarriersResponse".'
        type: string
    type: object
  ShippingsettingsGetSupportedHolidaysResponse:
    properties:
      holidays:
        description: A list of holidays applicable for delivery guarantees. May be empty.
        items:
          $ref: '#/definitions/HolidaysHoliday'
        type: array
      kind:
        default: 'content#shippingsettingsGetSupportedHolidaysResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedHolidaysResponse".'
        type: string
    type: object
  ShippingsettingsListResponse:
    properties:
      kind:
        default: 'content#shippingsettingsListResponse'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsListResponse".'
        type: string
      nextPageToken:
        description: The token for the retrieval of the next page of shipping settings.
        type: string
      resources:
        items:
          $ref: '#/definitions/ShippingSettings'
        type: array
    type: object
  Table:
    properties:
      columnHeaders:
        $ref: '#/definitions/Headers'
        description: 'Headers of the table''s columns. Optional: if not set then the table has only one dimension.'
      name:
        description: 'Name of the table. Required for subtables, ignored for the main table.'
        type: string
      rowHeaders:
        $ref: '#/definitions/Headers'
        description: Headers of the table's rows. Required.
      rows:
        description: The list of rows that constitute the table. Must have the same length as rowHeaders. Required.
        items:
          $ref: '#/definitions/Row'
        type: array
    type: object
  TestOrder:
    properties:
      customer:
        $ref: '#/definitions/TestOrderCustomer'
        description: The details of the customer who placed the order.
      enableOrderinvoices:
        description: Whether the orderinvoices service should support this order.
        type: boolean
      kind:
        default: 'content#testOrder'
        description: 'Identifies what kind of resource this is. Value: the fixed string "content#testOrder".'
        type: string
      lineItems:
        description: Line items that are ordered. At least one line item must be provided.
        items:
          $ref: '#/definitions/TestOrderLineItem'
        type: array
      notificationMode:
        description: Determines if test order must be pulled by merchant or pushed to merchant via push integration.
        type: string
      paymentMethod:
        $ref: '#/definitions/TestOrderPaymentMethod'
        description: The details of the payment method.
      predefinedDeliveryAddress:
        description: Identifier of one of the predefined delivery addresses for the delivery.
        type: string
      promotions:
        description: Deprecated. The details of the merchant provided promotions applied to the order. More details about the program are here.
        items:
          $ref: '#/definitions/OrderLegacyPromotion'
        type: array
      shippingCost:
        $ref: '#/definitions/Price'
        description: The total cost of shipping for all items.
      shippingCostTax:
        $ref: '#/definitions/Price'
        description: The tax for the total shipping cost.
      shippingOption:
        description: The requested shipping option.
        type: string
    type: object
  TestOrderCustomer:
    properties:
      email:
        description: Deprecated.
        type: string
      explicitMarketingPreference:
        description: Deprecated. Please use marketingRightsInfo instead.
        type: boolean
      fullName:
        description: Full name of the customer.
        type: string
      marketingRightsInfo:
        $ref: '#/definitions/TestOrderCustomerMarketingRightsInfo'
        description: Customer's marketing preferences.
    type: object
  TestOrderCustomerMarketingRightsInfo:
    properties:
      explicitMarketingPreference:
        description: 'Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty.'
        type: string
      lastUpdatedTimestamp:
        description: 'Timestamp when last time marketing preference was updated. Could be empty, if user wasn''t offered a selection yet.'
        type: string
    type: object
  TestOrderLineItem:
    properties:
      product:
        $ref: '#/definitions/TestOrderLineItemProduct'
        description: Product data from the time of the order placement.
      quantityOrdered:
        description: Number of items ordered.
        format: uint32
        type: integer
      returnInfo:
        $ref: '#/definitions/OrderLineItemReturnInfo'
        description: Details of the return policy for the line item.
      shippingDetails:
        $ref: '#/definitions/OrderLineItemShippingDetails'
        description: Details of the requested shipping for the line item.
      unitTax:
        $ref: '#/definitions/Price'
        description: 'Deprecated. Ignored if provided. Tax is automatically calculated for MFL orders. For non-MFL orders, tax settings from Merchant Center are applied.'
    type: object
  TestOrderLineItemProduct:
    properties:
      brand:
        description: Brand of the item.
        type: string
      channel:
        description: The item's channel.
        type: string
      condition:
        description: Condition or state of the item.
        type: string
      contentLanguage:
        description: The two-letter ISO 639-1 language code for the item.
        type: string
      gtin:
        description: Global Trade Item Number (GTIN) of the item. Optional.
        type: string
      imageLink:
        description: URL of an image of the item.
        type: string
      itemGroupId:
        description: Shared identifier for all variants of the same product. Optional.
        type: string
      mpn:
        description: Manufacturer Part Number (MPN) of the item. Optional.
        type: string
      offerId:
        description: An identifier of the item.
        type: string
      price:
        $ref: '#/definitions/Price'
        description: 'The price for the product. Tax is automatically calculated for MFL orders. For non-MFL orders, tax settings from Merchant Center are applied.'
      targetCountry:
        description: The CLDR territory code of the target country of the product.
        type: string
      title:
        description: The title of the product.
        type: string
      variantAttributes:
        description: Variant attributes for the item. Optional.
        items:
          $ref: '#/definitions/OrderLineItemProductVariantAttribute'
        type: array
    type: object
  TestOrderPaymentMethod:
    properties:
      expirationMonth:
        description: 'The card expiration month (January = 1, February = 2 etc.).'
        format: int32
        type: integer
      expirationYear:
        description: 'The card expiration year (4-digit, e.g. 2015).'
        format: int32
        type: integer
      lastFourDigits:
        description: The last four digits of the card number.
        type: string
      predefinedBillingAddress:
        description: The billing address.
        type: string
      type:
        description: The type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder.
        type: string
    type: object
  UnitInvoice:
    properties:
      additionalCharges:
        description: 'Additional charges for a unit, e.g. shipping costs.'
        items:
          $ref: '#/definitions/UnitInvoiceAdditionalCharge'
        type: array
      promotions:
        description: Promotions applied to a unit.
        items:
          $ref: '#/definitions/Promotion'
        type: array
      unitPricePretax:
        $ref: '#/definitions/Price'
        description: '[required] Price of the unit, before applying taxes.'
      unitPriceTaxes:
        description: Tax amounts to apply to the unit price.
        items:
          $ref: '#/definitions/UnitInvoiceTaxLine'
        type: array
    type: object
  UnitInvoiceAdditionalCharge:
    properties:
      additionalChargeAmount:
        $ref: '#/definitions/Amount'
        description: '[required] Amount of the additional charge.'
      additionalChargePromotions:
        description: Promotions applied to the additional charge.
        items:
          $ref: '#/definitions/Promotion'
        type: array
      type:
        description: '[required] Type of the additional charge.'
        type: string
    type: object
  UnitInvoiceTaxLine:
    properties:
      taxAmount:
        $ref: '#/definitions/Price'
        description: '[required] Tax amount for the tax type.'
      taxName:
        description: Optional name of the tax type. This should only be provided if taxType is otherFeeTax.
        type: string
      taxType:
        description: '[required] Type of the tax.'
        type: string
    type: object
  Value:
    description: 'The single value of a rate group or the value of a rate group table''s cell. Exactly one of noShipping, flatRate, pricePercentage, carrierRateName, subtableName must be set.'
    properties:
      carrierRateName:
        description: The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.
        type: string
      flatRate:
        $ref: '#/definitions/Price'
        description: A flat rate. Can only be set if all other fields are not set.
      noShipping:
        description: 'If true, then the product can''t ship. Must be true when set, can only be set if all other fields are not set.'
        type: boolean
      pricePercentage:
        description: 'A percentage of the price represented as a number in decimal notation (e.g., "5.4"). Can only be set if all other fields are not set.'
        type: string
      subtableName:
        description: 'The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set.'
        type: string
    type: object
  Weight:
    properties:
      unit:
        description: The weight unit.
        type: string
      value:
        description: The weight represented as a number.
        type: string
    type: object
