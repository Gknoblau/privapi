swagger: '2.0'
schemes:
  - https
host: redis.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Creates and manages Redis instances on the Google Cloud Platform.
  title: Google Cloud Memorystore for Redis
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.18
      format: google
      url: 'https://redis.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: redis
externalDocs:
  url: 'https://cloud.google.com/memorystore/docs/redis/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
paths:
  '/v1/{name}':
    delete:
      description: |-
        Deletes a long-running operation. This method indicates that the client is
        no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: redis.projects.locations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: |-
        Gets the latest state of a long-running operation.  Clients can use this
        method to poll the operation result at intervals as recommended by the API
        service.
      operationId: redis.projects.locations.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: |-
        Updates the metadata and configuration of a specific Redis instance.

        Completed longrunning.Operation will contain the new instance object
        in the response field. The returned operation is automatically deleted
        after a few hours, so there is no need to call DeleteOperation.
      operationId: redis.projects.locations.instances.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Instance'
        - description: |-
            Required. Unique name of the resource in this scope including project and
            location using the form:
                `projects/{project_id}/locations/{location_id}/instances/{instance_id}`

            Note: Redis instances are managed and addressed at regional level so
            location_id here refers to a GCP region; however, users may choose which
            specific zone (or collection of zones for cross-zone instances) an instance
            should be provisioned in. Refer to [location_id] and
            [alternative_location_id] fields for more details.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Required. Mask of fields to update. At least one path must be supplied in
            this field. The elements of the repeated paths field may only include these
            fields from Instance:

             *   `displayName`
             *   `labels`
             *   `memorySizeGb`
             *   `redisConfig`
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{name}/locations':
    get:
      description: Lists information about the supported locations for this service.
      operationId: redis.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: 'The resource that owns the locations collection, if applicable.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListLocationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{name}/operations':
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: redis.projects.locations.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListOperationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{name}:cancel':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Starts asynchronous cancellation on a long-running operation.  The server
        makes a best effort to cancel the operation, but success is not
        guaranteed.  If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
        Operations.GetOperation or
        other methods to check whether the cancellation succeeded or whether the
        operation completed despite cancellation. On successful cancellation,
        the operation is not deleted; instead, it becomes an operation with
        an Operation.error value with a google.rpc.Status.code of 1,
        corresponding to `Code.CANCELLED`.
      operationId: redis.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{parent}/instances':
    get:
      description: |-
        Lists all Redis instances owned by a project in either the specified
        location (region) or all locations.

        The location should have the following format:
        * `projects/{project_id}/locations/{location_id}`

        If `location_id` is specified as `-` (wildcard), then all regions
        available to the project are queried, and the results are aggregated.
      operationId: redis.projects.locations.instances.list
      parameters:
        - description: |-
            The maximum number of items to return.

            If not specified, a default value of 1000 will be used by the service.
            Regardless of the page_size value, the response may include a partial list
            and a caller should only rely on response's
            next_page_token
            to determine if there are more instances left to be queried.
          in: query
          name: pageSize
          type: integer
        - description: |-
            The next_page_token value returned from a previous List request,
            if any.
          in: query
          name: pageToken
          type: string
        - description: |-
            Required. The resource name of the instance location using the form:
                `projects/{project_id}/locations/{location_id}`
            where `location_id` refers to a GCP region
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListInstancesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a Redis instance based on the specified tier and memory size.

        By default, the instance is accessible from the project's
        [default network](/compute/docs/networks-and-firewalls#networks).

        The creation is executed asynchronously and callers may check the returned
        operation to track its progress. Once the operation is completed the Redis
        instance will be fully functional. Completed longrunning.Operation will
        contain the new instance object in the response field.

        The returned operation is automatically deleted after a few hours, so there
        is no need to call DeleteOperation.
      operationId: redis.projects.locations.instances.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Instance'
        - description: |-
            Required. The logical name of the Redis instance in the customer project
            with the following restrictions:

            * Must contain only lowercase letters, numbers, and hyphens.
            * Must start with a letter.
            * Must be between 1-40 characters.
            * Must end with a number or a letter.
            * Must be unique within the customer project / location
          in: query
          name: instanceId
          type: string
        - description: |-
            Required. The resource name of the instance location using the form:
                `projects/{project_id}/locations/{location_id}`
            where `location_id` refers to a GCP region
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
definitions:
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  GoogleCloudRedisV1LocationMetadata:
    description: |-
      This location metadata represents additional configuration options for a
      given location where a Redis instance may be created. All fields are output
      only. It is returned as content of the
      `google.cloud.location.Location.metadata` field.
    properties:
      availableZones:
        additionalProperties:
          $ref: '#/definitions/GoogleCloudRedisV1ZoneMetadata'
        description: |-
          Output only. The set of available zones in the location. The map is keyed
          by the lowercase ID of each zone, as defined by GCE. These keys can be
          specified in `location_id` or `alternative_location_id` fields when
          creating a Redis instance.
        type: object
    type: object
  GoogleCloudRedisV1OperationMetadata:
    description: Represents the v1 metadata of the long-running operation.
    properties:
      apiVersion:
        description: API version.
        type: string
      cancelRequested:
        description: Specifies if cancellation was requested for the operation.
        type: boolean
      createTime:
        description: Creation timestamp.
        format: google-datetime
        type: string
      endTime:
        description: End timestamp.
        format: google-datetime
        type: string
      statusDetail:
        description: Operation status details.
        type: string
      target:
        description: Operation target.
        type: string
      verb:
        description: Operation verb.
        type: string
    type: object
  GoogleCloudRedisV1ZoneMetadata:
    description: |-
      Defines specific information for a particular zone. Currently empty and
      reserved for future use only.
    properties: {}
    type: object
  Instance:
    description: A Google Cloud Redis instance.
    properties:
      alternativeLocationId:
        description: |-
          Optional. Only applicable to STANDARD_HA tier which protects the instance
          against zonal failures by provisioning it across two zones. If provided, it
          must be a different zone from the one provided in [location_id].
        type: string
      authorizedNetwork:
        description: |-
          Optional. The full name of the Google Compute Engine
          [network](/compute/docs/networks-and-firewalls#networks) to which the
          instance is connected. If left unspecified, the `default` network
          will be used.
        type: string
      createTime:
        description: Output only. The time the instance was created.
        format: google-datetime
        type: string
      currentLocationId:
        description: |-
          Output only. The current zone where the Redis endpoint is placed. For Basic
          Tier instances, this will always be the same as the [location_id]
          provided by the user at creation time. For Standard Tier instances,
          this can be either [location_id] or [alternative_location_id] and can
          change after a failover event.
        type: string
      displayName:
        description: An arbitrary and optional user-provided name for the instance.
        type: string
      host:
        description: |-
          Output only. Hostname or IP address of the exposed Redis endpoint used by
          clients to connect to the service.
        type: string
      labels:
        additionalProperties:
          type: string
        description: Resource labels to represent user provided metadata
        type: object
      locationId:
        description: |-
          Optional. The zone where the instance will be provisioned. If not provided,
          the service will choose a zone for the instance. For STANDARD_HA tier,
          instances will be created across two zones for protection against zonal
          failures. If [alternative_location_id] is also provided, it must be
          different from [location_id].
        type: string
      memorySizeGb:
        description: Required. Redis memory size in GiB.
        format: int32
        type: integer
      name:
        description: |-
          Required. Unique name of the resource in this scope including project and
          location using the form:
              `projects/{project_id}/locations/{location_id}/instances/{instance_id}`

          Note: Redis instances are managed and addressed at regional level so
          location_id here refers to a GCP region; however, users may choose which
          specific zone (or collection of zones for cross-zone instances) an instance
          should be provisioned in. Refer to [location_id] and
          [alternative_location_id] fields for more details.
        type: string
      port:
        description: Output only. The port number of the exposed Redis endpoint.
        format: int32
        type: integer
      redisConfigs:
        additionalProperties:
          type: string
        description: |-
          Optional. Redis configuration parameters, according to
          http://redis.io/topics/config. Currently, the only supported parameters
          are:

           *   maxmemory-policy
           *   notify-keyspace-events
        type: object
      redisVersion:
        description: |-
          Optional. The version of Redis software.
          If not provided, latest supported version will be used. Updating the
          version will perform an upgrade/downgrade to the new version. Currently,
          the supported values are `REDIS_3_2` for Redis 3.2.
        type: string
      reservedIpRange:
        description: |-
          Optional. The CIDR range of internal addresses that are reserved for this
          instance. If not provided, the service will choose an unused /29 block,
          for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique
          and non-overlapping with existing subnets in an authorized network.
        type: string
      state:
        description: Output only. The current state of this instance.
        enum:
          - STATE_UNSPECIFIED
          - CREATING
          - READY
          - UPDATING
          - DELETING
          - REPAIRING
          - MAINTENANCE
        type: string
      statusMessage:
        description: |-
          Output only. Additional information about the current status of this
          instance, if available.
        type: string
      tier:
        description: Required. The service tier of the instance.
        enum:
          - TIER_UNSPECIFIED
          - BASIC
          - STANDARD_HA
        type: string
    type: object
  ListInstancesResponse:
    description: Response for ListInstances.
    properties:
      instances:
        description: |-
          A list of Redis instances in the project in the specified location,
          or across all locations.

          If the `location_id` in the parent field of the request is "-", all regions
          available to the project are queried, and the results aggregated.
          If in such an aggregated query a location is unavailable, a dummy Redis
          entry is included in the response with the "name" field set to a value of
          the form projects/{project_id}/locations/{location_id}/instances/- and the
          "status" field set to ERROR and "status_message" field set to "location not
          available for ListInstances".
        items:
          $ref: '#/definitions/Instance'
        type: array
      nextPageToken:
        description: |-
          Token to retrieve the next page of results, or empty if there are no more
          results in the list.
        type: string
      unreachable:
        description: Locations that could not be reached.
        items:
          type: string
        type: array
    type: object
  ListLocationsResponse:
    description: The response message for Locations.ListLocations.
    properties:
      locations:
        description: A list of locations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Location'
        type: array
      nextPageToken:
        description: The standard List next-page token.
        type: string
    type: object
  ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Operation'
        type: array
    type: object
  Location:
    description: A resource that represents Google Cloud Platform location.
    properties:
      displayName:
        description: |-
          The friendly name for this location, typically a nearby city name.
          For example, "Tokyo".
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Cross-service attributes for the location. For example

              {"cloud.googleapis.com/region": "us-east1"}
        type: object
      locationId:
        description: 'Resource ID for the region. For example: "us-east1".'
        type: string
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: 'Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by Compute Engine. These keys can be specified in `location_id` or `alternative_location_id` fields when creating a Redis instance.'
        type: object
      name:
        description: 'Full resource name for the region. For example: "projects/example-project/locations/us-east1".'
        type: string
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          {

          `createTime`: The time the operation was created.

          `endTime`: The time the operation finished running.

          `target`: Server-defined resource path for the target of the operation.

          `verb`: Name of the verb executed by the operation.

          `statusDetail`: Human-readable status of the operation, if any.

          `cancelRequested`: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.

          `apiVersion`: API version used to start the operation.

          }
        type: object
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
